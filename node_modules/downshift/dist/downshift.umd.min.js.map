{"version":3,"file":"downshift.umd.min.js","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/prop-types/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/compute-scroll-into-view/dist/index.js","../src/utils.js","../src/set-a11y-status.js","../src/stateChangeTypes.js","../src/downshift.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/hooks/utils.js","../src/hooks/reducer.js","../node_modules/tslib/tslib.es6.js","../../src/hooks/useSelect/utils.ts","../src/hooks/useSelect/stateChangeTypes.js","../src/hooks/useSelect/reducer.js","../src/hooks/useSelect/index.js","../src/hooks/useCombobox/stateChangeTypes.js","../src/hooks/useCombobox/utils.js","../src/hooks/useCombobox/reducer.js","../src/hooks/useCombobox/index.js","../src/hooks/useMultipleSelection/utils.js","../src/hooks/useMultipleSelection/stateChangeTypes.js","../src/hooks/useMultipleSelection/reducer.js","../src/hooks/useMultipleSelection/index.js"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","const t=t=>\"object\"==typeof t&&null!=t&&1===t.nodeType,e=(t,e)=>(!e||\"hidden\"!==t)&&(\"visible\"!==t&&\"clip\"!==t),n=(t,n)=>{if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){const o=getComputedStyle(t,null);return e(o.overflowY,n)||e(o.overflowX,n)||(t=>{const e=(t=>{if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}})(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)})(t)}return!1},o=(t,e,n,o,l,r,i,s)=>r<t&&i>e||r>t&&i<e?0:r<=t&&s<=n||i>=e&&s>=n?r-t-o:i>e&&s<n||r<t&&s>n?i-e+l:0,l=t=>{const e=t.parentElement;return null==e?t.getRootNode().host||null:e},r=(e,r)=>{var i,s,d,h;if(\"undefined\"==typeof document)return[];const{scrollMode:c,block:f,inline:u,boundary:a,skipOverflowHiddenElements:g}=r,p=\"function\"==typeof a?a:t=>t!==a;if(!t(e))throw new TypeError(\"Invalid target\");const m=document.scrollingElement||document.documentElement,w=[];let W=e;for(;t(W)&&p(W);){if(W=l(W),W===m){w.push(W);break}null!=W&&W===document.body&&n(W)&&!n(document.documentElement)||null!=W&&n(W,g)&&w.push(W)}const b=null!=(s=null==(i=window.visualViewport)?void 0:i.width)?s:innerWidth,H=null!=(h=null==(d=window.visualViewport)?void 0:d.height)?h:innerHeight,{scrollX:y,scrollY:M}=window,{height:v,width:E,top:x,right:C,bottom:I,left:R}=e.getBoundingClientRect(),{top:T,right:B,bottom:F,left:V}=(t=>{const e=window.getComputedStyle(t);return{top:parseFloat(e.scrollMarginTop)||0,right:parseFloat(e.scrollMarginRight)||0,bottom:parseFloat(e.scrollMarginBottom)||0,left:parseFloat(e.scrollMarginLeft)||0}})(e);let k=\"start\"===f||\"nearest\"===f?x-T:\"end\"===f?I+F:x+v/2-T+F,D=\"center\"===u?R+E/2-V+B:\"end\"===u?C+B:R-V;const L=[];for(let t=0;t<w.length;t++){const e=w[t],{height:n,width:l,top:r,right:i,bottom:s,left:d}=e.getBoundingClientRect();if(\"if-needed\"===c&&x>=0&&R>=0&&I<=H&&C<=b&&x>=r&&I<=s&&R>=d&&C<=i)return L;const h=getComputedStyle(e),a=parseInt(h.borderLeftWidth,10),g=parseInt(h.borderTopWidth,10),p=parseInt(h.borderRightWidth,10),W=parseInt(h.borderBottomWidth,10);let T=0,B=0;const F=\"offsetWidth\"in e?e.offsetWidth-e.clientWidth-a-p:0,V=\"offsetHeight\"in e?e.offsetHeight-e.clientHeight-g-W:0,S=\"offsetWidth\"in e?0===e.offsetWidth?0:l/e.offsetWidth:0,X=\"offsetHeight\"in e?0===e.offsetHeight?0:n/e.offsetHeight:0;if(m===e)T=\"start\"===f?k:\"end\"===f?k-H:\"nearest\"===f?o(M,M+H,H,g,W,M+k,M+k+v,v):k-H/2,B=\"start\"===u?D:\"center\"===u?D-b/2:\"end\"===u?D-b:o(y,y+b,b,a,p,y+D,y+D+E,E),T=Math.max(0,T+M),B=Math.max(0,B+y);else{T=\"start\"===f?k-r-g:\"end\"===f?k-s+W+V:\"nearest\"===f?o(r,s,n,g,W+V,k,k+v,v):k-(r+n/2)+V/2,B=\"start\"===u?D-d-a:\"center\"===u?D-(d+l/2)+F/2:\"end\"===u?D-i+p+F:o(d,i,l,a,p+F,D,D+E,E);const{scrollLeft:t,scrollTop:h}=e;T=0===X?0:Math.max(0,Math.min(h+T/X,e.scrollHeight-n/X+V)),B=0===S?0:Math.max(0,Math.min(t+B/S,e.scrollWidth-l/S+F)),k+=h-T,D+=t-B}L.push({el:e,top:T,left:B})}return L};export{r as compute};//# sourceMappingURL=index.js.map\n","import {compute} from 'compute-scroll-into-view'\nimport React from 'react'\nimport {isPreact} from './is.macro'\n\nlet idCounter = 0\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop\n}\n\nfunction noop() {}\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\nfunction scrollIntoView(node, menuNode) {\n  if (!node) {\n    return\n  }\n\n  const actions = compute(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed',\n  })\n  actions.forEach(({el, top, left}) => {\n    el.scrollTop = top\n    el.scrollLeft = left\n  })\n}\n\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @param {Window} environment The window context where downshift renders.\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\nfunction isOrContainsNode(parent, child, environment) {\n  const result =\n    parent === child ||\n    (child instanceof environment.Node &&\n      parent.contains &&\n      parent.contains(child))\n  return result\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  let timeoutId\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n  }\n\n  function wrapper(...args) {\n    cancel()\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      fn(...args)\n    }, time)\n  }\n\n  wrapper.cancel = cancel\n\n  return wrapper\n}\n\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\nfunction callAllEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      if (fn) {\n        fn(event, ...args)\n      }\n      return (\n        event.preventDownshiftDefault ||\n        (event.hasOwnProperty('nativeEvent') &&\n          event.nativeEvent.preventDownshiftDefault)\n      )\n    })\n}\n\nfunction handleRefs(...refs) {\n  return node => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    })\n  }\n}\n\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\nfunction generateId() {\n  return String(idCounter++)\n}\n\n/**\n * This is only used in tests\n * @param {Number} num the number to set the idCounter to\n */\nfunction setIdCounter(num) {\n  idCounter = num\n}\n\n/**\n * Resets idCounter to 0. Used for SSR.\n */\nfunction resetIdCounter() {\n  // istanbul ignore next\n  if ('useId' in React) {\n    console.warn(\n      `It is not necessary to call resetIdCounter when using React 18+`,\n    )\n\n    return\n  }\n\n  idCounter = 0\n}\n\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specify if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\nfunction getA11yStatusMessage({isOpen, resultCount, previousResultCount}) {\n  if (!isOpen) {\n    return ''\n  }\n\n  if (!resultCount) {\n    return 'No results are available.'\n  }\n\n  if (resultCount !== previousResultCount) {\n    return `${resultCount} result${\n      resultCount === 1 ? ' is' : 's are'\n    } available, use up and down arrow keys to navigate. Press Enter key to select.`\n  }\n\n  return ''\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg\n  if (!arg && defaultValue) {\n    return defaultValue\n  } else {\n    return arg\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (isPreact) {\n    // then this is preact or preact X\n    return (\n      typeof element.type === 'string' || typeof element.nodeName === 'string'\n    )\n  }\n\n  // then we assume this is react\n  return typeof element.type === 'string'\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n\n  /* istanbul ignore if */\n  if (isPreact) {\n    return element.props || element.attributes\n  }\n\n  return element.props\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(`The property \"${propName}\" is required in \"${fnName}\"`)\n}\n\nconst stateKeys = [\n  'highlightedIndex',\n  'inputValue',\n  'isOpen',\n  'selectedItem',\n  'type',\n]\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\nfunction pickState(state = {}) {\n  const result = {}\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k]\n    }\n  })\n  return result\n}\n\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\nfunction getState(state, props) {\n  if (!state || !props) {\n    return state\n  }\n\n  return Object.keys(state).reduce((prevState, key) => {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key]\n\n    return prevState\n  }, {})\n}\n\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined\n}\n\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\nfunction normalizeArrowKey(event) {\n  const {key, keyCode} = event\n  /* istanbul ignore next (ie) */\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return `Arrow${key}`\n  }\n  return key\n}\n\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n\n/**\n * Returns the next non-disabled highlightedIndex value.\n *\n * @param {number} start The current highlightedIndex.\n * @param {number} offset The offset from the current highlightedIndex to start searching.\n * @param {unknown[]} items The items array.\n * @param {(item: unknown, index: number) => boolean} isItemDisabled Function that tells if an item is disabled or not.\n * @param {boolean?} circular If the search reaches the end, if it can search again starting from the other end.\n * @returns {number} The next highlightedIndex.\n */\nfunction getHighlightedIndex(\n  start,\n  offset,\n  items,\n  isItemDisabled,\n  circular = false,\n) {\n  const count = items.length\n  if (count === 0) {\n    return -1\n  }\n\n  const itemsLastIndex = count - 1\n\n  if (typeof start !== 'number' || start < 0 || start > itemsLastIndex) {\n    start = offset > 0 ? -1 : itemsLastIndex + 1\n  }\n\n  let current = start + offset\n\n  if (current < 0) {\n    current = circular ? itemsLastIndex : 0\n  } else if (current > itemsLastIndex) {\n    current = circular ? 0 : itemsLastIndex\n  }\n\n  const highlightedIndex = getNonDisabledIndex(\n    current,\n    offset < 0,\n    items,\n    isItemDisabled,\n    circular,\n  )\n\n  if (highlightedIndex === -1) {\n    return start >= count ? -1 : start\n  }\n\n  return highlightedIndex\n}\n\n/**\n * Returns the next non-disabled highlightedIndex value.\n *\n * @param {number} start The current highlightedIndex.\n * @param {boolean} backwards If true, it will search backwards from the start.\n * @param {unknown[]} items The items array.\n * @param {(item: unknown, index: number) => boolean} isItemDisabled Function that tells if an item is disabled or not.\n * @param {boolean} circular If the search reaches the end, if it can search again starting from the other end.\n * @returns {number} The next non-disabled index.\n */\nfunction getNonDisabledIndex(\n  start,\n  backwards,\n  items,\n  isItemDisabled,\n  circular = false,\n) {\n  const count = items.length\n\n  if (backwards) {\n    for (let index = start; index >= 0; index--) {\n      if (!isItemDisabled(items[index], index)) {\n        return index\n      }\n    }\n  } else {\n    for (let index = start; index < count; index++) {\n      if (!isItemDisabled(items[index], index)) {\n        return index\n      }\n    }\n  }\n\n  if (circular) {\n    return getNonDisabledIndex(\n      backwards ? count - 1 : 0,\n      backwards,\n      items,\n      isItemDisabled,\n    )\n  }\n\n  return -1\n}\n\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Window} environment The window context where downshift renders.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\nfunction targetWithinDownshift(\n  target,\n  downshiftElements,\n  environment,\n  checkActiveElement = true,\n) {\n  return (\n    environment &&\n    downshiftElements.some(\n      contextNode =>\n        contextNode &&\n        (isOrContainsNode(contextNode, target, environment) ||\n          (checkActiveElement &&\n            isOrContainsNode(\n              contextNode,\n              environment.document.activeElement,\n              environment,\n            ))),\n    )\n  )\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nlet validateControlledUnchanged = noop\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  validateControlledUnchanged = (state, prevProps, nextProps) => {\n    const warningDescription = `This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props`\n\n    Object.keys(state).forEach(propKey => {\n      if (\n        prevProps[propKey] !== undefined &&\n        nextProps[propKey] === undefined\n      ) {\n        // eslint-disable-next-line no-console\n        console.error(\n          `downshift: A component has changed the controlled prop \"${propKey}\" to be uncontrolled. ${warningDescription}`,\n        )\n      } else if (\n        prevProps[propKey] === undefined &&\n        nextProps[propKey] !== undefined\n      ) {\n        // eslint-disable-next-line no-console\n        console.error(\n          `downshift: A component has changed the uncontrolled prop \"${propKey}\" to be controlled. ${warningDescription}`,\n        )\n      }\n    })\n  }\n}\n\nexport {\n  cbToCb,\n  callAllEventHandlers,\n  handleRefs,\n  debounce,\n  scrollIntoView,\n  generateId,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n  setIdCounter,\n  resetIdCounter,\n  pickState,\n  isPlainObject,\n  normalizeArrowKey,\n  targetWithinDownshift,\n  getState,\n  isControlledProp,\n  validateControlledUnchanged,\n  getHighlightedIndex,\n  getNonDisabledIndex,\n}\n","import {debounce} from './utils'\n\nconst cleanupStatus = debounce(documentProp => {\n  getStatusDiv(documentProp).textContent = ''\n}, 500)\n\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\nfunction getStatusDiv(documentProp) {\n  let statusDiv = documentProp.getElementById('a11y-status-message')\n  if (statusDiv) {\n    return statusDiv\n  }\n\n  statusDiv = documentProp.createElement('div')\n  statusDiv.setAttribute('id', 'a11y-status-message')\n  statusDiv.setAttribute('role', 'status')\n  statusDiv.setAttribute('aria-live', 'polite')\n  statusDiv.setAttribute('aria-relevant', 'additions text')\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px',\n  })\n  documentProp.body.appendChild(statusDiv)\n  return statusDiv\n}\n\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\nexport function setStatus(status, documentProp) {\n  if (!status || !documentProp) {\n    return\n  }\n\n  const div = getStatusDiv(documentProp)\n\n  div.textContent = status\n  cleanupStatus(documentProp)\n}\n\n/**\n * Removes the status element from the DOM\n * @param {Document} documentProp \n */\nexport function cleanupStatusDiv(documentProp) {\n  const statusDiv = documentProp?.getElementById('a11y-status-message')\n\n  if (statusDiv) {\n    statusDiv.remove()\n  }\n}\n","import productionEnum from './productionEnum.macro'\n\nexport const unknown = productionEnum('__autocomplete_unknown__')\nexport const mouseUp = productionEnum('__autocomplete_mouseup__')\nexport const itemMouseEnter = productionEnum('__autocomplete_item_mouseenter__')\nexport const keyDownArrowUp = productionEnum(\n  '__autocomplete_keydown_arrow_up__',\n)\nexport const keyDownArrowDown = productionEnum(\n  '__autocomplete_keydown_arrow_down__',\n)\nexport const keyDownEscape = productionEnum('__autocomplete_keydown_escape__')\nexport const keyDownEnter = productionEnum('__autocomplete_keydown_enter__')\nexport const keyDownHome = productionEnum('__autocomplete_keydown_home__')\nexport const keyDownEnd = productionEnum('__autocomplete_keydown_end__')\nexport const clickItem = productionEnum('__autocomplete_click_item__')\nexport const blurInput = productionEnum('__autocomplete_blur_input__')\nexport const changeInput = productionEnum('__autocomplete_change_input__')\nexport const keyDownSpaceButton = productionEnum(\n  '__autocomplete_keydown_space_button__',\n)\nexport const clickButton = productionEnum('__autocomplete_click_button__')\nexport const blurButton = productionEnum('__autocomplete_blur_button__')\nexport const controlledPropUpdatedSelectedItem = productionEnum(\n  '__autocomplete_controlled_prop_updated_selected_item__',\n)\nexport const touchEnd = productionEnum('__autocomplete_touchend__')\n","/* eslint camelcase:0 */\n\nimport PropTypes from 'prop-types'\nimport {Component, cloneElement} from 'react'\nimport {isForwardRef} from 'react-is'\nimport {isPreact, isReactNative, isReactNativeWeb} from './is.macro'\nimport {setStatus} from './set-a11y-status'\nimport * as stateChangeTypes from './stateChangeTypes'\nimport {\n  handleRefs,\n  callAllEventHandlers,\n  cbToCb,\n  debounce,\n  generateId,\n  getA11yStatusMessage,\n  getElementProps,\n  isDOMElement,\n  targetWithinDownshift,\n  isPlainObject,\n  noop,\n  normalizeArrowKey,\n  pickState,\n  requiredProp,\n  scrollIntoView,\n  unwrapArray,\n  getState,\n  isControlledProp,\n  validateControlledUnchanged,\n  getHighlightedIndex,\n  getNonDisabledIndex,\n} from './utils'\n\nclass Downshift extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    defaultHighlightedIndex: PropTypes.number,\n    defaultIsOpen: PropTypes.bool,\n    initialHighlightedIndex: PropTypes.number,\n    initialSelectedItem: PropTypes.any,\n    initialInputValue: PropTypes.string,\n    initialIsOpen: PropTypes.bool,\n    getA11yStatusMessage: PropTypes.func,\n    itemToString: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onInputValueChange: PropTypes.func,\n    onUserAction: PropTypes.func,\n    onOuterClick: PropTypes.func,\n    selectedItemChanged: PropTypes.func,\n    stateReducer: PropTypes.func,\n    itemCount: PropTypes.number,\n    id: PropTypes.string,\n    environment: PropTypes.shape({\n      addEventListener: PropTypes.func.isRequired,\n      removeEventListener: PropTypes.func.isRequired,\n      document: PropTypes.shape({\n        createElement: PropTypes.func.isRequired,\n        getElementById: PropTypes.func.isRequired,\n        activeElement: PropTypes.any.isRequired,\n        body: PropTypes.any.isRequired,\n      }).isRequired,\n      Node: PropTypes.func.isRequired,\n    }),\n    suppressRefError: PropTypes.bool,\n    scrollIntoView: PropTypes.func,\n    // things we keep in state for uncontrolled components\n    // but can accept as props for controlled components\n    /* eslint-disable react/no-unused-prop-types */\n    selectedItem: PropTypes.any,\n    isOpen: PropTypes.bool,\n    inputValue: PropTypes.string,\n    highlightedIndex: PropTypes.number,\n    labelId: PropTypes.string,\n    inputId: PropTypes.string,\n    menuId: PropTypes.string,\n    getItemId: PropTypes.func,\n    /* eslint-enable react/no-unused-prop-types */\n  }\n\n  static defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage,\n    itemToString: i => {\n      if (i == null) {\n        return ''\n      }\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        isPlainObject(i) &&\n        !i.hasOwnProperty('toString')\n      ) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.',\n          'The object that was passed:',\n          i,\n        )\n      }\n      return String(i)\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n      /* istanbul ignore next (ssr) */\n      typeof window === 'undefined' || isReactNative ? undefined : window,\n    stateReducer: (state, stateToSet) => stateToSet,\n    suppressRefError: false,\n    scrollIntoView,\n  }\n\n  static stateChangeTypes = stateChangeTypes\n\n  constructor(props) {\n    super(props)\n    // fancy destructuring + defaults + aliases\n    // this basically says each value of state should either be set to\n    // the initial value or the default value if the initial value is not provided\n    const {\n      defaultHighlightedIndex,\n      initialHighlightedIndex: highlightedIndex = defaultHighlightedIndex,\n      defaultIsOpen,\n      initialIsOpen: isOpen = defaultIsOpen,\n      initialInputValue: inputValue = '',\n      initialSelectedItem: selectedItem = null,\n    } = this.props\n    const state = this.getState({\n      highlightedIndex,\n      isOpen,\n      inputValue,\n      selectedItem,\n    })\n    if (\n      state.selectedItem != null &&\n      this.props.initialInputValue === undefined\n    ) {\n      state.inputValue = this.props.itemToString(state.selectedItem)\n    }\n    this.state = state\n  }\n\n  id = this.props.id || `downshift-${generateId()}`\n  menuId = this.props.menuId || `${this.id}-menu`\n  labelId = this.props.labelId || `${this.id}-label`\n  inputId = this.props.inputId || `${this.id}-input`\n  getItemId = this.props.getItemId || (index => `${this.id}-item-${index}`)\n\n  items = []\n  // itemCount can be changed asynchronously\n  // from within downshift (so it can't come from a prop)\n  // this is why we store it as an instance and use\n  // getItemCount rather than just use items.length\n  // (to support windowing + async)\n  itemCount = null\n  previousResultCount = 0\n\n  timeoutIds = []\n\n  /**\n   * @param {Function} fn the function to call after the time\n   * @param {Number} time the time to wait\n   */\n  internalSetTimeout = (fn, time) => {\n    const id = setTimeout(() => {\n      this.timeoutIds = this.timeoutIds.filter(i => i !== id)\n      fn()\n    }, time)\n\n    this.timeoutIds.push(id)\n  }\n\n  /**\n   * Clear all running timeouts\n   */\n  internalClearTimeouts() {\n    this.timeoutIds.forEach(id => {\n      clearTimeout(id)\n    })\n\n    this.timeoutIds = []\n  }\n\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  getState(stateToMerge = this.state) {\n    return getState(stateToMerge, this.props)\n  }\n\n  getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    let itemCount = this.items.length\n    if (this.itemCount != null) {\n      itemCount = this.itemCount\n    } else if (this.props.itemCount !== undefined) {\n      itemCount = this.props.itemCount\n    }\n    return itemCount\n  }\n\n  setItemCount = count => {\n    this.itemCount = count\n  }\n\n  unsetItemCount = () => {\n    this.itemCount = null\n  }\n\n  getItemNodeFromIndex(index) {\n    return this.props.environment\n      ? this.props.environment.document.getElementById(this.getItemId(index))\n      : null\n  }\n\n  isItemDisabled = (_item, index) => {\n    const currentElementNode = this.getItemNodeFromIndex(index)\n\n    return currentElementNode && currentElementNode.hasAttribute('disabled')\n  }\n\n  setHighlightedIndex = (\n    highlightedIndex = this.props.defaultHighlightedIndex,\n    otherStateToSet = {},\n  ) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState({highlightedIndex, ...otherStateToSet})\n  }\n\n  scrollHighlightedItemIntoView() {\n    /* istanbul ignore else (react-native) */\n    if (!isReactNative) {\n      const node = this.getItemNodeFromIndex(this.getState().highlightedIndex)\n      this.props.scrollIntoView(node, this._menuNode)\n    }\n  }\n\n  moveHighlightedIndex(amount, otherStateToSet) {\n    const itemCount = this.getItemCount()\n    const {highlightedIndex} = this.getState()\n    if (itemCount > 0) {\n      const nextHighlightedIndex = getHighlightedIndex(\n        highlightedIndex,\n        amount,\n        {length: itemCount},\n        this.isItemDisabled,\n        true,\n      )\n      this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet)\n    }\n  }\n\n  clearSelection = cb => {\n    this.internalSetState(\n      {\n        selectedItem: null,\n        inputValue: '',\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        isOpen: this.props.defaultIsOpen,\n      },\n      cb,\n    )\n  }\n\n  selectItem = (item, otherStateToSet, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      {\n        isOpen: this.props.defaultIsOpen,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue: this.props.itemToString(item),\n        ...otherStateToSet,\n      },\n      cb,\n    )\n  }\n\n  selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n    const item = this.items[itemIndex]\n    if (item == null) {\n      return\n    }\n    this.selectItem(item, otherStateToSet, cb)\n  }\n\n  selectHighlightedItem = (otherStateToSet, cb) => {\n    return this.selectItemAtIndex(\n      this.getState().highlightedIndex,\n      otherStateToSet,\n      cb,\n    )\n  }\n\n  // any piece of our state can live in two places:\n  // 1. Uncontrolled: it's internal (this.state)\n  //    We will call this.setState to update that state\n  // 2. Controlled: it's external (this.props)\n  //    We will call this.props.onStateChange to update that state\n  //\n  // In addition, we'll call this.props.onChange if the\n  // selectedItem is changed.\n  internalSetState = (stateToSet, cb) => {\n    let isItemSelected, onChangeArg\n\n    const onStateChangeArg = {}\n    const isStateToSetFunction = typeof stateToSet === 'function'\n\n    // we want to call `onInputValueChange` before the `setState` call\n    // so someone controlling the `inputValue` state gets notified of\n    // the input change as soon as possible. This avoids issues with\n    // preserving the cursor position.\n    // See https://github.com/downshift-js/downshift/issues/217 for more info.\n    if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n      this.props.onInputValueChange(stateToSet.inputValue, {\n        ...this.getStateAndHelpers(),\n        ...stateToSet,\n      })\n    }\n    return this.setState(\n      state => {\n        state = this.getState(state)\n        let newStateToSet = isStateToSetFunction\n          ? stateToSet(state)\n          : stateToSet\n\n        // Your own function that could modify the state that will be set.\n        newStateToSet = this.props.stateReducer(state, newStateToSet)\n\n        // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n        isItemSelected = newStateToSet.hasOwnProperty('selectedItem')\n        // this keeps track of the object we want to call with setState\n        const nextState = {}\n        // this is just used to tell whether the state changed\n        const nextFullState = {}\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (\n          isItemSelected &&\n          newStateToSet.selectedItem !== state.selectedItem\n        ) {\n          onChangeArg = newStateToSet.selectedItem\n        }\n        newStateToSet.type ||= stateChangeTypes.unknown\n\n        Object.keys(newStateToSet).forEach(key => {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== newStateToSet[key]) {\n            onStateChangeArg[key] = newStateToSet[key]\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return\n          }\n          nextFullState[key] = newStateToSet[key]\n          // if it's coming from props, then we don't care to set it internally\n          if (!isControlledProp(this.props, key)) {\n            nextState[key] = newStateToSet[key]\n          }\n        })\n\n        // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n        if (\n          isStateToSetFunction &&\n          newStateToSet.hasOwnProperty('inputValue')\n        ) {\n          this.props.onInputValueChange(newStateToSet.inputValue, {\n            ...this.getStateAndHelpers(),\n            ...newStateToSet,\n          })\n        }\n\n        return nextState\n      },\n      () => {\n        // call the provided callback if it's a function\n        cbToCb(cb)()\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1\n        if (hasMoreStateThanType) {\n          this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers())\n        }\n\n        if (isItemSelected) {\n          this.props.onSelect(\n            stateToSet.selectedItem,\n            this.getStateAndHelpers(),\n          )\n        }\n\n        if (onChangeArg !== undefined) {\n          this.props.onChange(onChangeArg, this.getStateAndHelpers())\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers())\n      },\n    )\n  }\n\n  getStateAndHelpers() {\n    const {highlightedIndex, inputValue, selectedItem, isOpen} = this.getState()\n    const {itemToString} = this.props\n    const {id} = this\n    const {\n      getRootProps,\n      getToggleButtonProps,\n      getLabelProps,\n      getMenuProps,\n      getInputProps,\n      getItemProps,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      reset,\n      setItemCount,\n      unsetItemCount,\n      internalSetState: setState,\n    } = this\n    return {\n      // prop getters\n      getRootProps,\n      getToggleButtonProps,\n      getLabelProps,\n      getMenuProps,\n      getInputProps,\n      getItemProps,\n\n      // actions\n      reset,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      setItemCount,\n      unsetItemCount,\n      setState,\n\n      // props\n      itemToString,\n\n      // derived\n      id,\n\n      // state\n      highlightedIndex,\n      inputValue,\n      isOpen,\n      selectedItem,\n    }\n  }\n\n  //////////////////////////// ROOT\n\n  rootRef = node => (this._rootNode = node)\n\n  getRootProps = (\n    {refKey = 'ref', ref, ...rest} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    this.getRootProps.called = true\n    this.getRootProps.refKey = refKey\n    this.getRootProps.suppressRefError = suppressRefError\n    const {isOpen} = this.getState()\n    return {\n      [refKey]: handleRefs(ref, this.rootRef),\n      role: 'combobox',\n      'aria-expanded': isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': isOpen ? this.menuId : undefined,\n      'aria-labelledby': this.labelId,\n      ...rest,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n  keyDownHandlers = {\n    ArrowDown(event) {\n      event.preventDefault()\n\n      if (this.getState().isOpen) {\n        const amount = event.shiftKey ? 5 : 1\n        this.moveHighlightedIndex(amount, {\n          type: stateChangeTypes.keyDownArrowDown,\n        })\n      } else {\n        this.internalSetState(\n          {\n            isOpen: true,\n            type: stateChangeTypes.keyDownArrowDown,\n          },\n          () => {\n            const itemCount = this.getItemCount()\n            if (itemCount > 0) {\n              const {highlightedIndex} = this.getState()\n              const nextHighlightedIndex = getHighlightedIndex(\n                highlightedIndex,\n                1,\n                {length: itemCount},\n                this.isItemDisabled,\n                true,\n              )\n\n              this.setHighlightedIndex(nextHighlightedIndex, {\n                type: stateChangeTypes.keyDownArrowDown,\n              })\n            }\n          },\n        )\n      }\n    },\n\n    ArrowUp(event) {\n      event.preventDefault()\n\n      if (this.getState().isOpen) {\n        const amount = event.shiftKey ? -5 : -1\n        this.moveHighlightedIndex(amount, {\n          type: stateChangeTypes.keyDownArrowUp,\n        })\n      } else {\n        this.internalSetState(\n          {\n            isOpen: true,\n            type: stateChangeTypes.keyDownArrowUp,\n          },\n          () => {\n            const itemCount = this.getItemCount()\n            if (itemCount > 0) {\n              const {highlightedIndex} = this.getState()\n              const nextHighlightedIndex = getHighlightedIndex(\n                highlightedIndex,\n                -1,\n                {length: itemCount},\n                this.isItemDisabled,\n                true,\n              )\n\n              this.setHighlightedIndex(nextHighlightedIndex, {\n                type: stateChangeTypes.keyDownArrowUp,\n              })\n            }\n          },\n        )\n      }\n    },\n\n    Enter(event) {\n      if (event.which === 229) {\n        return\n      }\n\n      const {isOpen, highlightedIndex} = this.getState()\n      if (isOpen && highlightedIndex != null) {\n        event.preventDefault()\n        const item = this.items[highlightedIndex]\n        const itemNode = this.getItemNodeFromIndex(highlightedIndex)\n        if (item == null || (itemNode && itemNode.hasAttribute('disabled'))) {\n          return\n        }\n        this.selectHighlightedItem({\n          type: stateChangeTypes.keyDownEnter,\n        })\n      }\n    },\n\n    Escape(event) {\n      event.preventDefault()\n      this.reset({\n        type: stateChangeTypes.keyDownEscape,\n        ...(!this.state.isOpen && {selectedItem: null, inputValue: ''}),\n      })\n    },\n  }\n\n  //////////////////////////// BUTTON\n\n  buttonKeyDownHandlers = {\n    ...this.keyDownHandlers,\n\n    ' '(event) {\n      event.preventDefault()\n      this.toggleMenu({type: stateChangeTypes.keyDownSpaceButton})\n    },\n  }\n\n  inputKeyDownHandlers = {\n    ...this.keyDownHandlers,\n    Home(event) {\n      const {isOpen} = this.getState()\n\n      if (!isOpen) {\n        return\n      }\n\n      event.preventDefault()\n\n      const itemCount = this.getItemCount()\n\n      if (itemCount <= 0 || !isOpen) {\n        return\n      }\n\n      // get next non-disabled starting downwards from 0 if that's disabled.\n      const newHighlightedIndex = getNonDisabledIndex(\n        0,\n        false,\n        {length: itemCount},\n        this.isItemDisabled,\n      )\n\n      this.setHighlightedIndex(newHighlightedIndex, {\n        type: stateChangeTypes.keyDownHome,\n      })\n    },\n\n    End(event) {\n      const {isOpen} = this.getState()\n\n      if (!isOpen) {\n        return\n      }\n\n      event.preventDefault()\n\n      const itemCount = this.getItemCount()\n\n      if (itemCount <= 0 || !isOpen) {\n        return\n      }\n\n      // get next non-disabled starting upwards from last index if that's disabled.\n      const newHighlightedIndex = getNonDisabledIndex(\n        itemCount - 1,\n        true,\n        {length: itemCount},\n        this.isItemDisabled,\n      )\n\n      this.setHighlightedIndex(newHighlightedIndex, {\n        type: stateChangeTypes.keyDownEnd,\n      })\n    },\n  }\n\n  getToggleButtonProps = ({\n    onClick,\n    onPress,\n    onKeyDown,\n    onKeyUp,\n    onBlur,\n    ...rest\n  } = {}) => {\n    const {isOpen} = this.getState()\n    const enabledEventHandlers =\n      isReactNative || isReactNativeWeb\n        ? /* istanbul ignore next (react-native) */\n          {\n            onPress: callAllEventHandlers(onPress, this.buttonHandleClick),\n          }\n        : {\n            onClick: callAllEventHandlers(onClick, this.buttonHandleClick),\n            onKeyDown: callAllEventHandlers(\n              onKeyDown,\n              this.buttonHandleKeyDown,\n            ),\n            onKeyUp: callAllEventHandlers(onKeyUp, this.buttonHandleKeyUp),\n            onBlur: callAllEventHandlers(onBlur, this.buttonHandleBlur),\n          }\n    const eventHandlers = rest.disabled ? {} : enabledEventHandlers\n    return {\n      type: 'button',\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-haspopup': true,\n      'data-toggle': true,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n\n  buttonHandleKeyUp = event => {\n    // Prevent click event from emitting in Firefox\n    event.preventDefault()\n  }\n\n  buttonHandleKeyDown = event => {\n    const key = normalizeArrowKey(event)\n    if (this.buttonKeyDownHandlers[key]) {\n      this.buttonKeyDownHandlers[key].call(this, event)\n    }\n  }\n\n  buttonHandleClick = event => {\n    event.preventDefault()\n    // handle odd case for Safari and Firefox which\n    // don't give the button the focus properly.\n    /* istanbul ignore if (can't reasonably test this) */\n    if (!isReactNative && this.props.environment) {\n      const {body, activeElement} = this.props.environment.document\n\n      if (body && body === activeElement) {\n        event.target.focus()\n      }\n    }\n    // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n    // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n    // when building for production and should therefore have no impact on production code.\n    if (process.env.NODE_ENV === 'test') {\n      this.toggleMenu({type: stateChangeTypes.clickButton})\n    } else {\n      // Ensure that toggle of menu occurs after the potential blur event in iOS\n      this.internalSetTimeout(() =>\n        this.toggleMenu({type: stateChangeTypes.clickButton}),\n      )\n    }\n  }\n\n  buttonHandleBlur = event => {\n    const blurTarget = event.target // Save blur target for comparison with activeElement later\n    // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n    this.internalSetTimeout(() => {\n      if (this.isMouseDown || !this.props.environment) {\n        return\n      }\n\n      const {activeElement} = this.props.environment.document\n\n      if (\n        (activeElement == null || activeElement.id !== this.inputId) &&\n        activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n      ) {\n        this.reset({type: stateChangeTypes.blurButton})\n      }\n    })\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n  /////////////////////////////// LABEL\n\n  getLabelProps = props => {\n    return {htmlFor: this.inputId, id: this.labelId, ...props}\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n  /////////////////////////////// INPUT\n\n  getInputProps = ({\n    onKeyDown,\n    onBlur,\n    onChange,\n    onInput,\n    onChangeText,\n    ...rest\n  } = {}) => {\n    let onChangeKey\n    let eventHandlers = {}\n\n    /* istanbul ignore next (preact) */\n    if (isPreact) {\n      onChangeKey = 'onInput'\n    } else {\n      onChangeKey = 'onChange'\n    }\n    const {inputValue, isOpen, highlightedIndex} = this.getState()\n\n    if (!rest.disabled) {\n      eventHandlers = {\n        [onChangeKey]: callAllEventHandlers(\n          onChange,\n          onInput,\n          this.inputHandleChange,\n        ),\n        onKeyDown: callAllEventHandlers(onKeyDown, this.inputHandleKeyDown),\n        onBlur: callAllEventHandlers(onBlur, this.inputHandleBlur),\n      }\n    }\n\n    /* istanbul ignore if (react-native) */\n    if (isReactNative) {\n      eventHandlers = {\n        onChange: callAllEventHandlers(\n          onChange,\n          onInput,\n          this.inputHandleChange,\n        ),\n        onChangeText: callAllEventHandlers(onChangeText, onInput, text =>\n          this.inputHandleChange({nativeEvent: {text}}),\n        ),\n        onBlur: callAllEventHandlers(onBlur, this.inputHandleBlur),\n      }\n    }\n\n    return {\n      'aria-autocomplete': 'list',\n      'aria-activedescendant':\n        isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0\n          ? this.getItemId(highlightedIndex)\n          : undefined,\n      'aria-controls': isOpen ? this.menuId : undefined,\n      'aria-labelledby': rest && rest['aria-label'] ? undefined : this.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: inputValue,\n      id: this.inputId,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n\n  inputHandleKeyDown = event => {\n    const key = normalizeArrowKey(event)\n    if (key && this.inputKeyDownHandlers[key]) {\n      this.inputKeyDownHandlers[key].call(this, event)\n    }\n  }\n\n  inputHandleChange = event => {\n    this.internalSetState({\n      type: stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue:\n        isReactNative || isReactNativeWeb\n          ? /* istanbul ignore next (react-native) */ event.nativeEvent.text\n          : event.target.value,\n      highlightedIndex: this.props.defaultHighlightedIndex,\n    })\n  }\n\n  inputHandleBlur = () => {\n    // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n    this.internalSetTimeout(() => {\n      if (this.isMouseDown || !this.props.environment) {\n        return\n      }\n\n      const {activeElement} = this.props.environment.document\n      const downshiftButtonIsActive =\n        activeElement?.dataset?.toggle &&\n        this._rootNode &&\n        this._rootNode.contains(activeElement)\n\n      if (!downshiftButtonIsActive) {\n        this.reset({type: stateChangeTypes.blurInput})\n      }\n    })\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n  /////////////////////////////// MENU\n\n  menuRef = node => {\n    this._menuNode = node\n  }\n\n  getMenuProps = (\n    {refKey = 'ref', ref, ...props} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    this.getMenuProps.called = true\n    this.getMenuProps.refKey = refKey\n    this.getMenuProps.suppressRefError = suppressRefError\n\n    return {\n      [refKey]: handleRefs(ref, this.menuRef),\n      role: 'listbox',\n      'aria-labelledby':\n        props && props['aria-label'] ? undefined : this.labelId,\n      id: this.menuId,\n      ...props,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ MENU\n\n  /////////////////////////////// ITEM\n  getItemProps = ({\n    onMouseMove,\n    onMouseDown,\n    onClick,\n    onPress,\n    index,\n    item = process.env.NODE_ENV === 'production'\n      ? /* istanbul ignore next */ undefined\n      : requiredProp('getItemProps', 'item'),\n    ...rest\n  } = {}) => {\n    if (index === undefined) {\n      this.items.push(item)\n      index = this.items.indexOf(item)\n    } else {\n      this.items[index] = item\n    }\n\n    const onSelectKey =\n      isReactNative || isReactNativeWeb\n        ? /* istanbul ignore next (react-native) */ 'onPress'\n        : 'onClick'\n    const customClickHandler = isReactNative\n      ? /* istanbul ignore next (react-native) */ onPress\n      : onClick\n\n    const enabledEventHandlers = {\n      // onMouseMove is used over onMouseEnter here. onMouseMove\n      // is only triggered on actual mouse movement while onMouseEnter\n      // can fire on DOM changes, interrupting keyboard navigation\n      onMouseMove: callAllEventHandlers(onMouseMove, () => {\n        if (index === this.getState().highlightedIndex) {\n          return\n        }\n        this.setHighlightedIndex(index, {\n          type: stateChangeTypes.itemMouseEnter,\n        })\n\n        // We never want to manually scroll when changing state based\n        // on `onMouseMove` because we will be moving the element out\n        // from under the user which is currently scrolling/moving the\n        // cursor\n        this.avoidScrolling = true\n        this.internalSetTimeout(() => (this.avoidScrolling = false), 250)\n      }),\n      onMouseDown: callAllEventHandlers(onMouseDown, event => {\n        // This prevents the activeElement from being changed\n        // to the item so it can remain with the current activeElement\n        // which is a more common use case.\n        event.preventDefault()\n      }),\n      [onSelectKey]: callAllEventHandlers(customClickHandler, () => {\n        this.selectItemAtIndex(index, {\n          type: stateChangeTypes.clickItem,\n        })\n      }),\n    }\n\n    // Passing down the onMouseDown handler to prevent redirect\n    // of the activeElement if clicking on disabled items\n    const eventHandlers = rest.disabled\n      ? {onMouseDown: enabledEventHandlers.onMouseDown}\n      : enabledEventHandlers\n\n    return {\n      id: this.getItemId(index),\n      role: 'option',\n      'aria-selected': this.getState().highlightedIndex === index,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  clearItems = () => {\n    this.items = []\n  }\n\n  reset = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({selectedItem}) => ({\n        isOpen: this.props.defaultIsOpen,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        inputValue: this.props.itemToString(selectedItem),\n        ...otherStateToSet,\n      }),\n      cb,\n    )\n  }\n\n  toggleMenu = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({isOpen}) => {\n        return {\n          isOpen: !isOpen,\n          ...(isOpen && {\n            highlightedIndex: this.props.defaultHighlightedIndex,\n          }),\n          ...otherStateToSet,\n        }\n      },\n      () => {\n        const {isOpen, highlightedIndex} = this.getState()\n        if (isOpen) {\n          if (this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n            this.setHighlightedIndex(highlightedIndex, otherStateToSet)\n          }\n        }\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  openMenu = cb => {\n    this.internalSetState({isOpen: true}, cb)\n  }\n\n  closeMenu = cb => {\n    this.internalSetState({isOpen: false}, cb)\n  }\n\n  updateStatus = debounce(() => {\n    if (!this.props?.environment?.document) {\n      return\n    }\n\n    const state = this.getState()\n    const item = this.items[state.highlightedIndex]\n    const resultCount = this.getItemCount()\n    const status = this.props.getA11yStatusMessage({\n      itemToString: this.props.itemToString,\n      previousResultCount: this.previousResultCount,\n      resultCount,\n      highlightedItem: item,\n      ...state,\n    })\n    this.previousResultCount = resultCount\n\n    setStatus(status, this.props.environment.document)\n  }, 200)\n\n  componentDidMount() {\n    /* istanbul ignore if (react-native) */\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !isReactNative &&\n      this.getMenuProps.called &&\n      !this.getMenuProps.suppressRefError\n    ) {\n      validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps)\n    }\n\n    /* istanbul ignore if (react-native or SSR) */\n    if (isReactNative || !this.props.environment) {\n      this.cleanup = () => {\n        this.internalClearTimeouts()\n      }\n    } else {\n      // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n      const onMouseDown = () => {\n        this.isMouseDown = true\n      }\n      const onMouseUp = event => {\n        this.isMouseDown = false\n        // if the target element or the activeElement is within a downshift node\n        // then we don't want to reset downshift\n        const contextWithinDownshift = targetWithinDownshift(\n          event.target,\n          [this._rootNode, this._menuNode],\n          this.props.environment,\n        )\n        if (!contextWithinDownshift && this.getState().isOpen) {\n          this.reset({type: stateChangeTypes.mouseUp}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n      // Touching an element in iOS gives focus and hover states, but touching out of\n      // the element will remove hover, and persist the focus state, resulting in the\n      // blur event not being triggered.\n      // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n      // If the user taps outside of Downshift, the component should be reset,\n      // but not if the user is swiping\n      const onTouchStart = () => {\n        this.isTouchMove = false\n      }\n\n      const onTouchMove = () => {\n        this.isTouchMove = true\n      }\n\n      const onTouchEnd = event => {\n        const contextWithinDownshift = targetWithinDownshift(\n          event.target,\n          [this._rootNode, this._menuNode],\n          this.props.environment,\n          false,\n        )\n        if (\n          !this.isTouchMove &&\n          !contextWithinDownshift &&\n          this.getState().isOpen\n        ) {\n          this.reset({type: stateChangeTypes.touchEnd}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n      const {environment} = this.props\n\n      environment.addEventListener('mousedown', onMouseDown)\n      environment.addEventListener('mouseup', onMouseUp)\n      environment.addEventListener('touchstart', onTouchStart)\n      environment.addEventListener('touchmove', onTouchMove)\n      environment.addEventListener('touchend', onTouchEnd)\n\n      this.cleanup = () => {\n        this.internalClearTimeouts()\n        this.updateStatus.cancel()\n\n        environment.removeEventListener('mousedown', onMouseDown)\n        environment.removeEventListener('mouseup', onMouseUp)\n        environment.removeEventListener('touchstart', onTouchStart)\n        environment.removeEventListener('touchmove', onTouchMove)\n        environment.removeEventListener('touchend', onTouchEnd)\n      }\n    }\n  }\n\n  shouldScroll(prevState, prevProps) {\n    const {highlightedIndex: currentHighlightedIndex} =\n      this.props.highlightedIndex === undefined ? this.getState() : this.props\n    const {highlightedIndex: prevHighlightedIndex} =\n      prevProps.highlightedIndex === undefined ? prevState : prevProps\n    const scrollWhenOpen =\n      currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen\n    const scrollWhenNavigating =\n      currentHighlightedIndex !== prevHighlightedIndex\n\n    return scrollWhenOpen || scrollWhenNavigating\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateControlledUnchanged(this.state, prevProps, this.props)\n      /* istanbul ignore if (react-native) */\n      if (\n        !isReactNative &&\n        this.getMenuProps.called &&\n        !this.getMenuProps.suppressRefError\n      ) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps)\n      }\n    }\n\n    if (\n      isControlledProp(this.props, 'selectedItem') &&\n      this.props.selectedItemChanged(\n        prevProps.selectedItem,\n        this.props.selectedItem,\n      )\n    ) {\n      this.internalSetState({\n        type: stateChangeTypes.controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem),\n      })\n    }\n\n    if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n      this.scrollHighlightedItemIntoView()\n    }\n\n    /* istanbul ignore else (react-native) */\n    if (!isReactNative) {\n      this.updateStatus()\n    }\n  }\n\n  componentWillUnmount() {\n    this.cleanup() // avoids memory leak\n  }\n\n  render() {\n    const children = unwrapArray(this.props.children, noop)\n    // because the items are rerendered every time we call the children\n    // we clear this out each render and it will be populated again as\n    // getItemProps is called.\n    this.clearItems()\n    // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n    this.getRootProps.called = false\n    this.getRootProps.refKey = undefined\n    this.getRootProps.suppressRefError = undefined\n    // we do something similar for getMenuProps\n    this.getMenuProps.called = false\n    this.getMenuProps.refKey = undefined\n    this.getMenuProps.suppressRefError = undefined\n    // we do something similar for getLabelProps\n    this.getLabelProps.called = false\n    // and something similar for getInputProps\n    this.getInputProps.called = false\n    const element = unwrapArray(children(this.getStateAndHelpers()))\n    if (!element) {\n      return null\n    }\n\n    if (this.getRootProps.called || this.props.suppressRefError) {\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !this.getRootProps.suppressRefError &&\n        !this.props.suppressRefError\n      ) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps)\n      }\n      return element\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return cloneElement(element, this.getRootProps(getElementProps(element)))\n    }\n\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n\n      throw new Error(\n        'downshift: If you return a non-DOM element, you must apply the getRootProps function',\n      )\n    }\n\n    /* istanbul ignore next */\n    return undefined\n  }\n}\n\nexport default Downshift\n\nfunction validateGetMenuPropsCalledCorrectly(node, {refKey}) {\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `downshift: The ref prop \"${refKey}\" from getMenuProps was not applied correctly on your menu element.`,\n    )\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, {refKey}) {\n  const refKeySpecified = refKey !== 'ref'\n  const isComposite = !isDOMElement(element)\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'downshift: You returned a non-DOM element. You must specify a refKey in getRootProps',\n    )\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`,\n    )\n  }\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`,\n    )\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import React, {\n  useRef,\n  useCallback,\n  useReducer,\n  useEffect,\n  useLayoutEffect,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport {isReactNative} from '../is.macro'\nimport {\n  scrollIntoView,\n  getState,\n  generateId,\n  debounce,\n  validateControlledUnchanged,\n  noop,\n  targetWithinDownshift,\n} from '../utils'\nimport {cleanupStatusDiv, setStatus} from '../set-a11y-status'\n\nconst dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: '',\n}\n\nfunction callOnChangeProps(action, state, newState) {\n  const {props, type} = action\n  const changes = {}\n\n  Object.keys(state).forEach(key => {\n    invokeOnChangeHandler(key, action, state, newState)\n\n    if (newState[key] !== state[key]) {\n      changes[key] = newState[key]\n    }\n  })\n\n  if (props.onStateChange && Object.keys(changes).length) {\n    props.onStateChange({type, ...changes})\n  }\n}\n\nfunction invokeOnChangeHandler(key, action, state, newState) {\n  const {props, type} = action\n  const handler = `on${capitalizeString(key)}Change`\n  if (\n    props[handler] &&\n    newState[key] !== undefined &&\n    newState[key] !== state[key]\n  ) {\n    props[handler]({type, ...newState})\n  }\n}\n\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\nfunction stateReducer(s, a) {\n  return a.changes\n}\n\n/**\n * Debounced call for updating the a11y message.\n */\nconst updateA11yStatus = debounce((status, document) => {\n  setStatus(status, document)\n}, 200)\n\n// istanbul ignore next\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect\n\n// istanbul ignore next\nconst useElementIds =\n  'useId' in React // Avoid conditional useId call\n    ? function useElementIds({\n        id,\n        labelId,\n        menuId,\n        getItemId,\n        toggleButtonId,\n        inputId,\n      }) {\n        // Avoid conditional useId call\n        const reactId = `downshift-${React.useId()}`\n        if (!id) {\n          id = reactId\n        }\n\n        const elementIdsRef = useRef({\n          labelId: labelId || `${id}-label`,\n          menuId: menuId || `${id}-menu`,\n          getItemId: getItemId || (index => `${id}-item-${index}`),\n          toggleButtonId: toggleButtonId || `${id}-toggle-button`,\n          inputId: inputId || `${id}-input`,\n        })\n\n        return elementIdsRef.current\n      }\n    : function useElementIds({\n        id = `downshift-${generateId()}`,\n        labelId,\n        menuId,\n        getItemId,\n        toggleButtonId,\n        inputId,\n      }) {\n        const elementIdsRef = useRef({\n          labelId: labelId || `${id}-label`,\n          menuId: menuId || `${id}-menu`,\n          getItemId: getItemId || (index => `${id}-item-${index}`),\n          toggleButtonId: toggleButtonId || `${id}-toggle-button`,\n          inputId: inputId || `${id}-input`,\n        })\n\n        return elementIdsRef.current\n      }\n\nfunction getItemAndIndex(itemProp, indexProp, items, errorMessage) {\n  let item, index\n\n  if (itemProp === undefined) {\n    if (indexProp === undefined) {\n      throw new Error(errorMessage)\n    }\n\n    item = items[indexProp]\n    index = indexProp\n  } else {\n    index = indexProp === undefined ? items.indexOf(itemProp) : indexProp\n    item = itemProp\n  }\n\n  return [item, index]\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key)\n}\n\nfunction capitalizeString(string) {\n  return `${string.slice(0, 1).toUpperCase()}${string.slice(1)}`\n}\n\nfunction useLatestRef(val) {\n  const ref = useRef(val)\n  // technically this is not \"concurrent mode safe\" because we're manipulating\n  // the value during render (so it's not idempotent). However, the places this\n  // hook is used is to support memoizing callbacks which will be called\n  // *during* render, so we need the latest values *during* render.\n  // If not for this, then we'd probably want to use useLayoutEffect instead.\n  ref.current = val\n  return ref\n}\n\n/**\n * Computes the controlled state using a the previous state, props,\n * two reducers, one from downshift and an optional one from the user.\n * Also calls the onChange handlers for state values that have changed.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} props The hook props, also passed to createInitialState.\n * @param {Function} createInitialState Function that returns the initial state.\n * @param {Function} isStateEqual Function that checks if a previous state is equal to the next.\n * @returns {Array} An array with the state and an action dispatcher.\n */\nfunction useEnhancedReducer(reducer, props, createInitialState, isStateEqual) {\n  const prevStateRef = useRef()\n  const actionRef = useRef()\n  const enhancedReducer = useCallback(\n    (state, action) => {\n      actionRef.current = action\n      state = getState(state, action.props)\n\n      const changes = reducer(state, action)\n      const newState = action.props.stateReducer(state, {...action, changes})\n\n      return newState\n    },\n    [reducer],\n  )\n  const [state, dispatch] = useReducer(\n    enhancedReducer,\n    props,\n    createInitialState,\n  )\n  const propsRef = useLatestRef(props)\n  const dispatchWithProps = useCallback(\n    action => dispatch({props: propsRef.current, ...action}),\n    [propsRef],\n  )\n  const action = actionRef.current\n\n  useEffect(() => {\n    const prevState = getState(prevStateRef.current, action?.props)\n    const shouldCallOnChangeProps =\n      action && prevStateRef.current && !isStateEqual(prevState, state)\n\n    if (shouldCallOnChangeProps) {\n      callOnChangeProps(action, prevState, state)\n    }\n\n    prevStateRef.current = state\n  }, [state, action, isStateEqual])\n\n  return [state, dispatchWithProps]\n}\n\n/**\n * Wraps the useEnhancedReducer and applies the controlled prop values before\n * returning the new state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} props The hook props, also passed to createInitialState.\n * @param {Function} createInitialState Function that returns the initial state.\n * @param {Function} isStateEqual Function that checks if a previous state is equal to the next.\n * @returns {Array} An array with the state and an action dispatcher.\n */\nfunction useControlledReducer(\n  reducer,\n  props,\n  createInitialState,\n  isStateEqual,\n) {\n  const [state, dispatch] = useEnhancedReducer(\n    reducer,\n    props,\n    createInitialState,\n    isStateEqual,\n  )\n\n  return [getState(state, props), dispatch]\n}\n\nconst defaultProps = {\n  itemToString(item) {\n    return item ? String(item) : ''\n  },\n  itemToKey(item) {\n    return item\n  },\n  stateReducer,\n  scrollIntoView,\n  environment:\n    /* istanbul ignore next (ssr) */\n    typeof window === 'undefined' || isReactNative ? undefined : window,\n}\n\nfunction getDefaultValue(\n  props,\n  propKey,\n  defaultStateValues = dropdownDefaultStateValues,\n) {\n  const defaultValue = props[`default${capitalizeString(propKey)}`]\n\n  if (defaultValue !== undefined) {\n    return defaultValue\n  }\n\n  return defaultStateValues[propKey]\n}\n\nfunction getInitialValue(\n  props,\n  propKey,\n  defaultStateValues = dropdownDefaultStateValues,\n) {\n  const value = props[propKey]\n\n  if (value !== undefined) {\n    return value\n  }\n\n  const initialValue = props[`initial${capitalizeString(propKey)}`]\n\n  if (initialValue !== undefined) {\n    return initialValue\n  }\n\n  return getDefaultValue(props, propKey, defaultStateValues)\n}\n\nfunction getInitialState(props) {\n  const selectedItem = getInitialValue(props, 'selectedItem')\n  const isOpen = getInitialValue(props, 'isOpen')\n  const highlightedIndex = getInitialHighlightedIndex(props)\n  const inputValue = getInitialValue(props, 'inputValue')\n\n  return {\n    highlightedIndex:\n      highlightedIndex < 0 && selectedItem && isOpen\n        ? props.items.findIndex(\n            item => props.itemToKey(item) === props.itemToKey(selectedItem),\n          )\n        : highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue,\n  }\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset) {\n  const {\n    items,\n    initialHighlightedIndex,\n    defaultHighlightedIndex,\n    isItemDisabled,\n    itemToKey,\n  } = props\n  const {selectedItem, highlightedIndex} = state\n\n  if (items.length === 0) {\n    return -1\n  }\n\n  // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n  if (\n    initialHighlightedIndex !== undefined &&\n    highlightedIndex === initialHighlightedIndex &&\n    !isItemDisabled(items[initialHighlightedIndex], initialHighlightedIndex)\n  ) {\n    return initialHighlightedIndex\n  }\n\n  if (\n    defaultHighlightedIndex !== undefined &&\n    !isItemDisabled(items[defaultHighlightedIndex], defaultHighlightedIndex)\n  ) {\n    return defaultHighlightedIndex\n  }\n\n  if (selectedItem) {\n    return items.findIndex(item => itemToKey(selectedItem) === itemToKey(item))\n  }\n\n  if (\n    offset < 0 &&\n    !isItemDisabled(items[items.length - 1], items.length - 1)\n  ) {\n    return items.length - 1\n  }\n\n  if (offset > 0 && !isItemDisabled(items[0], 0)) {\n    return 0\n  }\n\n  return -1\n}\n/**\n * Tracks mouse and touch events, such as mouseDown, touchMove and touchEnd.\n *\n * @param {Object} environment The environment to add the event listeners to, for instance window.\n * @param {Array<HTMLElement>} downshiftElementRefs The refs for the element that should not trigger a blur action from mouseDown or touchEnd.\n * @param {Function} handleBlur The function that is called if mouseDown or touchEnd occured outside the downshiftElements.\n * @returns {Object} The mouse and touch events information, if any of are happening.\n */\nfunction useMouseAndTouchTracker(\n  environment,\n  downshiftElementRefs,\n  handleBlur,\n) {\n  const mouseAndTouchTrackersRef = useRef({\n    isMouseDown: false,\n    isTouchMove: false,\n    isTouchEnd: false,\n  })\n\n  useEffect(() => {\n    if (isReactNative || !environment) {\n      return noop\n    }\n\n    const downshiftElements = downshiftElementRefs.map(ref => ref.current)\n\n    function onMouseDown() {\n      mouseAndTouchTrackersRef.current.isTouchEnd = false // reset this one.\n      mouseAndTouchTrackersRef.current.isMouseDown = true\n    }\n    function onMouseUp(event) {\n      mouseAndTouchTrackersRef.current.isMouseDown = false\n\n      if (\n        !targetWithinDownshift(event.target, downshiftElements, environment)\n      ) {\n        handleBlur()\n      }\n    }\n    function onTouchStart() {\n      mouseAndTouchTrackersRef.current.isTouchEnd = false\n      mouseAndTouchTrackersRef.current.isTouchMove = false\n    }\n    function onTouchMove() {\n      mouseAndTouchTrackersRef.current.isTouchMove = true\n    }\n    function onTouchEnd(event) {\n      mouseAndTouchTrackersRef.current.isTouchEnd = true\n\n      if (\n        !mouseAndTouchTrackersRef.current.isTouchMove &&\n        !targetWithinDownshift(\n          event.target,\n          downshiftElements,\n          environment,\n          false,\n        )\n      ) {\n        handleBlur()\n      }\n    }\n\n    environment.addEventListener('mousedown', onMouseDown)\n    environment.addEventListener('mouseup', onMouseUp)\n    environment.addEventListener('touchstart', onTouchStart)\n    environment.addEventListener('touchmove', onTouchMove)\n    environment.addEventListener('touchend', onTouchEnd)\n\n    return function cleanup() {\n      environment.removeEventListener('mousedown', onMouseDown)\n      environment.removeEventListener('mouseup', onMouseUp)\n      environment.removeEventListener('touchstart', onTouchStart)\n      environment.removeEventListener('touchmove', onTouchMove)\n      environment.removeEventListener('touchend', onTouchEnd)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- refs don't change\n  }, [environment, handleBlur])\n\n  return mouseAndTouchTrackersRef.current\n}\n\n/* istanbul ignore next */\n// eslint-disable-next-line import/no-mutable-exports\nlet useGetterPropsCalledChecker = () => noop\n/**\n * Custom hook that checks if getter props are called correctly.\n *\n * @param  {...any} propKeys Getter prop names to be handled.\n * @returns {Function} Setter function called inside getter props to set call information.\n */\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  useGetterPropsCalledChecker = (...propKeys) => {\n    const isInitialMountRef = useRef(true)\n    const getterPropsCalledRef = useRef(\n      propKeys.reduce((acc, propKey) => {\n        acc[propKey] = {}\n        return acc\n      }, {}),\n    )\n\n    useEffect(() => {\n      Object.keys(getterPropsCalledRef.current).forEach(propKey => {\n        const propCallInfo = getterPropsCalledRef.current[propKey]\n        if (isInitialMountRef.current) {\n          if (!Object.keys(propCallInfo).length) {\n            // eslint-disable-next-line no-console\n            console.error(\n              `downshift: You forgot to call the ${propKey} getter function on your component / element.`,\n            )\n            return\n          }\n        }\n\n        const {suppressRefError, refKey, elementRef} = propCallInfo\n\n        if ((!elementRef || !elementRef.current) && !suppressRefError) {\n          // eslint-disable-next-line no-console\n          console.error(\n            `downshift: The ref prop \"${refKey}\" from ${propKey} was not applied correctly on your element.`,\n          )\n        }\n      })\n\n      isInitialMountRef.current = false\n    })\n\n    const setGetterPropCallInfo = useCallback(\n      (propKey, suppressRefError, refKey, elementRef) => {\n        getterPropsCalledRef.current[propKey] = {\n          suppressRefError,\n          refKey,\n          elementRef,\n        }\n      },\n      [],\n    )\n\n    return setGetterPropCallInfo\n  }\n}\n\n/**\n * Adds an a11y aria live status message if getA11yStatusMessage is passed.\n * @param {(options: Object) => string} getA11yStatusMessage The function that builds the status message.\n * @param {Object} options The options to be passed to getA11yStatusMessage if called.\n * @param {Array<unknown>} dependencyArray The dependency array that triggers the status message setter via useEffect.\n * @param {{document: Document}} environment The environment object containing the document.\n */\nfunction useA11yMessageStatus(\n  getA11yStatusMessage,\n  options,\n  dependencyArray,\n  environment = {},\n) {\n  const document = environment.document\n  const isInitialMount = useIsInitialMount()\n\n  // Adds an a11y aria live status message if getA11yStatusMessage is passed.\n  useEffect(() => {\n    if (!getA11yStatusMessage || isInitialMount || isReactNative || !document) {\n      return\n    }\n\n    const status = getA11yStatusMessage(options)\n\n    updateA11yStatus(status, document)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencyArray)\n\n  // Cleanup the status message container.\n  useEffect(() => {\n    return () => {\n      updateA11yStatus.cancel()\n      cleanupStatusDiv(document)\n    }\n  }, [document])\n}\n\nfunction useScrollIntoView({\n  highlightedIndex,\n  isOpen,\n  itemRefs,\n  getItemNodeFromIndex,\n  menuElement,\n  scrollIntoView: scrollIntoViewProp,\n}) {\n  // used not to scroll on highlight by mouse.\n  const shouldScrollRef = useRef(true)\n  // Scroll on highlighted item if change comes from keyboard.\n  useIsomorphicLayoutEffect(() => {\n    if (\n      highlightedIndex < 0 ||\n      !isOpen ||\n      !Object.keys(itemRefs.current).length\n    ) {\n      return\n    }\n\n    if (shouldScrollRef.current === false) {\n      shouldScrollRef.current = true\n    } else {\n      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [highlightedIndex])\n\n  return shouldScrollRef\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nlet useControlPropsValidator = noop\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  useControlPropsValidator = ({props, state}) => {\n    // used for checking when props are moving from controlled to uncontrolled.\n    const prevPropsRef = useRef(props)\n    const isInitialMount = useIsInitialMount()\n\n    useEffect(() => {\n      if (isInitialMount) {\n        return\n      }\n\n      validateControlledUnchanged(state, prevPropsRef.current, props)\n      prevPropsRef.current = props\n    }, [state, props, isInitialMount])\n  }\n}\n\n/**\n * Handles selection on Enter / Alt + ArrowUp. Closes the menu and resets the highlighted index, unless there is a highlighted.\n * In that case, selects the item and resets to defaults for open state and highlighted idex.\n * @param {Object} props The useCombobox props.\n * @param {number} highlightedIndex The index from the state.\n * @param {boolean} inputValue Also return the input value for state.\n * @returns The changes for the state.\n */\nfunction getChangesOnSelection(props, highlightedIndex, inputValue = true) {\n  const shouldSelect = props.items?.length && highlightedIndex >= 0\n\n  return {\n    isOpen: false,\n    highlightedIndex: -1,\n    ...(shouldSelect && {\n      selectedItem: props.items[highlightedIndex],\n      isOpen: getDefaultValue(props, 'isOpen'),\n      highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n      ...(inputValue && {\n        inputValue: props.itemToString(props.items[highlightedIndex]),\n      }),\n    }),\n  }\n}\n\n/**\n * Check if a state is equal for dropdowns, by comparing isOpen, inputValue, highlightedIndex and selected item.\n * Used by useSelect and useCombobox.\n *\n * @param {Object} prevState\n * @param {Object} newState\n * @returns {boolean} Wheather the states are deeply equal.\n */\nfunction isDropdownsStateEqual(prevState, newState) {\n  return (\n    prevState.isOpen === newState.isOpen &&\n    prevState.inputValue === newState.inputValue &&\n    prevState.highlightedIndex === newState.highlightedIndex &&\n    prevState.selectedItem === newState.selectedItem\n  )\n}\n\n/**\n * Tracks if it's the first render.\n */\nfunction useIsInitialMount() {\n  const isInitialMountRef = React.useRef(true)\n\n  React.useEffect(() => {\n    isInitialMountRef.current = false\n\n    return () => {\n      isInitialMountRef.current = true\n    }\n  }, [])\n\n  return isInitialMountRef.current\n}\n\n/**\n * Returns the new highlightedIndex based on the defaultHighlightedIndex prop, if it's not disabled.\n *\n * @param {Object} props Props from useCombobox or useSelect.\n * @returns {number} The highlighted index.\n */\nfunction getDefaultHighlightedIndex(props) {\n  const highlightedIndex = getDefaultValue(props, 'highlightedIndex')\n  if (\n    highlightedIndex > -1 &&\n    props.isItemDisabled(props.items[highlightedIndex], highlightedIndex)\n  ) {\n    return -1\n  }\n\n  return highlightedIndex\n}\n\n/**\n * Returns the new highlightedIndex based on the initialHighlightedIndex prop, if not disabled.\n *\n * @param {Object} props Props from useCombobox or useSelect.\n * @returns {number} The highlighted index.\n */\nfunction getInitialHighlightedIndex(props) {\n  const highlightedIndex = getInitialValue(props, 'highlightedIndex')\n\n  if (\n    highlightedIndex > -1 &&\n    props.isItemDisabled(props.items[highlightedIndex], highlightedIndex)\n  ) {\n    return -1\n  }\n\n  return highlightedIndex\n}\n\n// Shared between all exports.\nconst commonPropTypes = {\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func.isRequired,\n    removeEventListener: PropTypes.func.isRequired,\n    document: PropTypes.shape({\n      createElement: PropTypes.func.isRequired,\n      getElementById: PropTypes.func.isRequired,\n      activeElement: PropTypes.any.isRequired,\n      body: PropTypes.any.isRequired,\n    }).isRequired,\n    Node: PropTypes.func.isRequired,\n  }),\n  itemToString: PropTypes.func,\n  itemToKey: PropTypes.func,\n  stateReducer: PropTypes.func,\n}\n\n// Shared between useSelect, useCombobox, Downshift.\nconst commonDropdownPropTypes = {\n  ...commonPropTypes,\n  getA11yStatusMessage: PropTypes.func,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  toggleButtonId: PropTypes.string,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  scrollIntoView: PropTypes.func,\n}\n\nexport {\n  useControlPropsValidator,\n  useScrollIntoView,\n  updateA11yStatus,\n  useGetterPropsCalledChecker,\n  useMouseAndTouchTracker,\n  getHighlightedIndexOnOpen,\n  getInitialState,\n  getInitialValue,\n  getDefaultValue,\n  defaultProps,\n  useControlledReducer,\n  useEnhancedReducer,\n  useLatestRef,\n  capitalizeString,\n  isAcceptedCharacterKey,\n  getItemAndIndex,\n  useElementIds,\n  getChangesOnSelection,\n  isDropdownsStateEqual,\n  commonDropdownPropTypes,\n  commonPropTypes,\n  useIsInitialMount,\n  useA11yMessageStatus,\n  getDefaultHighlightedIndex,\n}\n","import {\n  getHighlightedIndexOnOpen,\n  getDefaultValue,\n  getDefaultHighlightedIndex,\n} from './utils'\n\nexport default function downshiftCommonReducer(\n  state,\n  action,\n  stateChangeTypes,\n) {\n  const {type, props} = action\n  let changes\n\n  switch (type) {\n    case stateChangeTypes.ItemMouseMove:\n      changes = {\n        highlightedIndex: action.disabled ? -1 : action.index,\n      }\n\n      break\n    case stateChangeTypes.MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1,\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen\n          ? -1\n          : getHighlightedIndexOnOpen(props, state, 0),\n      }\n\n      break\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0),\n      }\n\n      break\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false,\n      }\n\n      break\n    case stateChangeTypes.FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: props.isItemDisabled(\n          props.items[action.highlightedIndex],\n          action.highlightedIndex,\n        )\n          ? -1\n          : action.highlightedIndex,\n      }\n\n      break\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue,\n      }\n\n      break\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultHighlightedIndex(props),\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue'),\n      }\n\n      break\n    default:\n      throw new Error('Reducer called without proper action type.')\n  }\n\n  return {\n    ...state,\n    ...changes,\n  }\n}\n/* eslint-enable complexity */\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import PropTypes from 'prop-types'\nimport {\n  commonDropdownPropTypes,\n  defaultProps as commonDefaultProps,\n} from '../utils'\nimport {noop} from '../../utils'\nimport {GetItemIndexByCharacterKeyOptions} from './types'\n\nexport function getItemIndexByCharacterKey<Item>({\n  keysSoFar,\n  highlightedIndex,\n  items,\n  itemToString,\n  isItemDisabled,\n}: GetItemIndexByCharacterKeyOptions<Item>) {\n  const lowerCasedKeysSoFar = keysSoFar.toLowerCase()\n\n  for (let index = 0; index < items.length; index++) {\n    // if we already have a search query in progress, we also consider the current highlighted item.\n    const offsetIndex =\n      (index + highlightedIndex + (keysSoFar.length < 2 ? 1 : 0)) % items.length\n\n    const item = items[offsetIndex]\n\n    if (\n      item !== undefined &&\n      itemToString(item).toLowerCase().startsWith(lowerCasedKeysSoFar) &&\n      !isItemDisabled(item, offsetIndex)\n    ) {\n      return offsetIndex\n    }\n  }\n\n  return highlightedIndex\n}\n\nconst propTypes = {\n  ...commonDropdownPropTypes,\n  items: PropTypes.array.isRequired,\n  isItemDisabled: PropTypes.func,\n}\n\nexport const defaultProps = {\n  ...commonDefaultProps,\n  isItemDisabled() {\n    return false\n  },\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let validatePropTypes = noop as (\n  options: unknown,\n  caller: Function,\n) => void\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = (options: unknown, caller: Function): void => {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name)\n  }\n}\n","import productionEnum from '../../productionEnum.macro'\n\nexport const ToggleButtonClick = productionEnum('__togglebutton_click__')\nexport const ToggleButtonKeyDownArrowDown = productionEnum(\n  '__togglebutton_keydown_arrow_down__',\n)\nexport const ToggleButtonKeyDownArrowUp = productionEnum(\n  '__togglebutton_keydown_arrow_up__',\n)\nexport const ToggleButtonKeyDownCharacter = productionEnum(\n  '__togglebutton_keydown_character__',\n)\nexport const ToggleButtonKeyDownEscape = productionEnum(\n  '__togglebutton_keydown_escape__',\n)\nexport const ToggleButtonKeyDownHome = productionEnum(\n  '__togglebutton_keydown_home__',\n)\nexport const ToggleButtonKeyDownEnd = productionEnum(\n  '__togglebutton_keydown_end__',\n)\nexport const ToggleButtonKeyDownEnter = productionEnum(\n  '__togglebutton_keydown_enter__',\n)\nexport const ToggleButtonKeyDownSpaceButton = productionEnum(\n  '__togglebutton_keydown_space_button__',\n)\nexport const ToggleButtonKeyDownPageUp = productionEnum(\n  '__togglebutton_keydown_page_up__',\n)\nexport const ToggleButtonKeyDownPageDown = productionEnum(\n  '__togglebutton_keydown_page_down__',\n)\nexport const ToggleButtonBlur = productionEnum('__togglebutton_blur__')\n\nexport const MenuMouseLeave = productionEnum('__menu_mouse_leave__')\n\nexport const ItemMouseMove = productionEnum('__item_mouse_move__')\nexport const ItemClick = productionEnum('__item_click__')\n\nexport const FunctionToggleMenu = productionEnum('__function_toggle_menu__')\nexport const FunctionOpenMenu = productionEnum('__function_open_menu__')\nexport const FunctionCloseMenu = productionEnum('__function_close_menu__')\nexport const FunctionSetHighlightedIndex = productionEnum(\n  '__function_set_highlighted_index__',\n)\nexport const FunctionSelectItem = productionEnum('__function_select_item__')\nexport const FunctionSetInputValue = productionEnum(\n  '__function_set_input_value__',\n)\nexport const FunctionReset = productionEnum('__function_reset__')\n","import {getNonDisabledIndex, getHighlightedIndex} from '../../utils'\nimport {\n  getHighlightedIndexOnOpen,\n  getDefaultValue,\n  getChangesOnSelection,\n  getDefaultHighlightedIndex,\n} from '../utils'\nimport commonReducer from '../reducer'\nimport {getItemIndexByCharacterKey} from './utils'\nimport * as stateChangeTypes from './stateChangeTypes'\n\n/* eslint-disable complexity */\nexport default function downshiftSelectReducer(state, action) {\n  const {type, props, altKey} = action\n  let changes\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultHighlightedIndex(props),\n        selectedItem: props.items[action.index],\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonKeyDownCharacter:\n      {\n        const lowercasedKey = action.key\n        const inputValue = `${state.inputValue}${lowercasedKey}`\n        const prevHighlightedIndex =\n          !state.isOpen && state.selectedItem\n            ? props.items.findIndex(\n                item =>\n                  props.itemToKey(item) === props.itemToKey(state.selectedItem),\n              )\n            : state.highlightedIndex\n        const highlightedIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: prevHighlightedIndex,\n          items: props.items,\n          itemToString: props.itemToString,\n          isItemDisabled: props.isItemDisabled,\n        })\n\n        changes = {\n          inputValue,\n          highlightedIndex,\n          isOpen: true,\n        }\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonKeyDownArrowDown:\n      {\n        const highlightedIndex = state.isOpen\n          ? getHighlightedIndex(\n              state.highlightedIndex,\n              1,\n              props.items,\n              props.isItemDisabled,\n            )\n          : altKey && state.selectedItem == null\n          ? -1\n          : getHighlightedIndexOnOpen(props, state, 1)\n        changes = {\n          highlightedIndex,\n          isOpen: true,\n        }\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonKeyDownArrowUp:\n      if (state.isOpen && altKey) {\n        changes = getChangesOnSelection(props, state.highlightedIndex, false)\n      } else {\n        const highlightedIndex = state.isOpen\n          ? getHighlightedIndex(\n              state.highlightedIndex,\n              -1,\n              props.items,\n              props.isItemDisabled,\n            )\n          : getHighlightedIndexOnOpen(props, state, -1)\n        changes = {\n          highlightedIndex,\n          isOpen: true,\n        }\n      }\n\n      break\n    // only triggered when menu is open.\n    case stateChangeTypes.ToggleButtonKeyDownEnter:\n    case stateChangeTypes.ToggleButtonKeyDownSpaceButton:\n      changes = getChangesOnSelection(props, state.highlightedIndex, false)\n\n      break\n    case stateChangeTypes.ToggleButtonKeyDownHome:\n      changes = {\n        highlightedIndex: getNonDisabledIndex(\n          0,\n          false,\n          props.items,\n          props.isItemDisabled,\n        ),\n        isOpen: true,\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonKeyDownEnd:\n      changes = {\n        highlightedIndex: getNonDisabledIndex(\n          props.items.length - 1,\n          true,\n          props.items,\n          props.isItemDisabled,\n        ),\n        isOpen: true,\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonKeyDownPageUp:\n      changes = {\n        highlightedIndex: getHighlightedIndex(\n          state.highlightedIndex,\n          -10,\n          props.items,\n          props.isItemDisabled,\n        ),\n      }\n      break\n    case stateChangeTypes.ToggleButtonKeyDownPageDown:\n      changes = {\n        highlightedIndex: getHighlightedIndex(\n          state.highlightedIndex,\n          10,\n          props.items,\n          props.isItemDisabled,\n        ),\n      }\n      break\n    case stateChangeTypes.ToggleButtonKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n      }\n\n      break\n    case stateChangeTypes.ToggleButtonBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(state.highlightedIndex >= 0 &&\n          props.items?.length && {\n            selectedItem: props.items[state.highlightedIndex],\n          }),\n      }\n\n      break\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n      }\n\n      break\n    default:\n      return commonReducer(state, action, stateChangeTypes)\n  }\n\n  return {\n    ...state,\n    ...changes,\n  }\n}\n/* eslint-enable complexity */\n","import {useRef, useEffect, useCallback, useMemo} from 'react'\nimport {\n  isAcceptedCharacterKey,\n  useControlledReducer,\n  getInitialState,\n  useGetterPropsCalledChecker,\n  useLatestRef,\n  useScrollIntoView,\n  useControlPropsValidator,\n  useElementIds,\n  useMouseAndTouchTracker,\n  getItemAndIndex,\n  getInitialValue,\n  isDropdownsStateEqual,\n  useA11yMessageStatus,\n} from '../utils'\nimport {\n  callAllEventHandlers,\n  handleRefs,\n  debounce,\n  normalizeArrowKey,\n} from '../../utils'\nimport {isReactNative, isReactNativeWeb} from '../../is.macro'\nimport downshiftSelectReducer from './reducer'\nimport {validatePropTypes, defaultProps} from './utils'\nimport * as stateChangeTypes from './stateChangeTypes'\n\nuseSelect.stateChangeTypes = stateChangeTypes\n\nfunction useSelect(userProps = {}) {\n  validatePropTypes(userProps, useSelect)\n  // Props defaults and destructuring.\n  const props = {\n    ...defaultProps,\n    ...userProps,\n  }\n  const {scrollIntoView, environment, getA11yStatusMessage} = props\n  // Initial state depending on controlled props.\n  const [state, dispatch] = useControlledReducer(\n    downshiftSelectReducer,\n    props,\n    getInitialState,\n    isDropdownsStateEqual,\n  )\n  const {isOpen, highlightedIndex, selectedItem, inputValue} = state\n  // Element efs.\n  const toggleButtonRef = useRef(null)\n  const menuRef = useRef(null)\n  const itemRefs = useRef({})\n  // used to keep the inputValue clearTimeout object between renders.\n  const clearTimeoutRef = useRef(null)\n  // prevent id re-generation between renders.\n  const elementIds = useElementIds(props)\n  // utility callback to get item element.\n  const latest = useLatestRef({\n    state,\n    props,\n  })\n\n  // Some utils.\n  const getItemNodeFromIndex = useCallback(\n    index => itemRefs.current[elementIds.getItemId(index)],\n    [elementIds],\n  )\n\n  // Effects.\n  // Adds an a11y aria live status message if getA11yStatusMessage is passed.\n  useA11yMessageStatus(\n    getA11yStatusMessage,\n    state,\n    [isOpen, highlightedIndex, selectedItem, inputValue],\n    environment,\n  )\n  // Scroll on highlighted item if change comes from keyboard.\n  const shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    scrollIntoView,\n    getItemNodeFromIndex,\n  })\n  // Sets cleanup for the keysSoFar callback, debounded after 500ms.\n  useEffect(() => {\n    // init the clean function here as we need access to dispatch.\n    clearTimeoutRef.current = debounce(outerDispatch => {\n      outerDispatch({\n        type: stateChangeTypes.FunctionSetInputValue,\n        inputValue: '',\n      })\n    }, 500)\n\n    // Cancel any pending debounced calls on mount\n    return () => {\n      clearTimeoutRef.current.cancel()\n    }\n  }, [])\n  // Invokes the keysSoFar callback set up above.\n  useEffect(() => {\n    if (!inputValue) {\n      return\n    }\n\n    clearTimeoutRef.current(dispatch)\n  }, [dispatch, inputValue])\n\n  useControlPropsValidator({\n    props,\n    state,\n  })\n  // Focus the toggle button on first render if required.\n  useEffect(() => {\n    const focusOnOpen = getInitialValue(props, 'isOpen')\n\n    if (focusOnOpen && toggleButtonRef.current) {\n      toggleButtonRef.current.focus()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const mouseAndTouchTrackers = useMouseAndTouchTracker(\n    environment,\n    [toggleButtonRef, menuRef],\n    useCallback(\n      function handleBlur() {\n        if (latest.current.state.isOpen) {\n          dispatch({\n            type: stateChangeTypes.ToggleButtonBlur,\n          })\n        }\n      },\n      [dispatch, latest],\n    ),\n  )\n  const setGetterPropCallInfo = useGetterPropsCalledChecker(\n    'getMenuProps',\n    'getToggleButtonProps',\n  )\n  // Reset itemRefs on close.\n  useEffect(() => {\n    if (!isOpen) {\n      itemRefs.current = {}\n    }\n  }, [isOpen])\n\n  // Event handler functions.\n  const toggleButtonKeyDownHandlers = useMemo(\n    () => ({\n      ArrowDown(event) {\n        event.preventDefault()\n\n        dispatch({\n          type: stateChangeTypes.ToggleButtonKeyDownArrowDown,\n          altKey: event.altKey,\n        })\n      },\n      ArrowUp(event) {\n        event.preventDefault()\n\n        dispatch({\n          type: stateChangeTypes.ToggleButtonKeyDownArrowUp,\n          altKey: event.altKey,\n        })\n      },\n      Home(event) {\n        event.preventDefault()\n\n        dispatch({\n          type: stateChangeTypes.ToggleButtonKeyDownHome,\n        })\n      },\n      End(event) {\n        event.preventDefault()\n\n        dispatch({\n          type: stateChangeTypes.ToggleButtonKeyDownEnd,\n        })\n      },\n      Escape() {\n        if (latest.current.state.isOpen) {\n          dispatch({\n            type: stateChangeTypes.ToggleButtonKeyDownEscape,\n          })\n        }\n      },\n      Enter(event) {\n        event.preventDefault()\n\n        dispatch({\n          type: latest.current.state.isOpen\n            ? stateChangeTypes.ToggleButtonKeyDownEnter\n            : stateChangeTypes.ToggleButtonClick,\n        })\n      },\n      PageUp(event) {\n        if (latest.current.state.isOpen) {\n          event.preventDefault()\n\n          dispatch({\n            type: stateChangeTypes.ToggleButtonKeyDownPageUp,\n          })\n        }\n      },\n      PageDown(event) {\n        if (latest.current.state.isOpen) {\n          event.preventDefault()\n\n          dispatch({\n            type: stateChangeTypes.ToggleButtonKeyDownPageDown,\n          })\n        }\n      },\n      ' '(event) {\n        event.preventDefault()\n\n        const currentState = latest.current.state\n\n        if (!currentState.isOpen) {\n          dispatch({type: stateChangeTypes.ToggleButtonClick})\n          return\n        }\n\n        if (currentState.inputValue) {\n          dispatch({\n            type: stateChangeTypes.ToggleButtonKeyDownCharacter,\n            key: ' ',\n          })\n        } else {\n          dispatch({type: stateChangeTypes.ToggleButtonKeyDownSpaceButton})\n        }\n      },\n    }),\n    [dispatch, latest],\n  )\n\n  // Action functions.\n  const toggleMenu = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionToggleMenu,\n    })\n  }, [dispatch])\n  const closeMenu = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionCloseMenu,\n    })\n  }, [dispatch])\n  const openMenu = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionOpenMenu,\n    })\n  }, [dispatch])\n  const setHighlightedIndex = useCallback(\n    newHighlightedIndex => {\n      dispatch({\n        type: stateChangeTypes.FunctionSetHighlightedIndex,\n        highlightedIndex: newHighlightedIndex,\n      })\n    },\n    [dispatch],\n  )\n  const selectItem = useCallback(\n    newSelectedItem => {\n      dispatch({\n        type: stateChangeTypes.FunctionSelectItem,\n        selectedItem: newSelectedItem,\n      })\n    },\n    [dispatch],\n  )\n  const reset = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionReset,\n    })\n  }, [dispatch])\n  const setInputValue = useCallback(\n    newInputValue => {\n      dispatch({\n        type: stateChangeTypes.FunctionSetInputValue,\n        inputValue: newInputValue,\n      })\n    },\n    [dispatch],\n  )\n  // Getter functions.\n  const getLabelProps = useCallback(\n    ({onClick, ...labelProps} = {}) => {\n      const labelHandleClick = () => {\n        toggleButtonRef.current?.focus()\n      }\n\n      return {\n        id: elementIds.labelId,\n        htmlFor: elementIds.toggleButtonId,\n        onClick: callAllEventHandlers(onClick, labelHandleClick),\n        ...labelProps,\n      }\n    },\n    [elementIds],\n  )\n  const getMenuProps = useCallback(\n    (\n      {onMouseLeave, refKey = 'ref', ref, ...rest} = {},\n      {suppressRefError = false} = {},\n    ) => {\n      const menuHandleMouseLeave = () => {\n        dispatch({\n          type: stateChangeTypes.MenuMouseLeave,\n        })\n      }\n\n      setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef)\n\n      return {\n        [refKey]: handleRefs(ref, menuNode => {\n          menuRef.current = menuNode\n        }),\n        id: elementIds.menuId,\n        role: 'listbox',\n        'aria-labelledby':\n          rest && rest['aria-label'] ? undefined : `${elementIds.labelId}`,\n        onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n        ...rest,\n      }\n    },\n    [dispatch, setGetterPropCallInfo, elementIds],\n  )\n  const getToggleButtonProps = useCallback(\n    (\n      {onBlur, onClick, onPress, onKeyDown, refKey = 'ref', ref, ...rest} = {},\n      {suppressRefError = false} = {},\n    ) => {\n      const latestState = latest.current.state\n      const toggleButtonHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.ToggleButtonClick,\n        })\n      }\n      const toggleButtonHandleBlur = () => {\n        if (latestState.isOpen && !mouseAndTouchTrackers.isMouseDown) {\n          dispatch({\n            type: stateChangeTypes.ToggleButtonBlur,\n          })\n        }\n      }\n      const toggleButtonHandleKeyDown = event => {\n        const key = normalizeArrowKey(event)\n        if (key && toggleButtonKeyDownHandlers[key]) {\n          toggleButtonKeyDownHandlers[key](event)\n        } else if (isAcceptedCharacterKey(key)) {\n          dispatch({\n            type: stateChangeTypes.ToggleButtonKeyDownCharacter,\n            key,\n          })\n        }\n      }\n      const toggleProps = {\n        [refKey]: handleRefs(ref, toggleButtonNode => {\n          toggleButtonRef.current = toggleButtonNode\n        }),\n        'aria-activedescendant':\n          latestState.isOpen && latestState.highlightedIndex > -1\n            ? elementIds.getItemId(latestState.highlightedIndex)\n            : '',\n        'aria-controls': elementIds.menuId,\n        'aria-expanded': latest.current.state.isOpen,\n        'aria-haspopup': 'listbox',\n        'aria-labelledby':\n          rest && rest['aria-label'] ? undefined : `${elementIds.labelId}`,\n        id: elementIds.toggleButtonId,\n        role: 'combobox',\n        tabIndex: 0,\n        onBlur: callAllEventHandlers(onBlur, toggleButtonHandleBlur),\n        ...rest,\n      }\n\n      if (!rest.disabled) {\n        /* istanbul ignore if (react-native) */\n        if (isReactNative || isReactNativeWeb) {\n          toggleProps.onPress = callAllEventHandlers(\n            onPress,\n            toggleButtonHandleClick,\n          )\n        } else {\n          toggleProps.onClick = callAllEventHandlers(\n            onClick,\n            toggleButtonHandleClick,\n          )\n          toggleProps.onKeyDown = callAllEventHandlers(\n            onKeyDown,\n            toggleButtonHandleKeyDown,\n          )\n        }\n      }\n\n      setGetterPropCallInfo(\n        'getToggleButtonProps',\n        suppressRefError,\n        refKey,\n        toggleButtonRef,\n      )\n\n      return toggleProps\n    },\n    [\n      dispatch,\n      elementIds,\n      latest,\n      mouseAndTouchTrackers,\n      setGetterPropCallInfo,\n      toggleButtonKeyDownHandlers,\n    ],\n  )\n  const getItemProps = useCallback(\n    ({\n      item: itemProp,\n      index: indexProp,\n      onMouseMove,\n      onClick,\n      onMouseDown,\n      onPress,\n      refKey = 'ref',\n      disabled: disabledProp,\n      ref,\n      ...rest\n    } = {}) => {\n      if (disabledProp !== undefined) {\n        console.warn(\n          'Passing \"disabled\" as an argument to getItemProps is not supported anymore. Please use the isItemDisabled prop from useSelect.',\n        )\n      }\n\n      const {state: latestState, props: latestProps} = latest.current\n      const [item, index] = getItemAndIndex(\n        itemProp,\n        indexProp,\n        latestProps.items,\n        'Pass either item or index to getItemProps!',\n      )\n      const disabled = latestProps.isItemDisabled(item, index)\n\n      const itemHandleMouseMove = () => {\n        if (\n          mouseAndTouchTrackers.isTouchEnd ||\n          index === latestState.highlightedIndex\n        ) {\n          return\n        }\n        shouldScrollRef.current = false\n        dispatch({\n          type: stateChangeTypes.ItemMouseMove,\n          index,\n          disabled,\n        })\n      }\n      const itemHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.ItemClick,\n          index,\n        })\n      }\n      const itemHandleMouseDown = e => e.preventDefault() // keep focus on the toggle after item click select.\n\n      const itemProps = {\n        [refKey]: handleRefs(ref, itemNode => {\n          if (itemNode) {\n            itemRefs.current[elementIds.getItemId(index)] = itemNode\n          }\n        }),\n        'aria-disabled': disabled,\n        'aria-selected': item === latestState.selectedItem,\n        id: elementIds.getItemId(index),\n        role: 'option',\n        ...rest,\n      }\n\n      if (!disabled) {\n        /* istanbul ignore next (react-native) */\n        if (isReactNative || isReactNativeWeb) {\n          itemProps.onPress = callAllEventHandlers(onPress, itemHandleClick)\n        } else {\n          itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick)\n        }\n      }\n\n      itemProps.onMouseMove = callAllEventHandlers(\n        onMouseMove,\n        itemHandleMouseMove,\n      )\n      itemProps.onMouseDown = callAllEventHandlers(\n        onMouseDown,\n        itemHandleMouseDown,\n      )\n\n      return itemProps\n    },\n    [latest, elementIds, mouseAndTouchTrackers, shouldScrollRef, dispatch],\n  )\n\n  return {\n    // prop getters.\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    // actions.\n    toggleMenu,\n    openMenu,\n    closeMenu,\n    setHighlightedIndex,\n    selectItem,\n    reset,\n    setInputValue,\n    // state.\n    highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue,\n  }\n}\n\nexport default useSelect\n","import productionEnum from '../../productionEnum.macro'\n\nexport const InputKeyDownArrowDown = productionEnum(\n  '__input_keydown_arrow_down__',\n)\nexport const InputKeyDownArrowUp = productionEnum('__input_keydown_arrow_up__')\nexport const InputKeyDownEscape = productionEnum('__input_keydown_escape__')\nexport const InputKeyDownHome = productionEnum('__input_keydown_home__')\nexport const InputKeyDownEnd = productionEnum('__input_keydown_end__')\nexport const InputKeyDownPageUp = productionEnum('__input_keydown_page_up__')\nexport const InputKeyDownPageDown = productionEnum(\n  '__input_keydown_page_down__',\n)\nexport const InputKeyDownEnter = productionEnum('__input_keydown_enter__')\nexport const InputChange = productionEnum('__input_change__')\nexport const InputBlur = productionEnum('__input_blur__')\nexport const InputClick = productionEnum('__input_click__')\n\nexport const MenuMouseLeave = productionEnum('__menu_mouse_leave__')\n\nexport const ItemMouseMove = productionEnum('__item_mouse_move__')\nexport const ItemClick = productionEnum('__item_click__')\n\nexport const ToggleButtonClick = productionEnum('__togglebutton_click__')\n\nexport const FunctionToggleMenu = productionEnum('__function_toggle_menu__')\nexport const FunctionOpenMenu = productionEnum('__function_open_menu__')\nexport const FunctionCloseMenu = productionEnum('__function_close_menu__')\nexport const FunctionSetHighlightedIndex = productionEnum(\n  '__function_set_highlighted_index__',\n)\nexport const FunctionSelectItem = productionEnum('__function_select_item__')\nexport const FunctionSetInputValue = productionEnum(\n  '__function_set_input_value__',\n)\nexport const FunctionReset = productionEnum('__function_reset__')\nexport const ControlledPropUpdatedSelectedItem = productionEnum(\n  '__controlled_prop_updated_selected_item__',\n)\n","import {useRef, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {isControlledProp, getState, noop} from '../../utils'\nimport {\n  commonDropdownPropTypes,\n  defaultProps as defaultPropsCommon,\n  getInitialState as getInitialStateCommon,\n  useEnhancedReducer,\n  useIsInitialMount,\n} from '../utils'\nimport {ControlledPropUpdatedSelectedItem} from './stateChangeTypes'\n\nexport function getInitialState(props) {\n  const initialState = getInitialStateCommon(props)\n  const {selectedItem} = initialState\n  let {inputValue} = initialState\n\n  if (\n    inputValue === '' &&\n    selectedItem &&\n    props.defaultInputValue === undefined &&\n    props.initialInputValue === undefined &&\n    props.inputValue === undefined\n  ) {\n    inputValue = props.itemToString(selectedItem)\n  }\n\n  return {\n    ...initialState,\n    inputValue,\n  }\n}\n\nconst propTypes = {\n  ...commonDropdownPropTypes,\n  items: PropTypes.array.isRequired,\n  isItemDisabled: PropTypes.func,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  inputId: PropTypes.string,\n  onInputValueChange: PropTypes.func,\n}\n\n/**\n * The useCombobox version of useControlledReducer, which also\n * checks if the controlled prop selectedItem changed between\n * renders. If so, it will also update inputValue with its\n * string equivalent. It uses the common useEnhancedReducer to\n * compute the rest of the state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} props The hook props, also passed to createInitialState.\n * @param {Function} createInitialState Function that returns the initial state.\n * @param {Function} isStateEqual Function that checks if a previous state is equal to the next.\n * @returns {Array} An array with the state and an action dispatcher.\n */\nexport function useControlledReducer(\n  reducer,\n  props,\n  createInitialState,\n  isStateEqual,\n) {\n  const previousSelectedItemRef = useRef()\n  const [state, dispatch] = useEnhancedReducer(\n    reducer,\n    props,\n    createInitialState,\n    isStateEqual,\n  )\n  const isInitialMount = useIsInitialMount()\n\n  useEffect(() => {\n    if (!isControlledProp(props, 'selectedItem')) {\n      return\n    }\n\n    if (\n      !isInitialMount // on first mount we already have the proper inputValue for a initial selected item.\n    ) {\n      const shouldCallDispatch =\n        props.itemToKey(props.selectedItem) !==\n        props.itemToKey(previousSelectedItemRef.current)\n\n      if (shouldCallDispatch) {\n        dispatch({\n          type: ControlledPropUpdatedSelectedItem,\n          inputValue: props.itemToString(props.selectedItem),\n        })\n      }\n    }\n\n    previousSelectedItemRef.current =\n      state.selectedItem === previousSelectedItemRef.current\n        ? props.selectedItem\n        : state.selectedItem\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.selectedItem, props.selectedItem])\n\n  return [getState(state, props), dispatch]\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let validatePropTypes = noop\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = (options, caller) => {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name)\n  }\n}\n\nexport const defaultProps = {\n  ...defaultPropsCommon,\n  isItemDisabled() {\n    return false\n  },\n}\n","import {\n  getHighlightedIndexOnOpen,\n  getDefaultValue,\n  getChangesOnSelection,\n  getDefaultHighlightedIndex,\n} from '../utils'\nimport {getHighlightedIndex, getNonDisabledIndex} from '../../utils'\nimport commonReducer from '../reducer'\nimport * as stateChangeTypes from './stateChangeTypes'\n\n/* eslint-disable complexity */\nexport default function downshiftUseComboboxReducer(state, action) {\n  const {type, props, altKey} = action\n  let changes\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultHighlightedIndex(props),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index]),\n      }\n\n      break\n    case stateChangeTypes.InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getHighlightedIndex(\n            state.highlightedIndex,\n            1,\n            props.items,\n            props.isItemDisabled,\n            true,\n          ),\n        }\n      } else {\n        changes = {\n          highlightedIndex:\n            altKey && state.selectedItem == null\n              ? -1\n              : getHighlightedIndexOnOpen(props, state, 1),\n          isOpen: props.items.length >= 0,\n        }\n      }\n      break\n    case stateChangeTypes.InputKeyDownArrowUp:\n      if (state.isOpen) {\n        if (altKey) {\n          changes = getChangesOnSelection(props, state.highlightedIndex)\n        } else {\n          changes = {\n            highlightedIndex: getHighlightedIndex(\n              state.highlightedIndex,\n              -1,\n              props.items,\n              props.isItemDisabled,\n              true,\n            ),\n          }\n        }\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1),\n          isOpen: props.items.length >= 0,\n        }\n      }\n      break\n    case stateChangeTypes.InputKeyDownEnter:\n      changes = getChangesOnSelection(props, state.highlightedIndex)\n\n      break\n    case stateChangeTypes.InputKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(!state.isOpen && {\n          selectedItem: null,\n          inputValue: '',\n        }),\n      }\n      break\n    case stateChangeTypes.InputKeyDownPageUp:\n      changes = {\n        highlightedIndex: getHighlightedIndex(\n          state.highlightedIndex,\n          -10,\n          props.items,\n          props.isItemDisabled,\n          true,\n        ),\n      }\n      break\n    case stateChangeTypes.InputKeyDownPageDown:\n      changes = {\n        highlightedIndex: getHighlightedIndex(\n          state.highlightedIndex,\n          10,\n          props.items,\n          props.isItemDisabled,\n          true,\n        ),\n      }\n      break\n    case stateChangeTypes.InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNonDisabledIndex(\n          0,\n          false,\n          props.items,\n          props.isItemDisabled,\n        ),\n      }\n      break\n    case stateChangeTypes.InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNonDisabledIndex(\n          props.items.length - 1,\n          true,\n          props.items,\n          props.isItemDisabled,\n        ),\n      }\n      break\n    case stateChangeTypes.InputBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(state.highlightedIndex >= 0 &&\n          props.items?.length &&\n          action.selectItem && {\n            selectedItem: props.items[state.highlightedIndex],\n            inputValue: props.itemToString(props.items[state.highlightedIndex]),\n          }),\n      }\n      break\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultHighlightedIndex(props),\n        inputValue: action.inputValue,\n      }\n      break\n    case stateChangeTypes.InputClick:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen\n          ? -1\n          : getHighlightedIndexOnOpen(props, state, 0),\n      }\n      break\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem),\n      }\n      break\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n      changes = {\n        inputValue: action.inputValue,\n      }\n      break\n    default:\n      return commonReducer(state, action, stateChangeTypes)\n  }\n\n  return {\n    ...state,\n    ...changes,\n  }\n}\n/* eslint-enable complexity */\n","import {useRef, useEffect, useCallback, useMemo} from 'react'\nimport {isPreact, isReactNative, isReactNativeWeb} from '../../is.macro'\nimport {handleRefs, normalizeArrowKey, callAllEventHandlers} from '../../utils'\nimport {\n  useMouseAndTouchTracker,\n  useGetterPropsCalledChecker,\n  useLatestRef,\n  useScrollIntoView,\n  useControlPropsValidator,\n  useElementIds,\n  getItemAndIndex,\n  getInitialValue,\n  isDropdownsStateEqual,\n  useIsInitialMount,\n  useA11yMessageStatus,\n} from '../utils'\nimport {\n  getInitialState,\n  defaultProps,\n  useControlledReducer,\n  validatePropTypes,\n} from './utils'\nimport downshiftUseComboboxReducer from './reducer'\nimport * as stateChangeTypes from './stateChangeTypes'\n\nuseCombobox.stateChangeTypes = stateChangeTypes\n\nfunction useCombobox(userProps = {}) {\n  validatePropTypes(userProps, useCombobox)\n  // Props defaults and destructuring.\n  const props = {\n    ...defaultProps,\n    ...userProps,\n  }\n  const {items, scrollIntoView, environment, getA11yStatusMessage} = props\n  // Initial state depending on controlled props.\n  const [state, dispatch] = useControlledReducer(\n    downshiftUseComboboxReducer,\n    props,\n    getInitialState,\n    isDropdownsStateEqual,\n  )\n  const {isOpen, highlightedIndex, selectedItem, inputValue} = state\n\n  // Element refs.\n  const menuRef = useRef(null)\n  const itemRefs = useRef({})\n  const inputRef = useRef(null)\n  const toggleButtonRef = useRef(null)\n  const isInitialMount = useIsInitialMount()\n\n  // prevent id re-generation between renders.\n  const elementIds = useElementIds(props)\n  // used to keep track of how many items we had on previous cycle.\n  const previousResultCountRef = useRef()\n  // utility callback to get item element.\n  const latest = useLatestRef({state, props})\n\n  const getItemNodeFromIndex = useCallback(\n    index => itemRefs.current[elementIds.getItemId(index)],\n    [elementIds],\n  )\n\n  // Effects.\n  // Adds an a11y aria live status message if getA11yStatusMessage is passed.\n  useA11yMessageStatus(\n    getA11yStatusMessage,\n    state,\n    [isOpen, highlightedIndex, selectedItem, inputValue],\n    environment,\n  )\n  // Scroll on highlighted item if change comes from keyboard.\n  const shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    scrollIntoView,\n    getItemNodeFromIndex,\n  })\n  useControlPropsValidator({\n    props,\n    state,\n  })\n  // Focus the input on first render if required.\n  useEffect(() => {\n    const focusOnOpen = getInitialValue(props, 'isOpen')\n\n    if (focusOnOpen && inputRef.current) {\n      inputRef.current.focus()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  useEffect(() => {\n    if (!isInitialMount) {\n      previousResultCountRef.current = items.length\n    }\n  })\n  const mouseAndTouchTrackers = useMouseAndTouchTracker(\n    environment,\n    [toggleButtonRef, menuRef, inputRef],\n    useCallback(\n      function handleBlur() {\n        if (latest.current.state.isOpen) {\n          dispatch({\n            type: stateChangeTypes.InputBlur,\n            selectItem: false,\n          })\n        }\n      },\n      [dispatch, latest],\n    ),\n  )\n  const setGetterPropCallInfo = useGetterPropsCalledChecker(\n    'getInputProps',\n    'getMenuProps',\n  )\n  // Reset itemRefs on close.\n  useEffect(() => {\n    if (!isOpen) {\n      itemRefs.current = {}\n    }\n  }, [isOpen])\n  // Reset itemRefs on close.\n  useEffect(() => {\n    if (!isOpen || !environment?.document || !inputRef?.current?.focus) {\n      return\n    }\n\n    if (environment.document.activeElement !== inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [isOpen, environment])\n\n  /* Event handler functions */\n  const inputKeyDownHandlers = useMemo(\n    () => ({\n      ArrowDown(event) {\n        event.preventDefault()\n        dispatch({\n          type: stateChangeTypes.InputKeyDownArrowDown,\n          altKey: event.altKey,\n        })\n      },\n      ArrowUp(event) {\n        event.preventDefault()\n        dispatch({\n          type: stateChangeTypes.InputKeyDownArrowUp,\n          altKey: event.altKey,\n        })\n      },\n      Home(event) {\n        if (!latest.current.state.isOpen) {\n          return\n        }\n\n        event.preventDefault()\n        dispatch({\n          type: stateChangeTypes.InputKeyDownHome,\n        })\n      },\n      End(event) {\n        if (!latest.current.state.isOpen) {\n          return\n        }\n\n        event.preventDefault()\n        dispatch({\n          type: stateChangeTypes.InputKeyDownEnd,\n        })\n      },\n      Escape(event) {\n        const latestState = latest.current.state\n        if (\n          latestState.isOpen ||\n          latestState.inputValue ||\n          latestState.selectedItem ||\n          latestState.highlightedIndex > -1\n        ) {\n          event.preventDefault()\n\n          dispatch({\n            type: stateChangeTypes.InputKeyDownEscape,\n          })\n        }\n      },\n      Enter(event) {\n        const latestState = latest.current.state\n        // if closed or no highlighted index, do nothing.\n        if (\n          !latestState.isOpen ||\n          event.which === 229 // if IME composing, wait for next Enter keydown event.\n        ) {\n          return\n        }\n\n        event.preventDefault()\n        dispatch({\n          type: stateChangeTypes.InputKeyDownEnter,\n        })\n      },\n      PageUp(event) {\n        if (latest.current.state.isOpen) {\n          event.preventDefault()\n\n          dispatch({\n            type: stateChangeTypes.InputKeyDownPageUp,\n          })\n        }\n      },\n      PageDown(event) {\n        if (latest.current.state.isOpen) {\n          event.preventDefault()\n\n          dispatch({\n            type: stateChangeTypes.InputKeyDownPageDown,\n          })\n        }\n      },\n    }),\n    [dispatch, latest],\n  )\n\n  // Getter props.\n  const getLabelProps = useCallback(\n    labelProps => ({\n      id: elementIds.labelId,\n      htmlFor: elementIds.inputId,\n      ...labelProps,\n    }),\n    [elementIds],\n  )\n  const getMenuProps = useCallback(\n    (\n      {onMouseLeave, refKey = 'ref', ref, ...rest} = {},\n      {suppressRefError = false} = {},\n    ) => {\n      setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef)\n      return {\n        [refKey]: handleRefs(ref, menuNode => {\n          menuRef.current = menuNode\n        }),\n        id: elementIds.menuId,\n        role: 'listbox',\n        'aria-labelledby':\n          rest && rest['aria-label'] ? undefined : `${elementIds.labelId}`,\n        onMouseLeave: callAllEventHandlers(onMouseLeave, () => {\n          dispatch({\n            type: stateChangeTypes.MenuMouseLeave,\n          })\n        }),\n        ...rest,\n      }\n    },\n    [dispatch, setGetterPropCallInfo, elementIds],\n  )\n\n  const getItemProps = useCallback(\n    ({\n      item: itemProp,\n      index: indexProp,\n      refKey = 'ref',\n      ref,\n      onMouseMove,\n      onMouseDown,\n      onClick,\n      onPress,\n      disabled: disabledProp,\n      ...rest\n    } = {}) => {\n      if (disabledProp !== undefined) {\n        console.warn(\n          'Passing \"disabled\" as an argument to getItemProps is not supported anymore. Please use the isItemDisabled prop from useCombobox.',\n        )\n      }\n\n      const {props: latestProps, state: latestState} = latest.current\n      const [item, index] = getItemAndIndex(\n        itemProp,\n        indexProp,\n        latestProps.items,\n        'Pass either item or index to getItemProps!',\n      )\n      const disabled = latestProps.isItemDisabled(item, index)\n      const onSelectKey =\n        isReactNative || isReactNativeWeb\n          ? /* istanbul ignore next (react-native) */ 'onPress'\n          : 'onClick'\n      const customClickHandler = isReactNative\n        ? /* istanbul ignore next (react-native) */ onPress\n        : onClick\n\n      const itemHandleMouseMove = () => {\n        if (\n          mouseAndTouchTrackers.isTouchEnd ||\n          index === latestState.highlightedIndex\n        ) {\n          return\n        }\n\n        shouldScrollRef.current = false\n\n        dispatch({\n          type: stateChangeTypes.ItemMouseMove,\n          index,\n          disabled,\n        })\n      }\n      const itemHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.ItemClick,\n          index,\n        })\n      }\n      const itemHandleMouseDown = e => e.preventDefault() // keep focus on the input after item click select.\n\n      return {\n        [refKey]: handleRefs(ref, itemNode => {\n          if (itemNode) {\n            itemRefs.current[elementIds.getItemId(index)] = itemNode\n          }\n        }),\n        'aria-disabled': disabled,\n        'aria-selected': index === latestState.highlightedIndex,\n        id: elementIds.getItemId(index),\n        role: 'option',\n        ...(!disabled && {\n          [onSelectKey]: callAllEventHandlers(\n            customClickHandler,\n            itemHandleClick,\n          ),\n        }),\n        onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove),\n        onMouseDown: callAllEventHandlers(onMouseDown, itemHandleMouseDown),\n        ...rest,\n      }\n    },\n\n    [dispatch, elementIds, latest, mouseAndTouchTrackers, shouldScrollRef],\n  )\n\n  const getToggleButtonProps = useCallback(\n    ({onClick, onPress, refKey = 'ref', ref, ...rest} = {}) => {\n      const latestState = latest.current.state\n      const toggleButtonHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.ToggleButtonClick,\n        })\n      }\n\n      return {\n        [refKey]: handleRefs(ref, toggleButtonNode => {\n          toggleButtonRef.current = toggleButtonNode\n        }),\n        'aria-controls': elementIds.menuId,\n        'aria-expanded': latestState.isOpen,\n        id: elementIds.toggleButtonId,\n        tabIndex: -1,\n        ...(!rest.disabled && {\n          ...(isReactNative || isReactNativeWeb\n            ? /* istanbul ignore next (react-native) */ {\n                onPress: callAllEventHandlers(onPress, toggleButtonHandleClick),\n              }\n            : {\n                onClick: callAllEventHandlers(onClick, toggleButtonHandleClick),\n              }),\n        }),\n        ...rest,\n      }\n    },\n    [dispatch, latest, elementIds],\n  )\n  const getInputProps = useCallback(\n    (\n      {\n        onKeyDown,\n        onChange,\n        onInput,\n        onBlur,\n        onChangeText,\n        onClick,\n        refKey = 'ref',\n        ref,\n        ...rest\n      } = {},\n      {suppressRefError = false} = {},\n    ) => {\n      setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef)\n\n      const latestState = latest.current.state\n      const inputHandleKeyDown = event => {\n        const key = normalizeArrowKey(event)\n        if (key && inputKeyDownHandlers[key]) {\n          inputKeyDownHandlers[key](event)\n        }\n      }\n      const inputHandleChange = event => {\n        dispatch({\n          type: stateChangeTypes.InputChange,\n          inputValue:\n            isReactNative || isReactNativeWeb\n              ? /* istanbul ignore next (react-native) */ event.nativeEvent.text\n              : event.target.value,\n        })\n      }\n      const inputHandleBlur = event => {\n        /* istanbul ignore else */\n        if (\n          environment?.document &&\n          latestState.isOpen &&\n          !mouseAndTouchTrackers.isMouseDown\n        ) {\n          const isBlurByTabChange =\n            event.relatedTarget === null &&\n            environment.document.activeElement !== environment.document.body\n\n          dispatch({\n            type: stateChangeTypes.InputBlur,\n            selectItem: !isBlurByTabChange,\n          })\n        }\n      }\n\n      const inputHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.InputClick,\n        })\n      }\n\n      /* istanbul ignore next (preact) */\n      const onChangeKey = isPreact ? 'onInput' : 'onChange'\n      let eventHandlers = {}\n\n      if (!rest.disabled) {\n        eventHandlers = {\n          [onChangeKey]: callAllEventHandlers(\n            onChange,\n            onInput,\n            inputHandleChange,\n          ),\n          onKeyDown: callAllEventHandlers(onKeyDown, inputHandleKeyDown),\n          onBlur: callAllEventHandlers(onBlur, inputHandleBlur),\n          onClick: callAllEventHandlers(onClick, inputHandleClick),\n        }\n      }\n\n      /* istanbul ignore if (react-native) */\n      if (isReactNative) {\n        eventHandlers.onChange = callAllEventHandlers(\n          onChange,\n          onInput,\n          inputHandleChange,\n        )\n        eventHandlers.onChangeText = callAllEventHandlers(\n          onChangeText,\n          onInput,\n          text => {\n            inputHandleChange({nativeEvent: {text}})\n          },\n        )\n      }\n\n      return {\n        [refKey]: handleRefs(ref, inputNode => {\n          inputRef.current = inputNode\n        }),\n        'aria-activedescendant':\n          latestState.isOpen && latestState.highlightedIndex > -1\n            ? elementIds.getItemId(latestState.highlightedIndex)\n            : '',\n        'aria-autocomplete': 'list',\n        'aria-controls': elementIds.menuId,\n        'aria-expanded': latestState.isOpen,\n        'aria-labelledby':\n          rest && rest['aria-label'] ? undefined : elementIds.labelId,\n        // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n        // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n        autoComplete: 'off',\n        id: elementIds.inputId,\n        role: 'combobox',\n        value: latestState.inputValue,\n        ...eventHandlers,\n        ...rest,\n      }\n    },\n    [\n      dispatch,\n      elementIds,\n      environment,\n      inputKeyDownHandlers,\n      latest,\n      mouseAndTouchTrackers,\n      setGetterPropCallInfo,\n    ],\n  )\n\n  // returns\n  const toggleMenu = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionToggleMenu,\n    })\n  }, [dispatch])\n  const closeMenu = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionCloseMenu,\n    })\n  }, [dispatch])\n  const openMenu = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionOpenMenu,\n    })\n  }, [dispatch])\n  const setHighlightedIndex = useCallback(\n    newHighlightedIndex => {\n      dispatch({\n        type: stateChangeTypes.FunctionSetHighlightedIndex,\n        highlightedIndex: newHighlightedIndex,\n      })\n    },\n    [dispatch],\n  )\n  const selectItem = useCallback(\n    newSelectedItem => {\n      dispatch({\n        type: stateChangeTypes.FunctionSelectItem,\n        selectedItem: newSelectedItem,\n      })\n    },\n    [dispatch],\n  )\n  const setInputValue = useCallback(\n    newInputValue => {\n      dispatch({\n        type: stateChangeTypes.FunctionSetInputValue,\n        inputValue: newInputValue,\n      })\n    },\n    [dispatch],\n  )\n  const reset = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionReset,\n    })\n  }, [dispatch])\n\n  return {\n    // prop getters.\n    getItemProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getToggleButtonProps,\n    // actions.\n    toggleMenu,\n    openMenu,\n    closeMenu,\n    setHighlightedIndex,\n    setInputValue,\n    selectItem,\n    reset,\n    // state.\n    highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue,\n  }\n}\n\nexport default useCombobox\n","import PropTypes from 'prop-types'\nimport {\n  getInitialValue as getInitialValueCommon,\n  getDefaultValue as getDefaultValueCommon,\n  defaultProps as defaultPropsCommon,\n  commonPropTypes,\n} from '../utils'\nimport {noop} from '../../utils'\n\nconst defaultStateValues = {\n  activeIndex: -1,\n  selectedItems: [],\n}\n\n/**\n * Returns the initial value for a state key in the following order:\n * 1. controlled prop, 2. initial prop, 3. default prop, 4. default\n * value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\nfunction getInitialValue(props, propKey) {\n  return getInitialValueCommon(props, propKey, defaultStateValues)\n}\n\n/**\n * Returns the default value for a state key in the following order:\n * 1. controlled prop, 2. default prop, 3. default value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\nfunction getDefaultValue(props, propKey) {\n  return getDefaultValueCommon(props, propKey, defaultStateValues)\n}\n\n/**\n * Gets the initial state based on the provided props. It uses initial, default\n * and controlled props related to state in order to compute the initial value.\n *\n * @param {Object} props Props passed to the hook.\n * @returns {Object} The initial state.\n */\nfunction getInitialState(props) {\n  const activeIndex = getInitialValue(props, 'activeIndex')\n  const selectedItems = getInitialValue(props, 'selectedItems')\n\n  return {\n    activeIndex,\n    selectedItems,\n  }\n}\n\n/**\n * Returns true if dropdown keydown operation is permitted. Should not be\n * allowed on keydown with modifier keys (ctrl, alt, shift, meta), on\n * input element with text content that is either highlighted or selection\n * cursor is not at the starting position.\n *\n * @param {KeyboardEvent} event The event from keydown.\n * @returns {boolean} Whether the operation is allowed.\n */\nfunction isKeyDownOperationPermitted(event) {\n  if (event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n    return false\n  }\n\n  const element = event.target\n\n  if (\n    element instanceof HTMLInputElement && // if element is a text input\n    element.value !== '' && // and we have text in it\n    // and cursor is either not at the start or is currently highlighting text.\n    (element.selectionStart !== 0 || element.selectionEnd !== 0)\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Check if a state is equal for taglist, by comparing active index and selected items.\n * Used by useSelect and useCombobox.\n *\n * @param {Object} prevState\n * @param {Object} newState\n * @returns {boolean} Wheather the states are deeply equal.\n */\nfunction isStateEqual(prevState, newState) {\n  return (\n    prevState.selectedItems === newState.selectedItems &&\n    prevState.activeIndex === newState.activeIndex\n  )\n}\n\nconst propTypes = {\n  stateReducer: commonPropTypes.stateReducer,\n  itemToKey: commonPropTypes.itemToKey,\n  environment: commonPropTypes.environment,\n  selectedItems: PropTypes.array,\n  initialSelectedItems: PropTypes.array,\n  defaultSelectedItems: PropTypes.array,\n  getA11yStatusMessage: PropTypes.func,\n  activeIndex: PropTypes.number,\n  initialActiveIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  onActiveIndexChange: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  keyNavigationNext: PropTypes.string,\n  keyNavigationPrevious: PropTypes.string,\n}\n\nexport const defaultProps = {\n  itemToKey: defaultPropsCommon.itemToKey,\n  stateReducer: defaultPropsCommon.stateReducer,\n  environment: defaultPropsCommon.environment,\n  keyNavigationNext: 'ArrowRight',\n  keyNavigationPrevious: 'ArrowLeft',\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nlet validatePropTypes = noop\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = (options, caller) => {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name)\n  }\n}\n\nexport {\n  validatePropTypes,\n  getDefaultValue,\n  getInitialState,\n  isKeyDownOperationPermitted,\n  isStateEqual,\n}\n","import productionEnum from '../../productionEnum.macro'\n\nexport const SelectedItemClick = productionEnum('__selected_item_click__')\nexport const SelectedItemKeyDownDelete = productionEnum(\n  '__selected_item_keydown_delete__',\n)\nexport const SelectedItemKeyDownBackspace = productionEnum(\n  '__selected_item_keydown_backspace__',\n)\nexport const SelectedItemKeyDownNavigationNext = productionEnum(\n  '__selected_item_keydown_navigation_next__',\n)\nexport const SelectedItemKeyDownNavigationPrevious = productionEnum(\n  '__selected_item_keydown_navigation_previous__',\n)\n\nexport const DropdownKeyDownNavigationPrevious = productionEnum(\n  '__dropdown_keydown_navigation_previous__',\n)\nexport const DropdownKeyDownBackspace = productionEnum(\n  '__dropdown_keydown_backspace__',\n)\nexport const DropdownClick = productionEnum('__dropdown_click__')\n\nexport const FunctionAddSelectedItem = productionEnum(\n  '__function_add_selected_item__',\n)\nexport const FunctionRemoveSelectedItem = productionEnum(\n  '__function_remove_selected_item__',\n)\nexport const FunctionSetSelectedItems = productionEnum(\n  '__function_set_selected_items__',\n)\nexport const FunctionSetActiveIndex = productionEnum(\n  '__function_set_active_index__',\n)\nexport const FunctionReset = productionEnum('__function_reset__')\n","import {getDefaultValue} from './utils'\nimport * as stateChangeTypes from './stateChangeTypes'\n\n/* eslint-disable complexity */\nexport default function downshiftMultipleSelectionReducer(state, action) {\n  const {type, index, props, selectedItem} = action\n  const {activeIndex, selectedItems} = state\n  let changes\n\n  switch (type) {\n    case stateChangeTypes.SelectedItemClick:\n      changes = {\n        activeIndex: index,\n      }\n\n      break\n    case stateChangeTypes.SelectedItemKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: activeIndex - 1 < 0 ? 0 : activeIndex - 1,\n      }\n\n      break\n    case stateChangeTypes.SelectedItemKeyDownNavigationNext:\n      changes = {\n        activeIndex:\n          activeIndex + 1 >= selectedItems.length ? -1 : activeIndex + 1,\n      }\n\n      break\n    case stateChangeTypes.SelectedItemKeyDownBackspace:\n    case stateChangeTypes.SelectedItemKeyDownDelete: {\n      if (activeIndex < 0) {\n        break\n      }\n\n      let newActiveIndex = activeIndex\n\n      if (selectedItems.length === 1) {\n        newActiveIndex = -1\n      } else if (activeIndex === selectedItems.length - 1) {\n        newActiveIndex = selectedItems.length - 2\n      }\n\n      changes = {\n        selectedItems: [\n          ...selectedItems.slice(0, activeIndex),\n          ...selectedItems.slice(activeIndex + 1),\n        ],\n        ...{activeIndex: newActiveIndex},\n      }\n\n      break\n    }\n\n    case stateChangeTypes.DropdownKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: selectedItems.length - 1,\n      }\n      break\n    case stateChangeTypes.DropdownKeyDownBackspace:\n      changes = {\n        selectedItems: selectedItems.slice(0, selectedItems.length - 1),\n      }\n      break\n    case stateChangeTypes.FunctionAddSelectedItem:\n      changes = {\n        selectedItems: [...selectedItems, selectedItem],\n      }\n      break\n    case stateChangeTypes.DropdownClick:\n      changes = {\n        activeIndex: -1,\n      }\n      break\n    case stateChangeTypes.FunctionRemoveSelectedItem: {\n      let newActiveIndex = activeIndex\n      const selectedItemIndex = selectedItems.findIndex(\n        item => props.itemToKey(item) === props.itemToKey(selectedItem),\n      )\n\n      if (selectedItemIndex < 0) {\n        break\n      }\n\n      if (selectedItems.length === 1) {\n        newActiveIndex = -1\n      } else if (selectedItemIndex === selectedItems.length - 1) {\n        newActiveIndex = selectedItems.length - 2\n      }\n\n      changes = {\n        selectedItems: [\n          ...selectedItems.slice(0, selectedItemIndex),\n          ...selectedItems.slice(selectedItemIndex + 1),\n        ],\n        activeIndex: newActiveIndex,\n      }\n\n      break\n    }\n    case stateChangeTypes.FunctionSetSelectedItems: {\n      const {selectedItems: newSelectedItems} = action\n      changes = {\n        selectedItems: newSelectedItems,\n      }\n      break\n    }\n    case stateChangeTypes.FunctionSetActiveIndex: {\n      const {activeIndex: newActiveIndex} = action\n      changes = {\n        activeIndex: newActiveIndex,\n      }\n      break\n    }\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        activeIndex: getDefaultValue(props, 'activeIndex'),\n        selectedItems: getDefaultValue(props, 'selectedItems'),\n      }\n      break\n    default:\n      throw new Error('Reducer called without proper action type.')\n  }\n\n  return {\n    ...state,\n    ...changes,\n  }\n}\n","import {useRef, useEffect, useCallback, useMemo} from 'react'\nimport {handleRefs, callAllEventHandlers, normalizeArrowKey} from '../../utils'\nimport {\n  useControlledReducer,\n  useGetterPropsCalledChecker,\n  useLatestRef,\n  useControlPropsValidator,\n  getItemAndIndex,\n  useIsInitialMount,\n  useA11yMessageStatus,\n} from '../utils'\nimport {\n  getInitialState,\n  defaultProps,\n  isKeyDownOperationPermitted,\n  validatePropTypes,\n  isStateEqual,\n} from './utils'\nimport downshiftMultipleSelectionReducer from './reducer'\nimport * as stateChangeTypes from './stateChangeTypes'\n\nuseMultipleSelection.stateChangeTypes = stateChangeTypes\n\nfunction useMultipleSelection(userProps = {}) {\n  validatePropTypes(userProps, useMultipleSelection)\n  // Props defaults and destructuring.\n  const props = {\n    ...defaultProps,\n    ...userProps,\n  }\n  const {\n    getA11yStatusMessage,\n    environment,\n    keyNavigationNext,\n    keyNavigationPrevious,\n  } = props\n\n  // Reducer init.\n  const [state, dispatch] = useControlledReducer(\n    downshiftMultipleSelectionReducer,\n    props,\n    getInitialState,\n    isStateEqual,\n  )\n  const {activeIndex, selectedItems} = state\n\n  // Refs.\n  const isInitialMount = useIsInitialMount()\n  const dropdownRef = useRef(null)\n  const selectedItemRefs = useRef()\n  selectedItemRefs.current = []\n  const latest = useLatestRef({state, props})\n\n  // Effects.\n  // Adds an a11y aria live status message if getA11yStatusMessage is passed.\n  useA11yMessageStatus(\n    getA11yStatusMessage,\n    state,\n    [activeIndex, selectedItems],\n    environment,\n  )\n  // Sets focus on active item.\n  useEffect(() => {\n    if (isInitialMount) {\n      return\n    }\n\n    if (activeIndex === -1 && dropdownRef.current) {\n      dropdownRef.current.focus()\n    } else if (selectedItemRefs.current[activeIndex]) {\n      selectedItemRefs.current[activeIndex].focus()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeIndex])\n  useControlPropsValidator({\n    props,\n    state,\n  })\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getDropdownProps')\n\n  // Event handler functions.\n  const selectedItemKeyDownHandlers = useMemo(\n    () => ({\n      [keyNavigationPrevious]() {\n        dispatch({\n          type: stateChangeTypes.SelectedItemKeyDownNavigationPrevious,\n        })\n      },\n      [keyNavigationNext]() {\n        dispatch({\n          type: stateChangeTypes.SelectedItemKeyDownNavigationNext,\n        })\n      },\n      Delete() {\n        dispatch({\n          type: stateChangeTypes.SelectedItemKeyDownDelete,\n        })\n      },\n      Backspace() {\n        dispatch({\n          type: stateChangeTypes.SelectedItemKeyDownBackspace,\n        })\n      },\n    }),\n    [dispatch, keyNavigationNext, keyNavigationPrevious],\n  )\n  const dropdownKeyDownHandlers = useMemo(\n    () => ({\n      [keyNavigationPrevious](event) {\n        if (isKeyDownOperationPermitted(event)) {\n          dispatch({\n            type: stateChangeTypes.DropdownKeyDownNavigationPrevious,\n          })\n        }\n      },\n      Backspace(event) {\n        if (isKeyDownOperationPermitted(event)) {\n          dispatch({\n            type: stateChangeTypes.DropdownKeyDownBackspace,\n          })\n        }\n      },\n    }),\n    [dispatch, keyNavigationPrevious],\n  )\n\n  // Getter props.\n  const getSelectedItemProps = useCallback(\n    ({\n      refKey = 'ref',\n      ref,\n      onClick,\n      onKeyDown,\n      selectedItem: selectedItemProp,\n      index: indexProp,\n      ...rest\n    } = {}) => {\n      const {state: latestState} = latest.current\n      const [, index] = getItemAndIndex(\n        selectedItemProp,\n        indexProp,\n        latestState.selectedItems,\n        'Pass either item or index to getSelectedItemProps!',\n      )\n      const isFocusable = index > -1 && index === latestState.activeIndex\n\n      const selectedItemHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.SelectedItemClick,\n          index,\n        })\n      }\n      const selectedItemHandleKeyDown = event => {\n        const key = normalizeArrowKey(event)\n        if (key && selectedItemKeyDownHandlers[key]) {\n          selectedItemKeyDownHandlers[key](event)\n        }\n      }\n\n      return {\n        [refKey]: handleRefs(ref, selectedItemNode => {\n          if (selectedItemNode) {\n            selectedItemRefs.current.push(selectedItemNode)\n          }\n        }),\n        tabIndex: isFocusable ? 0 : -1,\n        onClick: callAllEventHandlers(onClick, selectedItemHandleClick),\n        onKeyDown: callAllEventHandlers(onKeyDown, selectedItemHandleKeyDown),\n        ...rest,\n      }\n    },\n    [dispatch, latest, selectedItemKeyDownHandlers],\n  )\n  const getDropdownProps = useCallback(\n    (\n      {\n        refKey = 'ref',\n        ref,\n        onKeyDown,\n        onClick,\n        preventKeyAction = false,\n        ...rest\n      } = {},\n      {suppressRefError = false} = {},\n    ) => {\n      setGetterPropCallInfo(\n        'getDropdownProps',\n        suppressRefError,\n        refKey,\n        dropdownRef,\n      )\n\n      const dropdownHandleKeyDown = event => {\n        const key = normalizeArrowKey(event)\n        if (key && dropdownKeyDownHandlers[key]) {\n          dropdownKeyDownHandlers[key](event)\n        }\n      }\n      const dropdownHandleClick = () => {\n        dispatch({\n          type: stateChangeTypes.DropdownClick,\n        })\n      }\n\n      return {\n        [refKey]: handleRefs(ref, dropdownNode => {\n          if (dropdownNode) {\n            dropdownRef.current = dropdownNode\n          }\n        }),\n        ...(!preventKeyAction && {\n          onKeyDown: callAllEventHandlers(onKeyDown, dropdownHandleKeyDown),\n          onClick: callAllEventHandlers(onClick, dropdownHandleClick),\n        }),\n        ...rest,\n      }\n    },\n    [dispatch, dropdownKeyDownHandlers, setGetterPropCallInfo],\n  )\n\n  // returns\n  const addSelectedItem = useCallback(\n    selectedItem => {\n      dispatch({\n        type: stateChangeTypes.FunctionAddSelectedItem,\n        selectedItem,\n      })\n    },\n    [dispatch],\n  )\n  const removeSelectedItem = useCallback(\n    selectedItem => {\n      dispatch({\n        type: stateChangeTypes.FunctionRemoveSelectedItem,\n        selectedItem,\n      })\n    },\n    [dispatch],\n  )\n  const setSelectedItems = useCallback(\n    newSelectedItems => {\n      dispatch({\n        type: stateChangeTypes.FunctionSetSelectedItems,\n        selectedItems: newSelectedItems,\n      })\n    },\n    [dispatch],\n  )\n  const setActiveIndex = useCallback(\n    newActiveIndex => {\n      dispatch({\n        type: stateChangeTypes.FunctionSetActiveIndex,\n        activeIndex: newActiveIndex,\n      })\n    },\n    [dispatch],\n  )\n  const reset = useCallback(() => {\n    dispatch({\n      type: stateChangeTypes.FunctionReset,\n    })\n  }, [dispatch])\n\n  return {\n    getSelectedItemProps,\n    getDropdownProps,\n    addSelectedItem,\n    removeSelectedItem,\n    setSelectedItems,\n    setActiveIndex,\n    reset,\n    selectedItems,\n    activeIndex,\n  }\n}\n\nexport default useMultipleSelection\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","key","Object","prototype","hasOwnProperty","call","indexOf","_extends","assign","bind","i","arguments","length","apply","this","_setPrototypeOf","o","p","setPrototypeOf","__proto__","propTypesModule","exports","ReactPropTypesSecret","ReactPropTypesSecret_1","emptyFunction","emptyFunctionWithReset","resetWarningCache","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$2","u","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","q","t","v","a","r","$$typeof","type","reactIs_production_min","ContextConsumer","Element","ForwardRef","Fragment","Lazy","Memo","Portal","StrictMode","Suspense","SuspenseList","isAsyncMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","require$$0","nodeType","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflowY","overflowX","ownerDocument","defaultView","frameElement","s","parentElement","getRootNode","host","idCounter","cbToCb","cb","noop","scrollIntoView","menuNode","actions","document","scrollMode","block","inline","boundary","skipOverflowHiddenElements","TypeError","scrollingElement","documentElement","w","W","push","body","window","visualViewport","width","innerWidth","H","height","innerHeight","scrollX","y","scrollY","M","E","top","x","right","C","bottom","I","left","R","getBoundingClientRect","T","B","F","V","parseFloat","scrollMarginTop","scrollMarginRight","scrollMarginBottom","scrollMarginLeft","D","L","parseInt","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","offsetWidth","offsetHeight","S","X","Math","max","scrollLeft","scrollTop","min","el","compute","forEach","_ref","isOrContainsNode","parent","child","environment","Node","contains","debounce","fn","time","timeoutId","cancel","clearTimeout","wrapper","_len","args","Array","_key","setTimeout","callAllEventHandlers","_len2","fns","_key2","event","_len3","_key3","some","concat","preventDownshiftDefault","nativeEvent","handleRefs","_len4","refs","_key4","ref","current","generateId","String","getA11yStatusMessage","_ref2","isOpen","resultCount","previousResultCount","unwrapArray","arg","defaultValue","isArray","stateKeys","pickState","state","result","getState","keys","reduce","prevState","isControlledProp","undefined","normalizeArrowKey","keyCode","getHighlightedIndex","start","offset","items","isItemDisabled","circular","count","itemsLastIndex","highlightedIndex","getNonDisabledIndex","backwards","index","targetWithinDownshift","downshiftElements","checkActiveElement","contextNode","activeElement","cleanupStatus","documentProp","getStatusDiv","textContent","statusDiv","getElementById","createElement","setAttribute","style","border","clip","margin","overflow","padding","position","appendChild","setStatus","status","Downshift$1","Downshift","_Component","_this","id","menuId","labelId","inputId","getItemId","itemCount","timeoutIds","internalSetTimeout","filter","setItemCount","unsetItemCount","_item","currentElementNode","getItemNodeFromIndex","hasAttribute","setHighlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","clearSelection","selectedItem","inputValue","defaultIsOpen","selectItem","item","itemToString","selectItemAtIndex","itemIndex","selectHighlightedItem","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","_newStateToSet","newStateToSet","stateReducer","nextState","onStateChange","onSelect","onChange","onUserAction","rootRef","_rootNode","getRootProps","_temp","_temp2","_extends2","_ref$refKey","refKey","rest","_excluded","_ref2$suppressRefErro","suppressRefError","called","role","keyDownHandlers","ArrowDown","_this2","preventDefault","amount","shiftKey","moveHighlightedIndex","getItemCount","nextHighlightedIndex","ArrowUp","_this3","Enter","which","_this$getState2","itemNode","Escape","reset","buttonKeyDownHandlers","toggleMenu","inputKeyDownHandlers","Home","newHighlightedIndex","End","getToggleButtonProps","_temp3","_ref3","onClick","onPress","onKeyDown","onKeyUp","onBlur","_excluded2","enabledEventHandlers","buttonHandleClick","buttonHandleKeyDown","buttonHandleKeyUp","buttonHandleBlur","disabled","_this$props$environme","focus","blurTarget","isMouseDown","getLabelProps","htmlFor","getInputProps","_temp4","_ref4","onInput","onChangeText","_excluded3","eventHandlers","_eventHandlers","_this$getState6","inputHandleChange","inputHandleKeyDown","inputHandleBlur","autoComplete","value","_activeElement$datase","dataset","toggle","menuRef","_menuNode","getMenuProps","_temp5","_temp6","_extends3","_ref5","_ref5$refKey","_excluded4","_ref6$suppressRefErro","getItemProps","_temp7","_enabledEventHandlers","_ref7","onMouseMove","onMouseDown","_ref7$item","_excluded5","customClickHandler","avoidScrolling","clearItems","_ref8","_ref9","_this$getState7","openMenu","closeMenu","updateStatus","_this$props","highlightedItem","_this$props2","_this$props2$initialH","initialHighlightedIndex","_this$props2$initialI","initialIsOpen","_this$props2$initialI2","initialInputValue","_this$props2$initialS","initialSelectedItem","subClass","superClass","create","constructor","_proto","internalClearTimeouts","stateToMerge","scrollHighlightedItemIntoView","_this$getState9","componentDidMount","_this4","onMouseUp","onOuterClick","onTouchStart","isTouchMove","onTouchMove","onTouchEnd","contextWithinDownshift","addEventListener","cleanup","removeEventListener","shouldScroll","prevProps","currentHighlightedIndex","prevHighlightedIndex","componentDidUpdate","selectedItemChanged","componentWillUnmount","render","children","isDOMElement","cloneElement","getElementProps","Component","defaultProps","prevItem","stateChangeTypes","dropdownDefaultStateValues","callOnChangeProps","action","newState","changes","handler","capitalizeString","invokeOnChangeHandler","updateA11yStatus","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useElementIds","React","toggleButtonId","reactId","useId","useRef","_ref2$id","getItemAndIndex","itemProp","indexProp","errorMessage","slice","toUpperCase","useLatestRef","val","useEnhancedReducer","reducer","createInitialState","isStateEqual","prevStateRef","actionRef","enhancedReducer","useCallback","_useReducer","useReducer","dispatch","propsRef","dispatchWithProps","useControlledReducer","_useEnhancedReducer","itemToKey","getDefaultValue","propKey","defaultStateValues","getInitialValue","initialValue","getInitialState","getInitialHighlightedIndex","findIndex","getHighlightedIndexOnOpen","useMouseAndTouchTracker","downshiftElementRefs","handleBlur","mouseAndTouchTrackersRef","isTouchEnd","map","useGetterPropsCalledChecker","useA11yMessageStatus","options","dependencyArray","isInitialMount","useIsInitialMount","remove","useScrollIntoView","itemRefs","menuElement","scrollIntoViewProp","shouldScrollRef","getChangesOnSelection","_props$items","isDropdownsStateEqual","isInitialMountRef","getDefaultHighlightedIndex","commonPropTypes","commonDropdownPropTypes","defaultSelectedItem","onSelectedItemChange","onHighlightedIndexChange","onIsOpenChange","downshiftCommonReducer","ItemMouseMove","MenuMouseLeave","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSetHighlightedIndex","FunctionSetInputValue","FunctionReset","__assign","SuppressedError","commonDefaultProps","ToggleButtonKeyDownArrowDown","ToggleButtonKeyDownArrowUp","ToggleButtonKeyDownCharacter","ToggleButtonKeyDownEscape","ToggleButtonKeyDownHome","ToggleButtonKeyDownEnd","ToggleButtonKeyDownEnter","ToggleButtonKeyDownSpaceButton","ToggleButtonKeyDownPageUp","ToggleButtonKeyDownPageDown","ToggleButtonBlur","ItemClick","FunctionSelectItem","downshiftSelectReducer","altKey","lowercasedKey","_a","keysSoFar","lowerCasedKeysSoFar","toLowerCase","offsetIndex","startsWith","getItemIndexByCharacterKey","commonReducer","useSelect","userProps","_useControlledReducer","toggleButtonRef","clearTimeoutRef","elementIds","latest","outerDispatch","mouseAndTouchTrackers","setGetterPropCallInfo","toggleButtonKeyDownHandlers","useMemo","PageUp","PageDown","currentState","newSelectedItem","setInputValue","newInputValue","labelProps","_toggleButtonRef$curr","onMouseLeave","_ref2$refKey","_ref4$refKey","latestState","toggleProps","toggleButtonNode","tabIndex","test","isAcceptedCharacterKey","_extends4","_ref6","_ref6$refKey","disabledProp","console","warn","_latest$current","latestProps","_getItemAndIndex","itemProps","InputKeyDownArrowDown","InputKeyDownArrowUp","InputKeyDownEscape","InputKeyDownHome","InputKeyDownEnd","InputKeyDownPageUp","InputKeyDownPageDown","InputKeyDownEnter","InputChange","InputBlur","InputClick","ControlledPropUpdatedSelectedItem","initialState","getInitialStateCommon","defaultInputValue","defaultPropsCommon","downshiftUseComboboxReducer","useCombobox","previousSelectedItemRef","inputRef","previousResultCountRef","_inputRef$current","_ref3$refKey","_extends5","isBlurByTabChange","relatedTarget","inputNode","activeIndex","selectedItems","getInitialValueCommon","getDefaultValueCommon","isKeyDownOperationPermitted","metaKey","ctrlKey","HTMLInputElement","selectionStart","selectionEnd","keyNavigationNext","keyNavigationPrevious","SelectedItemClick","SelectedItemKeyDownDelete","SelectedItemKeyDownBackspace","SelectedItemKeyDownNavigationNext","SelectedItemKeyDownNavigationPrevious","DropdownKeyDownNavigationPrevious","DropdownKeyDownBackspace","DropdownClick","FunctionAddSelectedItem","FunctionRemoveSelectedItem","FunctionSetSelectedItems","FunctionSetActiveIndex","downshiftMultipleSelectionReducer","newActiveIndex","selectedItemIndex","useMultipleSelection","dropdownRef","selectedItemRefs","selectedItemKeyDownHandlers","Delete","Backspace","dropdownKeyDownHandlers","getSelectedItemProps","selectedItemProp","isFocusable","selectedItemNode","getDropdownProps","_ref4$preventKeyActio","preventKeyAction","dropdownNode","addSelectedItem","removeSelectedItem","setSelectedItems","newSelectedItems","setActiveIndex"],"mappings":"oRAAe,SAASA,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAAIE,EAAS,CAAA,EACb,IAAK,IAAIC,KAAOH,EACd,GAAII,OAAOC,UAAUC,eAAeC,KAAKP,EAAQG,GAAM,CACrD,GAAIF,EAASO,QAAQL,IAAQ,EAAG,SAChCD,EAAOC,GAAOH,EAAOG,EACtB,CAEH,OAAOD,CACT,CCVe,SAASO,IAYtB,OAXAA,EAAWL,OAAOM,OAASN,OAAOM,OAAOC,OAAS,SAAUT,GAC1D,IAAK,IAAIU,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIZ,EAASa,UAAUD,GACvB,IAAK,IAAIT,KAAOH,EACVI,OAAOC,UAAUC,eAAeC,KAAKP,EAAQG,KAC/CD,EAAOC,GAAOH,EAAOG,GAG1B,CACD,OAAOD,CACX,EACSO,EAASM,MAAMC,KAAMH,UAC9B,CCbe,SAASI,EAAgBC,EAAGC,GAKzC,OAJAF,EAAkBb,OAAOgB,eAAiBhB,OAAOgB,eAAeT,OAAS,SAAyBO,EAAGC,GAEnG,OADAD,EAAEG,UAAYF,EACPD,CACX,EACSD,EAAgBC,EAAGC,EAC5B,gICWEG,EAAcC,qCCRhB,IAAIC,WCEJC,EAF2B,gDDE3B,SAASC,IAAkB,CAC3B,SAASC,IAA2B,QACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAiB,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQL,CAEE,SAASG,IACP,OAAOV,CAEX,CAJEA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAeqB,UAAYrB,EAEpBA,GD9CUsB,6DGRN,IAA4bC,EAAxbC,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,gBAAgBE,EAAEH,OAAOC,IAAI,kBAAkBG,EAAEJ,OAAOC,IAAI,qBAAqBI,EAAEL,OAAOC,IAAI,kBAAkBK,EAAEN,OAAOC,IAAI,kBAAkBM,EAAEP,OAAOC,IAAI,iBAAiBO,EAAER,OAAOC,IAAI,wBAAwBQ,EAAET,OAAOC,IAAI,qBAAqBS,EAAEV,OAAOC,IAAI,kBAAkBU,EAAEX,OAAOC,IAAI,uBAAuBjD,EAAEgD,OAAOC,IAAI,cAAcW,EAAEZ,OAAOC,IAAI,cAAcY,EAAEb,OAAOC,IAAI,mBACtb,SAASa,EAAEC,GAAG,GAAG,iBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKjB,EAAE,OAAOgB,EAAEA,EAAEG,MAAQ,KAAKf,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKM,EAAE,KAAKC,EAAE,OAAOI,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAKT,EAAE,KAAKD,EAAE,KAAKE,EAAE,KAAKG,EAAE,KAAK5D,EAAE,KAAKsD,EAAE,OAAOS,EAAE,QAAQ,OAAOC,GAAG,KAAKd,EAAE,OAAOc,EAAE,CAAC,CADkMlB,EAAEE,OAAOC,IAAI,0BAC9MkB,EAAuBC,gBAACb,EAAEY,kBAAwBb,EAAEa,EAAAE,QAAgBtB,EAAEoB,EAAAG,WAAmBb,EAAEU,EAAgBI,SAACpB,EAAEgB,EAAAK,KAAaZ,EAAEO,EAAYM,KAACzE,EAAEmE,EAAcO,OAACxB,EAAEiB,WAAiBd,EAAEc,EAAAQ,WAAmBvB,EAAEe,EAAgBS,SAAClB,EACheS,EAAAU,aAAqBlB,EAAEQ,EAAAW,YAAoB,WAAW,OAAM,CAAE,EAAEX,mBAAyB,WAAW,OAAM,CAAE,EAAEA,EAAyBY,kBAAC,SAAShB,GAAG,OAAOD,EAAEC,KAAKR,CAAC,EAAEY,EAAyBa,kBAAC,SAASjB,GAAG,OAAOD,EAAEC,KAAKT,CAAC,EAAEa,EAAiBc,UAAC,SAASlB,GAAG,MAAM,iBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWlB,CAAC,EAAEoB,EAAoBe,aAAC,SAASnB,GAAG,OAAOD,EAAEC,KAAKN,CAAC,EAAEU,EAAkBgB,WAAC,SAASpB,GAAG,OAAOD,EAAEC,KAAKZ,CAAC,EAAEgB,EAAciB,OAAC,SAASrB,GAAG,OAAOD,EAAEC,KAAKH,CAAC,EAAEO,EAAckB,OAAC,SAAStB,GAAG,OAAOD,EAAEC,KAAK/D,CAAC,EACvemE,EAAAmB,SAAiB,SAASvB,GAAG,OAAOD,EAAEC,KAAKb,CAAC,EAAEiB,aAAmB,SAASJ,GAAG,OAAOD,EAAEC,KAAKV,CAAC,EAAEc,EAAoBoB,aAAC,SAASxB,GAAG,OAAOD,EAAEC,KAAKX,CAAC,EAAEe,EAAAqB,WAAmB,SAASzB,GAAG,OAAOD,EAAEC,KAAKL,CAAC,EAAES,EAAAsB,eAAuB,SAAS1B,GAAG,OAAOD,EAAEC,KAAKJ,CAAC,EACxNQ,EAAAuB,mBAAC,SAAS3B,GAAG,MAAM,iBAAkBA,GAAG,mBAAoBA,GAAGA,IAAIZ,GAAGY,IAAIV,GAAGU,IAAIX,GAAGW,IAAIL,GAAGK,IAAIJ,GAAGI,IAAIF,GAAG,iBAAkBE,GAAG,OAAOA,IAAIA,EAAEE,WAAWL,GAAGG,EAAEE,WAAWjE,GAAG+D,EAAEE,WAAWX,GAAGS,EAAEE,WAAWV,GAAGQ,EAAEE,WAAWR,GAAGM,EAAEE,WAAWnB,QAAG,IAASiB,EAAE4B,YAAkB,EAAExB,EAAcyB,OAAC9B,ECV9R+B,GCHnB,MAAMhC,EAAEA,GAAG,iBAAiBA,GAAG,MAAMA,GAAG,IAAIA,EAAEiC,SAAS1C,EAAE,CAACS,EAAET,MAAMA,GAAG,WAAWS,IAAK,YAAYA,GAAG,SAASA,EAAGF,EAAE,CAACE,EAAEF,KAAK,GAAGE,EAAEkC,aAAalC,EAAEmC,cAAcnC,EAAEoC,YAAYpC,EAAEqC,YAAY,CAAC,MAAMnG,EAAEoG,iBAAiBtC,EAAE,MAAM,OAAOT,EAAErD,EAAEqG,UAAUzC,IAAIP,EAAErD,EAAEsG,UAAU1C,IAAI,CAACE,IAAI,MAAMT,EAAE,CAACS,IAAI,IAAIA,EAAEyC,gBAAgBzC,EAAEyC,cAAcC,YAAY,OAAO,KAAK,IAAI,OAAO1C,EAAEyC,cAAcC,YAAYC,YAAY,CAAC,MAAM3C,GAAG,OAAO,IAAI,CAAE,EAA7I,CAA+IA,GAAG,QAAQT,IAAIA,EAAE2C,aAAalC,EAAEmC,cAAc5C,EAAE6C,YAAYpC,EAAEqC,YAAa,EAAvO,CAAyOrC,EAAE,CAAC,OAAM,CAAC,EAAG9D,EAAE,CAAC8D,EAAET,EAAEO,EAAE5D,EAAE0D,EAAEO,EAAEvE,EAAEgH,IAAIzC,EAAEH,GAAGpE,EAAE2D,GAAGY,EAAEH,GAAGpE,EAAE2D,EAAE,EAAEY,GAAGH,GAAG4C,GAAG9C,GAAGlE,GAAG2D,GAAGqD,GAAG9C,EAAEK,EAAEH,EAAE9D,EAAEN,EAAE2D,GAAGqD,EAAE9C,GAAGK,EAAEH,GAAG4C,EAAE9C,EAAElE,EAAE2D,EAAEK,EAAE,EAAEA,EAAEI,IAAI,MAAMT,EAAES,EAAE6C,cAAc,OAAO,MAAMtD,EAAES,EAAE8C,cAAcC,MAAM,KAAKxD,GCIrqB,IAAIyD,EAAY,EAUhB,SAASC,EAAOC,GACd,MAAqB,mBAAPA,EAAoBA,EAAKC,CACzC,CAEA,SAASA,IAAQ,CAOjB,SAASC,EAAe5E,EAAM6E,GAC5B,GAAK7E,EAAL,CAIA,IAAM8E,ED9BkqB,EAAC/D,EAAEY,KAAK,IAAIvE,EAAEgH,EAAEtD,EAAEI,EAAE,GAAG,oBAAoB6D,SAAS,MAAM,GAAG,MAAMC,WAAWnE,EAAEoE,MAAMjE,EAAEkE,OAAOzE,EAAE0E,SAASzD,EAAE0D,2BAA2BnE,GAAGU,EAAEhE,EAAE,mBAAmB+D,EAAEA,EAAEF,GAAGA,IAAIE,EAAE,IAAIF,EAAET,GAAG,MAAM,IAAIsE,UAAU,kBAAkB,MAAMhE,EAAE0D,SAASO,kBAAkBP,SAASQ,gBAAgBC,EAAE,GAAG,IAAIC,EAAE1E,EAAE,KAAKS,EAAEiE,IAAI9H,EAAE8H,IAAI,CAAC,GAAGA,EAAErE,EAAEqE,GAAGA,IAAIpE,EAAE,CAACmE,EAAEE,KAAKD,GAAG,KAAK,CAAC,MAAMA,GAAGA,IAAIV,SAASY,MAAMrE,EAAEmE,KAAKnE,EAAEyD,SAASQ,kBAAkB,MAAME,GAAGnE,EAAEmE,EAAExE,IAAIuE,EAAEE,KAAKD,EAAE,CAAC,MAAM/E,EAAE,OAAO0D,EAAE,OAAOhH,EAAEwI,OAAOC,qBAAgB,EAAOzI,EAAE0I,OAAO1B,EAAE2B,WAAWC,EAAE,OAAO9E,EAAE,OAAOJ,EAAE8E,OAAOC,qBAAgB,EAAO/E,EAAEmF,QAAQ/E,EAAEgF,aAAaC,QAAQC,EAAEC,QAAQC,GAAGV,QAAQK,OAAOxE,EAAEqE,MAAMS,EAAEC,IAAIC,EAAEC,MAAMC,EAAEC,OAAOC,EAAEC,KAAKC,GAAGhG,EAAEiG,yBAAyBR,IAAIS,EAAEP,MAAMQ,EAAEN,OAAOO,EAAEL,KAAKM,GAAG,CAAC5F,IAAI,MAAMT,EAAE6E,OAAO9B,iBAAiBtC,GAAG,MAAM,CAACgF,IAAIa,WAAWtG,EAAEuG,kBAAkB,EAAEZ,MAAMW,WAAWtG,EAAEwG,oBAAoB,EAAEX,OAAOS,WAAWtG,EAAEyG,qBAAqB,EAAEV,KAAKO,WAAWtG,EAAE0G,mBAAmB,EAAG,EAAhN,CAAkN1G,GAAG,IAAII,EAAE,UAAUH,GAAG,YAAYA,EAAEyF,EAAEQ,EAAE,QAAQjG,EAAE6F,EAAEM,EAAEV,EAAEhF,EAAE,EAAEwF,EAAEE,EAAEO,EAAE,WAAWjH,EAAEsG,EAAER,EAAE,EAAEa,EAAEF,EAAE,QAAQzG,EAAEkG,EAAEO,EAAEH,EAAEK,EAAE,MAAMO,EAAE,GAAG,IAAI,IAAInG,EAAE,EAAEA,EAAEgE,EAAElI,OAAOkE,IAAI,CAAC,MAAMT,EAAEyE,EAAEhE,IAAIyE,OAAO3E,EAAEwE,MAAM1E,EAAEoF,IAAI7E,EAAE+E,MAAMtJ,EAAEwJ,OAAOxC,EAAE0C,KAAKhG,GAAGC,EAAEiG,wBAAwB,GAAG,cAAcnG,GAAG4F,GAAG,GAAGM,GAAG,GAAGF,GAAGb,GAAGW,GAAGjG,GAAG+F,GAAG9E,GAAGkF,GAAGzC,GAAG2C,GAAGjG,GAAG6F,GAAGvJ,EAAE,OAAOuK,EAAE,MAAMzG,EAAE4C,iBAAiB/C,GAAGW,EAAEkG,SAAS1G,EAAE2G,gBAAgB,IAAI5G,EAAE2G,SAAS1G,EAAE4G,eAAe,IAAInK,EAAEiK,SAAS1G,EAAE6G,iBAAiB,IAAItC,EAAEmC,SAAS1G,EAAE8G,kBAAkB,IAAI,IAAIf,EAAE,EAAEC,EAAE,EAAE,MAAMC,EAAE,gBAAgBpG,EAAEA,EAAEkH,YAAYlH,EAAE6C,YAAYlC,EAAE/D,EAAE,EAAEyJ,EAAE,iBAAiBrG,EAAEA,EAAEmH,aAAanH,EAAE2C,aAAazC,EAAEwE,EAAE,EAAE0C,EAAE,gBAAgBpH,EAAE,IAAIA,EAAEkH,YAAY,EAAE7G,EAAEL,EAAEkH,YAAY,EAAEG,EAAE,iBAAiBrH,EAAE,IAAIA,EAAEmH,aAAa,EAAE5G,EAAEP,EAAEmH,aAAa,EAAE,GAAG7G,IAAIN,EAAEkG,EAAE,UAAUjG,EAAEG,EAAE,QAAQH,EAAEG,EAAE6E,EAAE,YAAYhF,EAAEtD,EAAE4I,EAAEA,EAAEN,EAAEA,EAAE/E,EAAEwE,EAAEa,EAAEnF,EAAEmF,EAAEnF,EAAEM,EAAEA,GAAGN,EAAE6E,EAAE,EAAEkB,EAAE,UAAUzG,EAAEiH,EAAE,WAAWjH,EAAEiH,EAAEhH,EAAE,EAAE,QAAQD,EAAEiH,EAAEhH,EAAEhD,EAAE0I,EAAEA,EAAE1F,EAAEA,EAAEgB,EAAE/D,EAAEyI,EAAEsB,EAAEtB,EAAEsB,EAAEnB,EAAEA,GAAGU,EAAEoB,KAAKC,IAAI,EAAErB,EAAEX,GAAGY,EAAEmB,KAAKC,IAAI,EAAEpB,EAAEd,OAAO,CAACa,EAAE,UAAUjG,EAAEG,EAAEQ,EAAEV,EAAE,QAAQD,EAAEG,EAAEiD,EAAEqB,EAAE2B,EAAE,YAAYpG,EAAEtD,EAAEiE,EAAEyC,EAAE9C,EAAEL,EAAEwE,EAAE2B,EAAEjG,EAAEA,EAAEM,EAAEA,GAAGN,GAAGQ,EAAEL,EAAE,GAAG8F,EAAE,EAAEF,EAAE,UAAUzG,EAAEiH,EAAE5G,EAAEY,EAAE,WAAWjB,EAAEiH,GAAG5G,EAAEM,EAAE,GAAG+F,EAAE,EAAE,QAAQ1G,EAAEiH,EAAEtK,EAAEO,EAAEwJ,EAAEzJ,EAAEoD,EAAE1D,EAAEgE,EAAEM,EAAE/D,EAAEwJ,EAAEO,EAAEA,EAAEnB,EAAEA,GAAG,MAAMgC,WAAW/G,EAAEgH,UAAUtH,GAAGH,EAAEkG,EAAE,IAAImB,EAAE,EAAEC,KAAKC,IAAI,EAAED,KAAKI,IAAIvH,EAAE+F,EAAEmB,EAAErH,EAAE4C,aAAarC,EAAE8G,EAAEhB,IAAIF,EAAE,IAAIiB,EAAE,EAAEE,KAAKC,IAAI,EAAED,KAAKI,IAAIjH,EAAE0F,EAAEiB,EAAEpH,EAAE8C,YAAYzC,EAAE+G,EAAEhB,IAAIhG,GAAGD,EAAE+F,EAAES,GAAGlG,EAAE0F,CAAC,CAACS,EAAEjC,KAAK,CAACgD,GAAG3H,EAAEyF,IAAIS,EAAEH,KAAKI,GAAG,CAAC,OAAOS,GC8Bl1FgB,CAAQ3I,EAAM,CAC5BmF,SAAUN,EACVI,MAAO,UACPD,WAAY,cAEdF,EAAQ8D,SAAQ,SAAAC,GAAqB,IAAnBH,EAAEG,EAAFH,GAAIlC,EAAGqC,EAAHrC,IAAKM,EAAI+B,EAAJ/B,KACzB4B,EAAGF,UAAYhC,EACfkC,EAAGH,WAAazB,CAClB,GAVA,CAWF,CAQA,SAASgC,EAAiBC,EAAQC,EAAOC,GAMvC,OAJEF,IAAWC,GACVA,aAAiBC,EAAYC,MAC5BH,EAAOI,UACPJ,EAAOI,SAASH,EAEtB,CAUA,SAASI,EAASC,EAAIC,GACpB,IAAIC,EAEJ,SAASC,IACHD,GACFE,aAAaF,EAEjB,CAEA,SAASG,IAAiB,IAAA,IAAAC,EAAAtM,UAAAC,OAANsM,EAAIC,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAzM,UAAAyM,GACtBN,IACAD,EAAYQ,YAAW,WACrBR,EAAY,KACZF,EAAE9L,WAAIqM,EAAAA,EACP,GAAEN,EACL,CAIA,OAFAI,EAAQF,OAASA,EAEVE,CACT,CASA,SAASM,IAA6B,IAAA,IAAAC,EAAA5M,UAAAC,OAAL4M,EAAGL,IAAAA,MAAAI,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAHD,EAAGC,GAAA9M,UAAA8M,GAClC,OAAO,SAACC,GAAK,IAAAC,IAAAA,EAAAhN,UAAAC,OAAKsM,MAAIC,MAAAQ,EAAAA,EAAAA,OAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJV,EAAIU,EAAAjN,GAAAA,UAAAiN,GAAA,OACpBJ,EAAIK,MAAK,SAAAlB,GAIP,OAHIA,GACFA,EAAE9L,WAAC6M,EAAAA,CAAAA,GAAKI,OAAKZ,IAGbQ,EAAMK,yBACLL,EAAMtN,eAAe,gBACpBsN,EAAMM,YAAYD,uBAExB,GAAE,CACN,CAEA,SAASE,IAAoB,IAAA,IAAAC,EAAAvN,UAAAC,OAANuN,EAAIhB,IAAAA,MAAAe,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAzN,UAAAyN,GACzB,OAAO,SAAA9K,GACL6K,EAAKjC,SAAQ,SAAAmC,GACQ,mBAARA,EACTA,EAAI/K,GACK+K,IACTA,EAAIC,QAAUhL,EAElB,IAEJ,CAMA,SAASiL,IACP,OAAOC,OAAO1G,IAChB,CAkCA,SAAS2G,EAAoBC,GAA6C,IAA3CC,EAAMD,EAANC,OAAQC,EAAWF,EAAXE,YAAaC,EAAmBH,EAAnBG,oBAClD,OAAKF,EAIAC,EAIDA,IAAgBC,EACRD,aACQ,IAAhBA,EAAoB,MAAQ,SAAO,iFAIhC,GATE,4BAJA,EAcX,CASA,SAASE,EAAYC,EAAKC,GAExB,QADAD,EAAM5B,MAAM8B,QAAQF,GAA2CA,EAAI,GAAKA,IAC5DC,EACHA,EAEAD,CAEX,CA6CA,IAAMG,EAAY,CAChB,mBACA,aACA,SACA,eACA,QAMF,SAASC,EAAUC,QAAK,IAALA,IAAAA,EAAQ,CAAA,GACzB,IAAMC,EAAS,CAAA,EAMf,OALAH,EAAUhD,SAAQ,SAAAzH,GACZ2K,EAAMhP,eAAeqE,KACvB4K,EAAO5K,GAAK2K,EAAM3K,GAEtB,IACO4K,CACT,CAaA,SAASC,EAASF,EAAOvN,GACvB,OAAKuN,GAAUvN,EAIR3B,OAAOqP,KAAKH,GAAOI,QAAO,SAACC,EAAWxP,GAG3C,OAFAwP,EAAUxP,GAAOyP,EAAiB7N,EAAO5B,GAAO4B,EAAM5B,GAAOmP,EAAMnP,GAE5DwP,CACR,GAAE,CAAE,GAPIL,CAQX,CAWA,SAASM,EAAiB7N,EAAO5B,GAC/B,YAAsB0P,IAAf9N,EAAM5B,EACf,CAOA,SAAS2P,EAAkBlC,GACzB,IAAOzN,EAAgByN,EAAhBzN,IAAK4P,EAAWnC,EAAXmC,QAEZ,OAAIA,GAAW,IAAMA,GAAW,IAA+B,IAAzB5P,EAAIK,QAAQ,SAChD,QAAeL,EAEVA,CACT,CAqBA,SAAS6P,EACPC,EACAC,EACAC,EACAC,EACAC,QAAQ,IAARA,IAAAA,GAAW,GAEX,IAAMC,EAAQH,EAAMrP,OACpB,GAAc,IAAVwP,EACF,OAAQ,EAGV,IAAMC,EAAiBD,EAAQ,GAEV,iBAAVL,GAAsBA,EAAQ,GAAKA,EAAQM,KACpDN,EAAQC,EAAS,GAAK,EAAIK,EAAiB,GAG7C,IAAI/B,EAAUyB,EAAQC,EAElB1B,EAAU,EACZA,EAAU6B,EAAWE,EAAiB,EAC7B/B,EAAU+B,IACnB/B,EAAU6B,EAAW,EAAIE,GAG3B,IAAMC,EAAmBC,EACvBjC,EACA0B,EAAS,EACTC,EACAC,EACAC,GAGF,OAA0B,IAAtBG,EACKP,GAASK,GAAS,EAAIL,EAGxBO,CACT,CAYA,SAASC,EACPR,EACAS,EACAP,EACAC,EACAC,QAAQ,IAARA,IAAAA,GAAW,GAEX,IAAMC,EAAQH,EAAMrP,OAEpB,GAAI4P,GACF,IAAK,IAAIC,EAAQV,EAAOU,GAAS,EAAGA,IAClC,IAAKP,EAAeD,EAAMQ,GAAQA,GAChC,OAAOA,OAIX,IAAK,IAAIA,EAAQV,EAAOU,EAAQL,EAAOK,IACrC,IAAKP,EAAeD,EAAMQ,GAAQA,GAChC,OAAOA,EAKb,OAAIN,EACKI,EACLC,EAAYJ,EAAQ,EAAI,EACxBI,EACAP,EACAC,IAII,CACV,CAYA,SAASQ,EACP1Q,EACA2Q,EACApE,EACAqE,GAEA,YAFkB,IAAlBA,IAAAA,GAAqB,GAGnBrE,GACAoE,EAAkB9C,MAChB,SAAAgD,GAAW,OACTA,IACCzE,EAAiByE,EAAa7Q,EAAQuM,IACpCqE,GACCxE,EACEyE,EACAtE,EAAYlE,SAASyI,cACrBvE,GACC,GAGf,CCxbA,IAAMwE,EAAgBrE,GAAS,SAAAsE,GAC7BC,EAAaD,GAAcE,YAAc,EAC3C,GAAG,KAOH,SAASD,EAAaD,GACpB,IAAIG,EAAYH,EAAaI,eAAe,uBAC5C,OAAID,KAIJA,EAAYH,EAAaK,cAAc,QAC7BC,aAAa,KAAM,uBAC7BH,EAAUG,aAAa,OAAQ,UAC/BH,EAAUG,aAAa,YAAa,UACpCH,EAAUG,aAAa,gBAAiB,kBACxCpR,OAAOM,OAAO2Q,EAAUI,MAAO,CAC7BC,OAAQ,IACRC,KAAM,gBACNlI,OAAQ,MACRmI,OAAQ,OACRC,SAAU,SACVC,QAAS,IACTC,SAAU,WACVzI,MAAO,QAET4H,EAAa/H,KAAK6I,YAAYX,GACvBA,EACT,CAMO,SAASY,EAAUC,EAAQhB,GAC3BgB,GAAWhB,IAIJC,EAAaD,GAErBE,YAAcc,EAClBjB,EAAcC,GAChB,CC/CO,+CAoBiE,aANF,eACI,eAIA,aANJ,oCAUrE,kBArB+E,mBAM/E,iBAHA,aAOuE,eAFI,gBADE,cAEJ,qBAOzE,WAjBgE,WAuBE,WAxBF,iOC6uCjEiB,EA/sCe,WAAA,IAATC,WAASC,GAuFb,SAAAD,EAAYrQ,GAAO,IAAAuQ,EACjBD,EAAA9R,KAAAS,KAAMe,IAAMf,KAGZsR,EAwBFC,GAAKD,EAAKvQ,MAAMwQ,IAAE,aAAiB9D,IAAc6D,EACjDE,OAASF,EAAKvQ,MAAMyQ,QAAaF,EAAKC,GAAS,QAAAD,EAC/CG,QAAUH,EAAKvQ,MAAM0Q,SAAcH,EAAKC,GAAU,SAAAD,EAClDI,QAAUJ,EAAKvQ,MAAM2Q,SAAcJ,EAAKC,GAAU,SAAAD,EAClDK,UAAYL,EAAKvQ,MAAM4Q,WAAc,SAAAhC,GAAK,OAAO2B,EAAKC,GAAE,SAAS5B,GAAQ2B,EAEzEnC,MAAQ,GAKRmC,EACAM,UAAY,KAAIN,EAChBvD,oBAAsB,EAACuD,EAEvBO,WAAa,GAEbP,EAIAQ,mBAAqB,SAACjG,EAAIC,GACxB,IAAMyF,EAAKhF,YAAW,WACpB+E,EAAKO,WAAaP,EAAKO,WAAWE,QAAO,SAAAnS,GAAC,OAAIA,IAAM2R,KACpD1F,GACD,GAAEC,GAEHwF,EAAKO,WAAW3J,KAAKqJ,IACtBD,EAwCDU,aAAe,SAAA1C,GACbgC,EAAKM,UAAYtC,GAClBgC,EAEDW,eAAiB,WACfX,EAAKM,UAAY,MAClBN,EAQDlC,eAAiB,SAAC8C,EAAOvC,GACvB,IAAMwC,EAAqBb,EAAKc,qBAAqBzC,GAErD,OAAOwC,GAAsBA,EAAmBE,aAAa,aAC9Df,EAEDgB,oBAAsB,SACpB9C,EACA+C,QADgB,IAAhB/C,IAAAA,EAAmB8B,EAAKvQ,MAAMyR,8BACf,IAAfD,IAAAA,EAAkB,CAAA,GAElBA,EAAkBlE,EAAUkE,GAC5BjB,EAAKmB,iBAAgBhT,EAAA,CAAE+P,iBAAAA,GAAqB+C,KAC7CjB,EAyBDoB,eAAiB,SAAAxL,GACfoK,EAAKmB,iBACH,CACEE,aAAc,KACdC,WAAY,GACZpD,iBAAkB8B,EAAKvQ,MAAMyR,wBAC7B3E,OAAQyD,EAAKvQ,MAAM8R,eAErB3L,IAEHoK,EAEDwB,WAAa,SAACC,EAAMR,EAAiBrL,GACnCqL,EAAkBlE,EAAUkE,GAC5BjB,EAAKmB,iBAAgBhT,EAAA,CAEjBoO,OAAQyD,EAAKvQ,MAAM8R,cACnBrD,iBAAkB8B,EAAKvQ,MAAMyR,wBAC7BG,aAAcI,EACdH,WAAYtB,EAAKvQ,MAAMiS,aAAaD,IACjCR,GAELrL,IAEHoK,EAED2B,kBAAoB,SAACC,EAAWX,EAAiBrL,GAC/C,IAAM6L,EAAOzB,EAAKnC,MAAM+D,GACZ,MAARH,GAGJzB,EAAKwB,WAAWC,EAAMR,EAAiBrL,IACxCoK,EAED6B,sBAAwB,SAACZ,EAAiBrL,GACxC,OAAOoK,EAAK2B,kBACV3B,EAAK9C,WAAWgB,iBAChB+C,EACArL,IAWJoK,EACAmB,iBAAmB,SAACW,EAAYlM,GAC9B,IAAImM,EAAgBC,EAEdC,EAAmB,CAAA,EACnBC,EAA6C,mBAAfJ,EAapC,OANKI,GAAwBJ,EAAW9T,eAAe,eACrDgS,EAAKvQ,MAAM0S,mBAAmBL,EAAWR,WAAUnT,EAC9C6R,CAAAA,EAAAA,EAAKoC,qBACLN,IAGA9B,EAAKqC,UACV,SAAArF,GAAS,IAAAsF,EACPtF,EAAQgD,EAAK9C,SAASF,GACtB,IAAIuF,EAAgBL,EAChBJ,EAAW9E,GACX8E,EAGJS,EAAgBvC,EAAKvQ,MAAM+S,aAAaxF,EAAOuF,GAK/CR,EAAiBQ,EAAcvU,eAAe,gBAE9C,IAAMyU,EAAY,CAAA,EAgDlB,OAzCEV,GACAQ,EAAclB,eAAiBrE,EAAMqE,eAErCW,EAAcO,EAAclB,eAE9BiB,EAAAC,GAAcxP,OAAduP,EAAcvP,KDtW2C,GCwWzDjF,OAAOqP,KAAKoF,GAAezI,SAAQ,SAAAjM,GAG7BmP,EAAMnP,KAAS0U,EAAc1U,KAC/BoU,EAAiBpU,GAAO0U,EAAc1U,IAQ5B,SAARA,IAGiB0U,EAAc1U,GAE9ByP,EAAiB0C,EAAKvQ,MAAO5B,KAChC4U,EAAU5U,GAAO0U,EAAc1U,IAEnC,IAKEqU,GACAK,EAAcvU,eAAe,eAE7BgS,EAAKvQ,MAAM0S,mBAAmBI,EAAcjB,WAAUnT,EACjD6R,CAAAA,EAAAA,EAAKoC,qBACLG,IAIAE,CACT,IACA,WAEE9M,EAAOC,EAAPD,GAI6B7H,OAAOqP,KAAK8E,GAAkBzT,OAAS,GAElEwR,EAAKvQ,MAAMiT,cAAcT,EAAkBjC,EAAKoC,sBAG9CL,GACF/B,EAAKvQ,MAAMkT,SACTb,EAAWT,aACXrB,EAAKoC,2BAIW7E,IAAhByE,GACFhC,EAAKvQ,MAAMmT,SAASZ,EAAahC,EAAKoC,sBAIxCpC,EAAKvQ,MAAMoT,aAAaZ,EAAkBjC,EAAKoC,qBACjD,KAmEJpC,EAEA8C,QAAU,SAAA5R,GAAI,OAAK8O,EAAK+C,UAAY7R,GAAK8O,EAEzCgD,aAAe,SAAAC,EAAAC,GAGV,IAAAC,EAAApJ,WAAAkJ,EAF8B,CAAE,EAAAA,EAAAG,EAAArJ,EAAlCsJ,OAAAA,OAAS,IAAHD,EAAG,MAAKA,EAAEnH,EAAGlC,EAAHkC,IAAQqH,EAAI7V,EAAAsM,EAAAwJ,GACEC,YADFN,EACA,CAAE,EAAAA,GAA9BO,iBAAAA,OAAmB,IAAHD,GAAQA,EAIzBxD,EAAKgD,aAAaU,QAAS,EAC3B1D,EAAKgD,aAAaK,OAASA,EAC3BrD,EAAKgD,aAAaS,iBAAmBA,EACrC,IAAOlH,EAAUyD,EAAK9C,WAAfX,OACP,OAAApO,IAAAgV,EAAAA,CAAAA,GACGE,GAASxH,EAAWI,EAAK+D,EAAK8C,SAAQK,EACvCQ,KAAM,WAAUR,EAChB,iBAAiB5G,EAAM4G,EACvB,iBAAiB,UAASA,EAC1B,aAAa5G,EAASyD,EAAKE,YAAS3C,EAAS4F,EAC7C,mBAAmBnD,EAAKG,QAAOgD,GAC5BG,IAIPtD,EAEA4D,gBAAkB,CAChBC,UAAS,SAACvI,GAAO,IAAAwI,EAAApV,KAGf,GAFA4M,EAAMyI,iBAEFrV,KAAKwO,WAAWX,OAAQ,CAC1B,IAAMyH,EAAS1I,EAAM2I,SAAW,EAAI,EACpCvV,KAAKwV,qBAAqBF,EAAQ,CAChCjR,KDjgBT,GCmgBK,MACErE,KAAKyS,iBACH,CACE5E,QAAQ,EACRxJ,KDvgBX,ICygBS,WACE,IAAMuN,EAAYwD,EAAKK,eACvB,GAAI7D,EAAY,EAAG,CACjB,IACM8D,EAAuB1G,EADFoG,EAAK5G,WAAzBgB,iBAGL,EACA,CAAC1P,OAAQ8R,GACTwD,EAAKhG,gBACL,GAGFgG,EAAK9C,oBAAoBoD,EAAsB,CAC7CrR,KDthBf,GCwhBW,CACF,GAGL,EAEDsR,QAAO,SAAC/I,GAAO,IAAAgJ,EAAA5V,KAGb,GAFA4M,EAAMyI,iBAEFrV,KAAKwO,WAAWX,OAAQ,CAC1B,IAAMyH,EAAS1I,EAAM2I,UAAY,GAAK,EACtCvV,KAAKwV,qBAAqBF,EAAQ,CAChCjR,KDviBT,GCyiBK,MACErE,KAAKyS,iBACH,CACE5E,QAAQ,EACRxJ,KD7iBX,IC+iBS,WACE,IAAMuN,EAAYgE,EAAKH,eACvB,GAAI7D,EAAY,EAAG,CACjB,IACM8D,EAAuB1G,EADF4G,EAAKpH,WAAzBgB,kBAGJ,EACD,CAAC1P,OAAQ8R,GACTgE,EAAKxG,gBACL,GAGFwG,EAAKtD,oBAAoBoD,EAAsB,CAC7CrR,KD5jBf,GC8jBW,CACF,GAGL,EAEDwR,MAAK,SAACjJ,GACJ,GAAoB,MAAhBA,EAAMkJ,MAAV,CAIA,IAAAC,EAAmC/V,KAAKwO,WAAjCX,EAAMkI,EAANlI,OAAQ2B,EAAgBuG,EAAhBvG,iBACf,GAAI3B,GAA8B,MAApB2B,EAA0B,CACtC5C,EAAMyI,iBACN,IAAMtC,EAAO/S,KAAKmP,MAAMK,GAClBwG,EAAWhW,KAAKoS,qBAAqB5C,GAC3C,GAAY,MAARuD,GAAiBiD,GAAYA,EAAS3D,aAAa,YACrD,OAEFrS,KAAKmT,sBAAsB,CACzB9O,KD7kBkE,GC+kBtE,CAbA,CAcD,EAED4R,OAAM,SAACrJ,GACLA,EAAMyI,iBACNrV,KAAKkW,MAAKzW,EAAA,CACR4E,KDtlBsE,ICulBjErE,KAAKsO,MAAMT,QAAU,CAAC8E,aAAc,KAAMC,WAAY,KAE/D,GAGFtB,EAEA6E,sBAAqB1W,EAChB6R,CAAAA,EAAAA,EAAK4D,gBAAe,CAEvB,IAAG,SAACtI,GACFA,EAAMyI,iBACNrV,KAAKoW,WAAW,CAAC/R,KD1lBtB,IC2lBG,IAACiN,EAGH+E,qBAAoB5W,EACf6R,CAAAA,EAAAA,EAAK4D,gBAAe,CACvBoB,KAAI,SAAC1J,GACH,IAAOiB,EAAU7N,KAAKwO,WAAfX,OAEP,GAAKA,EAAL,CAIAjB,EAAMyI,iBAEN,IAAMzD,EAAY5R,KAAKyV,eAEvB,KAAI7D,GAAa,IAAM/D,EAAvB,CAKA,IAAM0I,EAAsB9G,EAC1B,GACA,EACA,CAAC3P,OAAQ8R,GACT5R,KAAKoP,gBAGPpP,KAAKsS,oBAAoBiE,EAAqB,CAC5ClS,KD/nBkE,GConBpE,CARA,CAqBD,EAEDmS,IAAG,SAAC5J,GACF,IAAOiB,EAAU7N,KAAKwO,WAAfX,OAEP,GAAKA,EAAL,CAIAjB,EAAMyI,iBAEN,IAAMzD,EAAY5R,KAAKyV,eAEvB,KAAI7D,GAAa,IAAM/D,EAAvB,CAKA,IAAM0I,EAAsB9G,EAC1BmC,EAAY,GACZ,EACA,CAAC9R,OAAQ8R,GACT5R,KAAKoP,gBAGPpP,KAAKsS,oBAAoBiE,EAAqB,CAC5ClS,KD1pBgE,GC+oBlE,CARA,CAqBF,IAACiN,EAGHmF,qBAAuB,SAAAC,GAOZ,IAAAC,WAAAD,EAAP,CAAA,EAAEA,EANJE,EAAOD,EAAPC,QACOD,EAAPE,YACAC,EAASH,EAATG,UACAC,EAAOJ,EAAPI,QACAC,EAAML,EAANK,OACGpC,EAAI7V,EAAA4X,EAAAM,GAEApJ,EAAUyD,EAAK9C,WAAfX,OACDqJ,EAMA,CACEN,QAASpK,EAAqBoK,EAAStF,EAAK6F,mBAC5CL,UAAWtK,EACTsK,EACAxF,EAAK8F,qBAEPL,QAASvK,EAAqBuK,EAASzF,EAAK+F,mBAC5CL,OAAQxK,EAAqBwK,EAAQ1F,EAAKgG,mBAGlD,OAAA7X,EAAA,CACE4E,KAAM,SACN4Q,KAAM,SACN,aAAcpH,EAAS,aAAe,YACtC,iBAAiB,EACjB,eAAe,GANK+G,EAAK2C,SAAW,CAAA,EAAKL,EAQtCtC,IAENtD,EAED+F,kBAAoB,SAAAzK,GAElBA,EAAMyI,kBACP/D,EAED8F,oBAAsB,SAAAxK,GACpB,IAAMzN,EAAM2P,EAAkBlC,GAC1B0E,EAAK6E,sBAAsBhX,IAC7BmS,EAAK6E,sBAAsBhX,GAAKI,KAAI+R,EAAO1E,IAE9C0E,EAED6F,kBAAoB,SAAAvK,GAKlB,GAJAA,EAAMyI,iBAIgB/D,EAAKvQ,MAAM0K,YAAa,CAC5C,IAAA+L,EAA8BlG,EAAKvQ,MAAM0K,YAAYlE,SAA9CY,EAAIqP,EAAJrP,KAAM6H,EAAawH,EAAbxH,cAET7H,GAAQA,IAAS6H,GACnBpD,EAAM1N,OAAOuY,OAEjB,CAQEnG,EAAKQ,oBAAmB,WAAA,OACtBR,EAAK8E,WAAW,CAAC/R,KD5tBiD,IC4tBb,KAG1DiN,EAEDgG,iBAAmB,SAAA1K,GACjB,IAAM8K,EAAa9K,EAAM1N,OAEzBoS,EAAKQ,oBAAmB,WACtB,IAAIR,EAAKqG,aAAgBrG,EAAKvQ,MAAM0K,YAApC,CAIA,IAAOuE,EAAiBsB,EAAKvQ,MAAM0K,YAAYlE,SAAxCyI,cAGa,MAAjBA,GAAyBA,EAAcuB,KAAOD,EAAKI,SACpD1B,IAAkB0H,GAElBpG,EAAK4E,MAAM,CAAC7R,KD9uBoD,ICsuBlE,CAUF,KAKFiN,EAEAsG,cAAgB,SAAA7W,GACd,OAAAtB,EAAA,CAAQoY,QAASvG,EAAKI,QAASH,GAAID,EAAKG,SAAY1Q,IAKtDuQ,EAEAwG,cAAgB,SAAAC,GAOL,IAAAC,WAAAD,EAAP,CAAA,EAAEA,EANJjB,EAASkB,EAATlB,UACAE,EAAMgB,EAANhB,OACA9C,EAAQ8D,EAAR9D,SACA+D,EAAOD,EAAPC,QACYD,EAAZE,aACGtD,IAAAA,EAAI7V,EAAAiZ,EAAAG,GAGHC,EAAgB,CAAA,EAQpB,IAEoBC,EAFpBC,EAA+ChH,EAAK9C,WAA7CoE,EAAU0F,EAAV1F,WAAY/E,EAAMyK,EAANzK,OAAQ2B,EAAgB8I,EAAhB9I,iBAEtBoF,EAAK2C,YACKc,EAAAA,IACC,SAAG7L,EACb0H,EACA+D,EACA3G,EAAKiH,mBACNF,EACDvB,UAAWtK,EAAqBsK,EAAWxF,EAAKkH,oBAAmBH,EACnErB,OAAQxK,EAAqBwK,EAAQ1F,EAAKmH,iBAP5CL,EAO4DC,GAmB9D,OAAA5Y,EAAA,CACE,oBAAqB,OACrB,wBACEoO,GAAsC,iBAArB2B,GAAiCA,GAAoB,EAClE8B,EAAKK,UAAUnC,QACfX,EACN,gBAAiBhB,EAASyD,EAAKE,YAAS3C,EACxC,kBAAmB+F,GAAQA,EAAK,mBAAgB/F,EAAYyC,EAAKG,QAGjEiH,aAAc,MACdC,MAAO/F,EACPrB,GAAID,EAAKI,SACN0G,EACAxD,IAENtD,EAEDkH,mBAAqB,SAAA5L,GACnB,IAAMzN,EAAM2P,EAAkBlC,GAC1BzN,GAAOmS,EAAK+E,qBAAqBlX,IACnCmS,EAAK+E,qBAAqBlX,GAAKI,KAAI+R,EAAO1E,IAE7C0E,EAEDiH,kBAAoB,SAAA3L,GAClB0E,EAAKmB,iBAAiB,CACpBpO,KD70BoE,GC80BpEwJ,QAAQ,EACR+E,WAGMhG,EAAM1N,OAAOyZ,MACnBnJ,iBAAkB8B,EAAKvQ,MAAMyR,2BAEhClB,EAEDmH,gBAAkB,WAEhBnH,EAAKQ,oBAAmB,WAAM,IAAA8G,EAC5B,IAAItH,EAAKqG,aAAgBrG,EAAKvQ,MAAM0K,YAApC,CAIA,IAAOuE,EAAiBsB,EAAKvQ,MAAM0K,YAAYlE,SAAxCyI,eAEQ,MAAbA,GAAsB,OAAT4I,EAAb5I,EAAe6I,cAAO,EAAtBD,EAAwBE,SACxBxH,EAAK+C,WACL/C,EAAK+C,UAAU1I,SAASqE,IAGxBsB,EAAK4E,MAAM,CAAC7R,KDt2BkD,IC61BhE,CAWF,KAKFiN,EAEAyH,QAAU,SAAAvW,GACR8O,EAAK0H,UAAYxW,GAClB8O,EAED2H,aAAe,SAAAC,EAAAC,GAGV,IAAAC,EAAAC,WAAAH,EAF+B,CAAE,EAAAA,EAAAI,EAAAD,EAAnC1E,OAAAA,OAAS,IAAH2E,EAAG,MAAKA,EAAE/L,EAAG8L,EAAH9L,IAAQxM,EAAKhC,EAAAsa,EAAAE,GACCC,YADDL,EACD,CAAE,EAAAA,GAA9BpE,iBAAAA,OAAmB,IAAHyE,GAAQA,EAMzB,OAJAlI,EAAK2H,aAAajE,QAAS,EAC3B1D,EAAK2H,aAAatE,OAASA,EAC3BrD,EAAK2H,aAAalE,iBAAmBA,EAErCtV,IAAA2Z,EAAA,CAAA,GACGzE,GAASxH,EAAWI,EAAK+D,EAAKyH,SAAQK,EACvCnE,KAAM,UAASmE,EACf,mBACErY,GAASA,EAAM,mBAAgB8N,EAAYyC,EAAKG,QAAO2H,EACzD7H,GAAID,EAAKE,OAAM4H,GACZrY,IAKPuQ,EACAmI,aAAe,SAAAC,GAUJ,IAAAC,EAAAC,WAAAF,EAAP,CAAA,EAAEA,EATJG,EAAWD,EAAXC,YACAC,EAAWF,EAAXE,YACAlD,EAAOgD,EAAPhD,QACOgD,EAAP/C,YACAlH,EAAKiK,EAALjK,MAAKoK,EAAAH,EACL7G,KAAAA,OAAI,IAAAgH,OAC2BlL,EAASkL,EAErCnF,EAAI7V,EAAA6a,EAAAI,QAEOnL,IAAVc,GACF2B,EAAKnC,MAAMjH,KAAK6K,GAChBpD,EAAQ2B,EAAKnC,MAAM3P,QAAQuT,IAE3BzB,EAAKnC,MAAMQ,GAASoD,EAGtB,IAIMkH,EAEFrD,EAEEM,IAAoByC,EAAA,CAIxBE,YAAarN,EAAqBqN,GAAa,WACzClK,IAAU2B,EAAK9C,WAAWgB,mBAG9B8B,EAAKgB,oBAAoB3C,EAAO,CAC9BtL,KDt7BsE,IC67BxEiN,EAAK4I,gBAAiB,EACtB5I,EAAKQ,oBAAmB,WAAA,OAAOR,EAAK4I,gBAAiB,CAAM,GAAE,KAC/D,IACAJ,YAAatN,EAAqBsN,GAAa,SAAAlN,GAI7CA,EAAMyI,sBAEI,QAAG7I,EAAqByN,GAAoB,WACtD3I,EAAK2B,kBAAkBtD,EAAO,CAC5BtL,KD77B4D,OC+7B9DsV,GAKEvB,EAAgBxD,EAAK2C,SACvB,CAACuC,YAAa5C,EAAqB4C,aACnC5C,EAEJ,OAAAzX,EAAA,CACE8R,GAAID,EAAKK,UAAUhC,GACnBsF,KAAM,SACN,gBAAiB3D,EAAK9C,WAAWgB,mBAAqBG,GACnDyI,EACAxD,IAGPtD,EAEA6I,WAAa,WACX7I,EAAKnC,MAAQ,IACdmC,EAED4E,MAAQ,SAAC3D,EAAsBrL,QAAP,IAAfqL,IAAAA,EAAkB,CAAA,GACzBA,EAAkBlE,EAAUkE,GAC5BjB,EAAKmB,kBACH,SAAA2H,GAAA,IAAEzH,EAAYyH,EAAZzH,aAAY,OAAAlT,EAAA,CACZoO,OAAQyD,EAAKvQ,MAAM8R,cACnBrD,iBAAkB8B,EAAKvQ,MAAMyR,wBAC7BI,WAAYtB,EAAKvQ,MAAMiS,aAAaL,IACjCJ,EACH,GACFrL,IAEHoK,EAED8E,WAAa,SAAC7D,EAAsBrL,QAAP,IAAfqL,IAAAA,EAAkB,CAAA,GAC9BA,EAAkBlE,EAAUkE,GAC5BjB,EAAKmB,kBACH,SAAA4H,GAAc,IAAZxM,EAAMwM,EAANxM,OACA,OAAApO,EAAA,CACEoO,QAASA,GACLA,GAAU,CACZ2B,iBAAkB8B,EAAKvQ,MAAMyR,yBAE5BD,EAEP,IACA,WACE,IAAA+H,EAAmChJ,EAAK9C,WAAjCX,EAAMyM,EAANzM,OAAQ2B,EAAgB8K,EAAhB9K,iBACX3B,GACEyD,EAAKmE,eAAiB,GAAiC,iBAArBjG,GACpC8B,EAAKgB,oBAAoB9C,EAAkB+C,GAG/CtL,EAAOC,EAAPD,EACF,KAEHqK,EAEDiJ,SAAW,SAAArT,GACToK,EAAKmB,iBAAiB,CAAC5E,QAAQ,GAAO3G,IACvCoK,EAEDkJ,UAAY,SAAAtT,GACVoK,EAAKmB,iBAAiB,CAAC5E,QAAQ,GAAQ3G,IACxCoK,EAEDmJ,aAAe7O,GAAS,WAAM,IAAA8O,EAC5B,GAAeA,OAAXA,EAACpJ,EAAKvQ,QAAkB,OAAb2Z,EAAVA,EAAYjP,cAAZiP,EAAyBnT,SAA9B,CAIA,IAAM+G,EAAQgD,EAAK9C,WACbuE,EAAOzB,EAAKnC,MAAMb,EAAMkB,kBACxB1B,EAAcwD,EAAKmE,eACnBvE,EAASI,EAAKvQ,MAAM4M,qBAAoBlO,EAAA,CAC5CuT,aAAc1B,EAAKvQ,MAAMiS,aACzBjF,oBAAqBuD,EAAKvD,oBAC1BD,YAAAA,EACA6M,gBAAiB5H,GACdzE,IAELgD,EAAKvD,oBAAsBD,EAE3BmD,EAAUC,EAAQI,EAAKvQ,MAAM0K,YAAYlE,SAdzC,CAeD,GAAE,KAx6BD,IAAAqT,EAOItJ,EAAKvQ,MANPyR,EAAuBoI,EAAvBpI,wBAAuBqI,EAAAD,EACvBE,wBAAyBtL,OAAmBgD,IAAHqI,EAAGrI,EAAuBqI,EACnEhI,EAAa+H,EAAb/H,cAAakI,EAAAH,EACbI,cAAenN,OAASgF,IAAHkI,EAAGlI,EAAakI,EAAAE,EAAAL,EACrCM,kBAAmBtI,OAAa,IAAHqI,EAAG,GAAEA,EAAAE,EAAAP,EAClCQ,oBAAqBzI,OAAe,IAAHwI,EAAG,KAAIA,EAEpC7M,EAAQgD,EAAK9C,SAAS,CAC1BgB,iBAAAA,EACA3B,OAAAA,EACA+E,WAAAA,EACAD,aAAAA,IAQgB,OALM,MAAtBrE,EAAMqE,mBAC2B9D,IAAjCyC,EAAKvQ,MAAMma,oBAEX5M,EAAMsE,WAAatB,EAAKvQ,MAAMiS,aAAa1E,EAAMqE,eAEnDrB,EAAKhD,MAAQA,EAAKgD,CACpB,CChJa,IAAwB+J,EAAUC,IDgJ9CjK,GChJoCgK,EDgJpCjK,GC/IQ/R,UAAYD,OAAOmc,OAAOD,EAAWjc,WAC9Cgc,EAAShc,UAAUmc,YAAcH,EACjCjb,EAAeib,EAAUC,GD6IxB,IAAAG,EAAArK,EAAA/R,UA2lCA,OA3jCDoc,EAGAC,sBAAA,WACE1b,KAAK6R,WAAWzG,SAAQ,SAAAmG,GACtBtF,aAAasF,EACf,IAEAvR,KAAK6R,WAAa,EACpB,EAEA4J,EASAjN,SAAA,SAASmN,GACP,YADmB,IAAZA,IAAAA,EAAe3b,KAAKsO,OACpBE,EAASmN,EAAc3b,KAAKe,QACpC0a,EAEDhG,aAAA,WAKE,IAAI7D,EAAY5R,KAAKmP,MAAMrP,OAM3B,OALsB,MAAlBE,KAAK4R,UACPA,EAAY5R,KAAK4R,eACiB/C,IAAzB7O,KAAKe,MAAM6Q,YACpBA,EAAY5R,KAAKe,MAAM6Q,WAElBA,GACR6J,EAUDrJ,qBAAA,SAAqBzC,GACnB,OAAO3P,KAAKe,MAAM0K,YACdzL,KAAKe,MAAM0K,YAAYlE,SAAS+I,eAAetQ,KAAK2R,UAAUhC,IAC9D,MACL8L,EAgBDG,8BAAA,WAGI,IAAMpZ,EAAOxC,KAAKoS,qBAAqBpS,KAAKwO,WAAWgB,kBACvDxP,KAAKe,MAAMqG,eAAe5E,EAAMxC,KAAKgZ,YAExCyC,EAEDjG,qBAAA,SAAqBF,EAAQ/C,GAC3B,IAAMX,EAAY5R,KAAKyV,eAChBjG,EAAoBxP,KAAKwO,WAAzBgB,iBACP,GAAIoC,EAAY,EAAG,CACjB,IAAM8D,EAAuB1G,EAC3BQ,EACA8F,EACA,CAACxV,OAAQ8R,GACT5R,KAAKoP,gBACL,GAEFpP,KAAKsS,oBAAoBoD,EAAsBnD,EACjD,GACDkJ,EAkKD/H,mBAAA,WACE,IAAAmI,EAA6D7b,KAAKwO,WAA3DgB,EAAgBqM,EAAhBrM,iBAAkBoD,EAAUiJ,EAAVjJ,WAAYD,EAAYkJ,EAAZlJ,aAAc9E,EAAMgO,EAANhO,OAC5CmF,EAAgBhT,KAAKe,MAArBiS,aACAzB,EAAMvR,KAANuR,GAEL+C,EAmBEtU,KAnBFsU,aACAmC,EAkBEzW,KAlBFyW,qBACAmB,EAiBE5X,KAjBF4X,cACAqB,EAgBEjZ,KAhBFiZ,aACAnB,EAeE9X,KAfF8X,cACA2B,EAcEzZ,KAdFyZ,aACAc,EAaEva,KAbFua,SACAC,EAYExa,KAZFwa,UACApE,EAWEpW,KAXFoW,WACAtD,EAUE9S,KAVF8S,WACAG,EASEjT,KATFiT,kBACAE,EAQEnT,KARFmT,sBACAb,EAOEtS,KAPFsS,oBACAI,EAME1S,KANF0S,eACAyH,EAKEna,KALFma,WAMF,MAAO,CAEL7F,aAAAA,EACAmC,qBAAAA,EACAmB,cAAAA,EACAqB,aAAAA,EACAnB,cAAAA,EACA2B,aAAAA,EAGAvD,MAXElW,KAJFkW,MAgBAqE,SAAAA,EACAC,UAAAA,EACApE,WAAAA,EACAtD,WAAAA,EACAG,kBAAAA,EACAE,sBAAAA,EACAb,oBAAAA,EACAI,eAAAA,EACAyH,WAAAA,EACAnI,aArBEhS,KAHFgS,aAyBAC,eAtBEjS,KAFFiS,eAyBA0B,SAvBE3T,KADFyS,iBA2BAO,aAAAA,EAGAzB,GAAAA,EAGA/B,iBAAAA,EACAoD,WAAAA,EACA/E,OAAAA,EACA8E,aAAAA,IAEH8I,EA+jBDK,kBAAA,WAAoB,IAAAC,EAAA/b,KAYlB,GAAsBA,KAAKe,MAAM0K,YAI1B,CAML,IAAMqO,EAAc,WAClBiC,EAAKpE,aAAc,GAEfqE,EAAY,SAAApP,GAChBmP,EAAKpE,aAAc,GAGY/H,EAC7BhD,EAAM1N,OACN,CAAC6c,EAAK1H,UAAW0H,EAAK/C,WACtB+C,EAAKhb,MAAM0K,cAEkBsQ,EAAKvN,WAAWX,QAC7CkO,EAAK7F,MAAM,CAAC7R,KDtkC2C,ICskCV,WAAA,OAC3C0X,EAAKhb,MAAMkb,aAAaF,EAAKrI,qBAAqB,KAUlDwI,EAAe,WACnBH,EAAKI,aAAc,GAGfC,EAAc,WAClBL,EAAKI,aAAc,GAGfE,EAAa,SAAAzP,GACjB,IAAM0P,EAAyB1M,EAC7BhD,EAAM1N,OACN,CAAC6c,EAAK1H,UAAW0H,EAAK/C,WACtB+C,EAAKhb,MAAM0K,aACX,GAGCsQ,EAAKI,aACLG,IACDP,EAAKvN,WAAWX,QAEhBkO,EAAK7F,MAAM,CAAC7R,KD9kC6C,KC8kCX,WAAA,OAC5C0X,EAAKhb,MAAMkb,aAAaF,EAAKrI,qBAAqB,KAIjDjI,EAAezL,KAAKe,MAApB0K,YAEPA,EAAY8Q,iBAAiB,YAAazC,GAC1CrO,EAAY8Q,iBAAiB,UAAWP,GACxCvQ,EAAY8Q,iBAAiB,aAAcL,GAC3CzQ,EAAY8Q,iBAAiB,YAAaH,GAC1C3Q,EAAY8Q,iBAAiB,WAAYF,GAEzCrc,KAAKwc,QAAU,WACbT,EAAKL,wBACLK,EAAKtB,aAAazO,SAElBP,EAAYgR,oBAAoB,YAAa3C,GAC7CrO,EAAYgR,oBAAoB,UAAWT,GAC3CvQ,EAAYgR,oBAAoB,aAAcP,GAC9CzQ,EAAYgR,oBAAoB,YAAaL,GAC7C3Q,EAAYgR,oBAAoB,WAAYJ,GAEhD,MA5EErc,KAAKwc,QAAU,WACbT,EAAKL,0BA4EVD,EAEDiB,aAAA,SAAa/N,EAAWgO,GACtB,IAAyBC,QACS/N,IAAhC7O,KAAKe,MAAMyO,iBAAiCxP,KAAKwO,WAAaxO,KAAKe,OAD9DyO,iBAEkBqN,QACQhO,IAA/B8N,EAAUnN,iBAAiCb,EAAYgO,GADlDnN,iBAOP,OAJEoN,GAA2B5c,KAAKwO,WAAWX,SAAWc,EAAUd,QAEhE+O,IAA4BC,GAG/BpB,EAEDqB,mBAAA,SAAmBH,EAAWhO,GAc1BC,EAAiB5O,KAAKe,MAAO,iBAC7Bf,KAAKe,MAAMgc,oBACTJ,EAAUhK,aACV3S,KAAKe,MAAM4R,eAGb3S,KAAKyS,iBAAiB,CACpBpO,KD3oCP,GC4oCOuO,WAAY5S,KAAKe,MAAMiS,aAAahT,KAAKe,MAAM4R,iBAI9C3S,KAAKka,gBAAkBla,KAAK0c,aAAa/N,EAAWgO,IACvD3c,KAAK4b,gCAKL5b,KAAKya,gBAERgB,EAEDuB,qBAAA,WACEhd,KAAKwc,WACNf,EAEDwB,OAAA,WACE,IAAMC,EAAWlP,EAAYhO,KAAKe,MAAMmc,SAAU/V,GAIlDnH,KAAKma,aAKLna,KAAKsU,aAAaU,QAAS,EAC3BhV,KAAKsU,aAAaK,YAAS9F,EAC3B7O,KAAKsU,aAAaS,sBAAmBlG,EAErC7O,KAAKiZ,aAAajE,QAAS,EAC3BhV,KAAKiZ,aAAatE,YAAS9F,EAC3B7O,KAAKiZ,aAAalE,sBAAmBlG,EAErC7O,KAAK4X,cAAc5C,QAAS,EAE5BhV,KAAK8X,cAAc9C,QAAS,EAC5B,IAAM3S,EAAU2L,EAAYkP,EAASld,KAAK0T,uBAC1C,OAAKrR,EAIDrC,KAAKsU,aAAaU,QAAUhV,KAAKe,MAAMgU,iBAQlC1S,EHphCb,SAAsBA,GAUpB,MAA+B,iBAAjBA,EAAQgC,IACxB,CG0gCe8Y,CAAa9a,GAGf+a,EAAAA,aAAa/a,EAASrC,KAAKsU,aHvgCxC,SAAyBjS,GAQvB,OAAOA,EAAQtB,KACjB,CG8/BqDsc,CAAgBhb,UAH1D,EAZE,MA8BV+O,CAAA,EA5sCqBkM,EAASA,WAqFW,OArFtClM,EAgDGmM,aAAe,CACpB/K,wBAAyB,KACzBK,eAAe,EACflF,qBAAAA,EACAqF,aAAc,SAAApT,GACZ,OAAS,MAALA,EACK,GAcF8N,OAAO9N,EACf,EACDoU,cAAe7M,EACfsM,mBAAoBtM,EACpBgN,aAAchN,EACd+M,SAAU/M,EACV8M,SAAU9M,EACV8U,aAAc9U,EACd4V,oBAAqB,SAACS,EAAUzK,GAAI,OAAKyK,IAAazK,CAAI,EAC1DtH,YAEoB,oBAAXrD,YAA0CyG,EAAYzG,OAC/D0L,aAAc,SAACxF,EAAO8E,GAAU,OAAKA,CAAU,EAC/C2B,kBAAkB,EAClB3N,eAAAA,GAlFEgK,EAqFGqM,iBAAmBA,EArFtBrM,CAAS,CAAA,GEZTsM,EAA6B,CACjClO,kBAAmB,EACnB3B,QAAQ,EACR8E,aAAc,KACdC,WAAY,IAGd,SAAS+K,EAAkBC,EAAQtP,EAAOuP,GACxC,IAAO9c,EAAe6c,EAAf7c,MAAOsD,EAAQuZ,EAARvZ,KACRyZ,EAAU,CAAA,EAEhB1e,OAAOqP,KAAKH,GAAOlD,SAAQ,SAAAjM,IAa7B,SAA+BA,EAAKye,EAAQtP,EAAOuP,GACjD,IAAO9c,EAAe6c,EAAf7c,MAAOsD,EAAQuZ,EAARvZ,KACR0Z,EAAeC,KAAAA,GAAiB7e,GAAY,SAEhD4B,EAAMgd,SACYlP,IAAlBgP,EAAS1e,IACT0e,EAAS1e,KAASmP,EAAMnP,IAExB4B,EAAMgd,GAAQte,EAAA,CAAE4E,KAAAA,GAASwZ,GAE7B,CAtBII,CAAsB9e,EAAKye,EAAQtP,EAAOuP,GAEtCA,EAAS1e,KAASmP,EAAMnP,KAC1B2e,EAAQ3e,GAAO0e,EAAS1e,GAE5B,IAEI4B,EAAMiT,eAAiB5U,OAAOqP,KAAKqP,GAAShe,QAC9CiB,EAAMiT,cAAavU,EAAA,CAAE4E,KAAAA,GAASyZ,GAElC,CA4BA,IAAMI,EAAmBtS,GAAS,SAACsF,EAAQ3J,GACzC0J,EAAUC,EAAQ3J,EACpB,GAAG,KAGG4W,EACc,oBAAX/V,aACoB,IAApBA,OAAOb,eAC2B,IAAlCa,OAAOb,SAASgJ,cACnB6N,EAAAA,gBACAC,EAAAA,UAGAC,EACJ,UAAWC,EACP,SAAAlT,GAOG,IANDkG,EAAElG,EAAFkG,GACAE,EAAOpG,EAAPoG,QACAD,EAAMnG,EAANmG,OACAG,EAAStG,EAATsG,UACA6M,EAAcnT,EAAdmT,eACA9M,EAAOrG,EAAPqG,QAGM+M,EAAuBF,aAAAA,EAAMG,QAanC,OAZKnN,IACHA,EAAKkN,GAGeE,EAAAA,OAAO,CAC3BlN,QAASA,GAAcF,EAAU,SACjCC,OAAQA,GAAaD,EAAS,QAC9BI,UAAWA,GAAc,SAAAhC,GAAK,OAAO4B,WAAW5B,CAAQ,EACxD6O,eAAgBA,GAAqBjN,EAAkB,iBACvDG,QAASA,GAAcH,EAAE,WAGN/D,OACvB,EACA,SAAAI,GAOG,IAAAgR,EAAAhR,EAND2D,GAAAA,OAAE,IAAAqN,EAAA,aAAgBnR,IAAYmR,EAC9BnN,EAAO7D,EAAP6D,QACAD,EAAM5D,EAAN4D,OACAG,EAAS/D,EAAT+D,UACA6M,EAAc5Q,EAAd4Q,eACA9M,EAAO9D,EAAP8D,QAUA,OARsBiN,EAAAA,OAAO,CAC3BlN,QAASA,GAAcF,EAAU,SACjCC,OAAQA,GAAaD,EAAS,QAC9BI,UAAWA,GAAc,SAAAhC,GAAK,OAAO4B,WAAW5B,CAAQ,EACxD6O,eAAgBA,GAAqBjN,EAAkB,iBACvDG,QAASA,GAAcH,EAAE,WAGN/D,OACvB,EAEN,SAASqR,EAAgBC,EAAUC,EAAW5P,EAAO6P,GACnD,IAAIjM,EAAMpD,EAEV,QAAiBd,IAAbiQ,EAAwB,CAC1B,QAAkBjQ,IAAdkQ,EACF,MAAM,IAAIzd,MAAM0d,GAGlBjM,EAAO5D,EAAM4P,GACbpP,EAAQoP,CACV,MACEpP,OAAsBd,IAAdkQ,EAA0B5P,EAAM3P,QAAQsf,GAAYC,EAC5DhM,EAAO+L,EAGT,MAAO,CAAC/L,EAAMpD,EAChB,CAMA,SAASqO,GAAiB/b,GACxB,MAAA,GAAUA,EAAOgd,MAAM,EAAG,GAAGC,cAAgBjd,EAAOgd,MAAM,EAC5D,CAEA,SAASE,GAAaC,GACpB,IAAM7R,EAAMoR,SAAOS,GAOnB,OADA7R,EAAIC,QAAU4R,EACP7R,CACT,CAaA,SAAS8R,GAAmBC,EAASve,EAAOwe,EAAoBC,GAC9D,IAAMC,EAAed,EAAAA,SACfe,EAAYf,EAAAA,SACZgB,EAAkBC,EAAAA,aACtB,SAACtR,EAAOsP,GACN8B,EAAUlS,QAAUoQ,EACpBtP,EAAQE,EAASF,EAAOsP,EAAO7c,OAE/B,IAAM+c,EAAUwB,EAAQhR,EAAOsP,GAG/B,OAFiBA,EAAO7c,MAAM+S,aAAaxF,EAAK7O,EAAA,CAAA,EAAMme,EAAM,CAAEE,QAAAA,IAGhE,GACA,CAACwB,IAEHO,EAA0BC,EAAUA,WAClCH,EACA5e,EACAwe,GAHKjR,EAAKuR,EAAA,GAAEE,EAAQF,EAAA,GAKhBG,EAAWb,GAAape,GACxBkf,EAAoBL,eACxB,SAAAhC,GAAM,OAAImC,EAAQtgB,EAAA,CAAEsB,MAAOif,EAASxS,SAAYoQ,MAChD,CAACoC,IAEGpC,EAAS8B,EAAUlS,QAczB,OAZA6Q,EAAAA,WAAU,WACR,IAAM1P,EAAYH,EAASiR,EAAajS,QAAe,MAANoQ,OAAM,EAANA,EAAQ7c,OAEvD6c,GAAU6B,EAAajS,UAAYgS,EAAa7Q,EAAWL,IAG3DqP,EAAkBC,EAAQjP,EAAWL,GAGvCmR,EAAajS,QAAUc,CACxB,GAAE,CAACA,EAAOsP,EAAQ4B,IAEZ,CAAClR,EAAO2R,EACjB,CAYA,SAASC,GACPZ,EACAve,EACAwe,EACAC,GAEA,IAAAW,EAA0Bd,GACxBC,EACAve,EACAwe,EACAC,GAJKlR,EAAK6R,EAAA,GAAEJ,EAAQI,EAAA,GAOtB,MAAO,CAAC3R,EAASF,EAAOvN,GAAQgf,EAClC,CAEA,IAAMxC,GAAe,CACnBvK,aAAY,SAACD,GACX,OAAOA,EAAOrF,OAAOqF,GAAQ,EAC9B,EACDqN,UAAS,SAACrN,GACR,OAAOA,CACR,EACDe,aA5LF,SAAsBlN,EAAG1C,GACvB,OAAOA,EAAE4Z,OACX,EA2LE1W,eAAAA,EACAqE,YAEoB,oBAAXrD,YAA0CyG,EAAYzG,QAGjE,SAASiY,GACPtf,EACAuf,EACAC,QAAkB,IAAlBA,IAAAA,EAAqB7C,GAErB,IAAMxP,EAAenN,EAAK,UAAWid,GAAiBsC,IAEtD,YAAqBzR,IAAjBX,EACKA,EAGFqS,EAAmBD,EAC5B,CAEA,SAASE,GACPzf,EACAuf,EACAC,QAAkB,IAAlBA,IAAAA,EAAqB7C,GAErB,IAAM/E,EAAQ5X,EAAMuf,GAEpB,QAAczR,IAAV8J,EACF,OAAOA,EAGT,IAAM8H,EAAe1f,EAAK,UAAWid,GAAiBsC,IAEtD,YAAqBzR,IAAjB4R,EACKA,EAGFJ,GAAgBtf,EAAOuf,EAASC,EACzC,CAEA,SAASG,GAAgB3f,GACvB,IAAM4R,EAAe6N,GAAgBzf,EAAO,gBACtC8M,EAAS2S,GAAgBzf,EAAO,UAChCyO,EAyXR,SAAoCzO,GAClC,IAAMyO,EAAmBgR,GAAgBzf,EAAO,oBAEhD,GACEyO,GAAoB,GACpBzO,EAAMqO,eAAerO,EAAMoO,MAAMK,GAAmBA,GAEpD,OAAQ,EAGV,OAAOA,CACT,CApY2BmR,CAA2B5f,GAC9C6R,EAAa4N,GAAgBzf,EAAO,cAE1C,MAAO,CACLyO,iBACEA,EAAmB,GAAKmD,GAAgB9E,EACpC9M,EAAMoO,MAAMyR,WACV,SAAA7N,GAAI,OAAIhS,EAAMqf,UAAUrN,KAAUhS,EAAMqf,UAAUzN,EACpD,IACAnD,EACN3B,OAAAA,EACA8E,aAAAA,EACAC,WAAAA,EAEJ,CAEA,SAASiO,GAA0B9f,EAAOuN,EAAOY,GAC/C,IACEC,EAKEpO,EALFoO,MACA2L,EAIE/Z,EAJF+Z,wBACAtI,EAGEzR,EAHFyR,wBACApD,EAEErO,EAFFqO,eACAgR,EACErf,EADFqf,UAEKzN,EAAkCrE,EAAlCqE,aAAcnD,EAAoBlB,EAApBkB,iBAErB,OAAqB,IAAjBL,EAAMrP,QACA,OAKoB+O,IAA5BiM,GACAtL,IAAqBsL,GACpB1L,EAAeD,EAAM2L,GAA0BA,QAMpBjM,IAA5B2D,GACCpD,EAAeD,EAAMqD,GAA0BA,GAK9CG,EACKxD,EAAMyR,WAAU,SAAA7N,GAAI,OAAIqN,EAAUzN,KAAkByN,EAAUrN,MAIrE7D,EAAS,IACRE,EAAeD,EAAMA,EAAMrP,OAAS,GAAIqP,EAAMrP,OAAS,GAEjDqP,EAAMrP,OAAS,EAGpBoP,EAAS,IAAME,EAAeD,EAAM,GAAI,GACnC,GAGD,EAlBCqD,EAPAsI,CA0BX,CASA,SAASgG,GACPrV,EACAsV,EACAC,GAEA,IAAMC,EAA2BtC,EAAAA,OAAO,CACtChH,aAAa,EACbwE,aAAa,EACb+E,YAAY,IA8Dd,OA3DA7C,EAAAA,WAAU,WACR,IAAsB5S,EACpB,OAAOtE,EAGT,IAAM0I,EAAoBkR,EAAqBI,KAAI,SAAA5T,GAAG,OAAIA,EAAIC,WAE9D,SAASsM,IACPmH,EAAyBzT,QAAQ0T,YAAa,EAC9CD,EAAyBzT,QAAQmK,aAAc,CACjD,CACA,SAASqE,EAAUpP,GACjBqU,EAAyBzT,QAAQmK,aAAc,EAG5C/H,EAAsBhD,EAAM1N,OAAQ2Q,EAAmBpE,IAExDuV,GAEJ,CACA,SAAS9E,IACP+E,EAAyBzT,QAAQ0T,YAAa,EAC9CD,EAAyBzT,QAAQ2O,aAAc,CACjD,CACA,SAASC,IACP6E,EAAyBzT,QAAQ2O,aAAc,CACjD,CACA,SAASE,EAAWzP,GAClBqU,EAAyBzT,QAAQ0T,YAAa,EAG3CD,EAAyBzT,QAAQ2O,aACjCvM,EACChD,EAAM1N,OACN2Q,EACApE,GACA,IAGFuV,GAEJ,CAQA,OANAvV,EAAY8Q,iBAAiB,YAAazC,GAC1CrO,EAAY8Q,iBAAiB,UAAWP,GACxCvQ,EAAY8Q,iBAAiB,aAAcL,GAC3CzQ,EAAY8Q,iBAAiB,YAAaH,GAC1C3Q,EAAY8Q,iBAAiB,WAAYF,GAElC,WACL5Q,EAAYgR,oBAAoB,YAAa3C,GAC7CrO,EAAYgR,oBAAoB,UAAWT,GAC3CvQ,EAAYgR,oBAAoB,aAAcP,GAC9CzQ,EAAYgR,oBAAoB,YAAaL,GAC7C3Q,EAAYgR,oBAAoB,WAAYJ,GAGhD,GAAG,CAAC5Q,EAAauV,IAEVC,EAAyBzT,OAClC,CAIA,IAAI4T,GAA8B,WAAA,OAAMja,CAAI,EAkE5C,SAASka,GACP1T,EACA2T,EACAC,EACA9V,QAAW,IAAXA,IAAAA,EAAc,CAAA,GAEd,IAAMlE,EAAWkE,EAAYlE,SACvBia,EAAiBC,KAGvBpD,EAAAA,WAAU,WACR,GAAK1Q,IAAwB6T,GAAoCja,EAAjE,CAIA,IAAM2J,EAASvD,EAAqB2T,GAEpCpD,EAAiBhN,EAAQ3J,EAJzB,CAOD,GAAEga,GAGHlD,EAAAA,WAAU,WACR,OAAO,WJ5dJ,IAA0BnO,EACzBG,EI4dF6N,EAAiBlS,UJ5dfqE,EAAwB,OADCH,EI8dV3I,QJ7dS,EAAZ2I,EAAcI,eAAe,yBAG7CD,EAAUqR,SI4dZ,GAAG,CAACna,GACN,CAEA,SAASoa,GAAiBhL,GAOvB,IANDnH,EAAgBmH,EAAhBnH,iBACA3B,EAAM8I,EAAN9I,OACA+T,EAAQjL,EAARiL,SACAxP,EAAoBuE,EAApBvE,qBACAyP,EAAWlL,EAAXkL,YACgBC,EAAkBnL,EAAlCvP,eAGM2a,EAAkBpD,UAAO,GAmB/B,OAjBAR,GAA0B,WAEtB3O,EAAmB,IAClB3B,IACAzO,OAAOqP,KAAKmT,EAASpU,SAAS1N,UAKD,IAA5BiiB,EAAgBvU,QAClBuU,EAAgBvU,SAAU,EAE1BsU,EAAmB1P,EAAqB5C,GAAmBqS,GAG/D,GAAG,CAACrS,IAEGuS,CACT,CA8BA,SAASC,GAAsBjhB,EAAOyO,EAAkBoD,GAAmB,IAAAqP,EAGzE,YAHgE,IAAVrP,IAAAA,GAAa,GAGnEnT,EAAA,CACEoO,QAAQ,EACR2B,kBAAmB,IAJW,OAAXyS,EAAAlhB,EAAMoO,YAAK,EAAX8S,EAAaniB,SAAU0P,GAAoB,GAK9C/P,EAAA,CACdkT,aAAc5R,EAAMoO,MAAMK,GAC1B3B,OAAQwS,GAAgBtf,EAAO,UAC/ByO,iBAAkB6Q,GAAgBtf,EAAO,qBACrC6R,GAAc,CAChBA,WAAY7R,EAAMiS,aAAajS,EAAMoO,MAAMK,MAInD,CAUA,SAAS0S,GAAsBvT,EAAWkP,GACxC,OACElP,EAAUd,SAAWgQ,EAAShQ,QAC9Bc,EAAUiE,aAAeiL,EAASjL,YAClCjE,EAAUa,mBAAqBqO,EAASrO,kBACxCb,EAAUgE,eAAiBkL,EAASlL,YAExC,CAKA,SAAS8O,KACP,IAAMU,EAAoB5D,EAAMI,QAAO,GAUvC,OARAJ,EAAMF,WAAU,WAGd,OAFA8D,EAAkB3U,SAAU,EAErB,WACL2U,EAAkB3U,SAAU,EAE/B,GAAE,IAEI2U,EAAkB3U,OAC3B,CAQA,SAAS4U,GAA2BrhB,GAClC,IAAMyO,EAAmB6Q,GAAgBtf,EAAO,oBAChD,OACEyO,GAAoB,GACpBzO,EAAMqO,eAAerO,EAAMoO,MAAMK,GAAmBA,IAE5C,EAGHA,CACT,CAsBA,IAAM6S,GAAkB,CACtB5W,YAAa1I,EAAUH,MAAM,CAC3B2Z,iBAAkBxZ,EAAUjB,KAAKL,WACjCgb,oBAAqB1Z,EAAUjB,KAAKL,WACpC8F,SAAUxE,EAAUH,MAAM,CACxB2N,cAAexN,EAAUjB,KAAKL,WAC9B6O,eAAgBvN,EAAUjB,KAAKL,WAC/BuO,cAAejN,EAAUZ,IAAIV,WAC7B0G,KAAMpF,EAAUZ,IAAIV,aACnBA,WACHiK,KAAM3I,EAAUjB,KAAKL,aAEvBuR,aAAcjQ,EAAUjB,KACxBse,UAAWrd,EAAUjB,KACrBgS,aAAc/Q,EAAUjB,MAIpBwgB,GAAuB7iB,EAAA,CAAA,EACxB4iB,GAAe,CAClB1U,qBAAsB5K,EAAUjB,KAChC0N,iBAAkBzM,EAAUhB,OAC5ByQ,wBAAyBzP,EAAUhB,OACnC+Y,wBAAyB/X,EAAUhB,OACnC8L,OAAQ9K,EAAUlB,KAClBgR,cAAe9P,EAAUlB,KACzBmZ,cAAejY,EAAUlB,KACzB8Q,aAAc5P,EAAUZ,IACxBiZ,oBAAqBrY,EAAUZ,IAC/BogB,oBAAqBxf,EAAUZ,IAC/BoP,GAAIxO,EAAUd,OACdwP,QAAS1O,EAAUd,OACnBuP,OAAQzO,EAAUd,OAClB0P,UAAW5O,EAAUjB,KACrB0c,eAAgBzb,EAAUd,OAC1BugB,qBAAsBzf,EAAUjB,KAChC2gB,yBAA0B1f,EAAUjB,KACpCkS,cAAejR,EAAUjB,KACzB4gB,eAAgB3f,EAAUjB,KAC1BsF,eAAgBrE,EAAUjB,OC/sBb,SAAS6gB,GACtBrU,EACAsP,EACAH,GAEA,IACIK,EADGzZ,EAAeuZ,EAAfvZ,KAAMtD,EAAS6c,EAAT7c,MAGb,OAAQsD,GACN,KAAKoZ,EAAiBmF,cACpB9E,EAAU,CACRtO,iBAAkBoO,EAAOrG,UAAY,EAAIqG,EAAOjO,OAGlD,MACF,KAAK8N,EAAiBoF,eACpB/E,EAAU,CACRtO,kBAAmB,GAGrB,MACF,KAAKiO,EAAiBqF,kBACtB,KAAKrF,EAAiBsF,mBACpBjF,EAAU,CACRjQ,QAASS,EAAMT,OACf2B,iBAAkBlB,EAAMT,QACnB,EACDgT,GAA0B9f,EAAOuN,EAAO,IAG9C,MACF,KAAKmP,EAAiBuF,iBACpBlF,EAAU,CACRjQ,QAAQ,EACR2B,iBAAkBqR,GAA0B9f,EAAOuN,EAAO,IAG5D,MACF,KAAKmP,EAAiBwF,kBACpBnF,EAAU,CACRjQ,QAAQ,GAGV,MACF,KAAK4P,EAAiByF,4BACpBpF,EAAU,CACRtO,iBAAkBzO,EAAMqO,eACtBrO,EAAMoO,MAAMyO,EAAOpO,kBACnBoO,EAAOpO,mBAEJ,EACDoO,EAAOpO,kBAGb,MACF,KAAKiO,EAAiB0F,sBACpBrF,EAAU,CACRlL,WAAYgL,EAAOhL,YAGrB,MACF,KAAK6K,EAAiB2F,cACpBtF,EAAU,CACRtO,iBAAkB4S,GAA2BrhB,GAC7C8M,OAAQwS,GAAgBtf,EAAO,UAC/B4R,aAAc0N,GAAgBtf,EAAO,gBACrC6R,WAAYyN,GAAgBtf,EAAO,eAGrC,MACF,QACE,MAAM,IAAIO,MAAM,8CAGpB,OAAA7B,EAAA,CAAA,EACK6O,EACAwP,EAEP,CCrDO,IAAIuF,GAAW,WAQlB,OAPAA,GAAWjkB,OAAOM,QAAU,SAAkBsE,GAC1C,IAAK,IAAI4C,EAAGhH,EAAI,EAAGkE,EAAIjE,UAAUC,OAAQF,EAAIkE,EAAGlE,IAE5C,IAAK,IAAIO,KADTyG,EAAI/G,UAAUD,GACOR,OAAOC,UAAUC,eAAeC,KAAKqH,EAAGzG,KAAI6D,EAAE7D,GAAKyG,EAAEzG,IAE9E,OAAO6D,CACV,EACMqf,GAAStjB,MAAMC,KAAMH,UAChC,EAmRkD,mBAApByjB,iBAAiCA,gBCtR1DD,GAAAA,GAAA,CAAA,EAAAf,KACHnT,MAAOpM,EAAUpB,MAAMF,WACvB2N,eAAgBrM,EAAUjB,OAGrB,IAAMyb,GACR8F,GAAAA,GAAA,CAAA,EAAAE,KACHnU,eAAc,WACZ,OAAO,CACT,IC3CWoU,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,GACYC,GAA0D,GAK1DC,GAA4C,GAQ5CC,GAA+D,sDAJF,oBADF,iBASP,qDALhE,yBAIA,sBAT2E,8BAHV,kBAFE,yCAjCK,8SCU1D,SAASC,GAAuB/V,EAAOsP,GAAQ,IAAAqE,EAExDnE,EADGzZ,EAAuBuZ,EAAvBvZ,KAAMtD,EAAiB6c,EAAjB7c,MAAOujB,EAAU1G,EAAV0G,OAGpB,OAAQjgB,GACN,KAAKoZ,GACHK,EAAU,CACRjQ,OAAQwS,GAAgBtf,EAAO,UAC/ByO,iBAAkB4S,GAA2BrhB,GAC7C4R,aAAc5R,EAAMoO,MAAMyO,EAAOjO,QAGnC,MACF,KAAK8N,GAED,IAAM8G,EAAgB3G,EAAOze,IACvByT,EAAgBtE,GAAAA,EAAMsE,WAAa2R,EAgBzCzG,EAAU,CACRlL,WAAAA,EACApD,iBFtCJ,SAA2CgV,GAS/C,IARA,IAAAC,EAASD,EAAAC,UACTjV,EAAgBgV,EAAAhV,iBAChBL,EAAKqV,EAAArV,MACL6D,EAAYwR,EAAAxR,aACZ5D,EAAcoV,EAAApV,eAERsV,EAAsBD,EAAUE,cAE7BhV,EAAQ,EAAGA,EAAQR,EAAMrP,OAAQ6P,IAAS,CAEjD,IAAMiV,GACHjV,EAAQH,GAAoBiV,EAAU3kB,OAAS,EAAI,EAAI,IAAMqP,EAAMrP,OAEhEiT,EAAO5D,EAAMyV,GAEnB,QACW/V,IAATkE,GACAC,EAAaD,GAAM4R,cAAcE,WAAWH,KAC3CtV,EAAe2D,EAAM6R,GAEtB,OAAOA,CAEV,CAED,OAAOpV,CACT,CEEiCsV,CAA2B,CAClDL,UAAW7R,EACXpD,kBARClB,EAAMT,QAAUS,EAAMqE,aACnB5R,EAAMoO,MAAMyR,WACV,SAAA7N,GAAI,OACFhS,EAAMqf,UAAUrN,KAAUhS,EAAMqf,UAAU9R,EAAMqE,aAAa,IAEjErE,EAAMkB,iBAIVL,MAAOpO,EAAMoO,MACb6D,aAAcjS,EAAMiS,aACpB5D,eAAgBrO,EAAMqO,iBAMtBvB,QAAQ,GAIZ,MACF,KAAK4P,GAYDK,EAAU,CACRtO,iBAXuBlB,EAAMT,OAC3BmB,EACEV,EAAMkB,iBACN,EACAzO,EAAMoO,MACNpO,EAAMqO,gBAERkV,GAAgC,MAAtBhW,EAAMqE,cACf,EACDkO,GAA0B9f,EAAOuN,EAAO,GAG1CT,QAAQ,GAIZ,MACF,KAAK4P,GACH,GAAInP,EAAMT,QAAUyW,EAClBxG,EAAUkE,GAAsBjhB,EAAOuN,EAAMkB,kBAAkB,QAU/DsO,EAAU,CACRtO,iBATuBlB,EAAMT,OAC3BmB,EACEV,EAAMkB,kBACL,EACDzO,EAAMoO,MACNpO,EAAMqO,gBAERyR,GAA0B9f,EAAOuN,GAAQ,GAG3CT,QAAQ,GAIZ,MAEF,KAAK4P,GACL,KAAKA,GACHK,EAAUkE,GAAsBjhB,EAAOuN,EAAMkB,kBAAkB,GAE/D,MACF,KAAKiO,GACHK,EAAU,CACRtO,iBAAkBC,EAChB,GACA,EACA1O,EAAMoO,MACNpO,EAAMqO,gBAERvB,QAAQ,GAGV,MACF,KAAK4P,GACHK,EAAU,CACRtO,iBAAkBC,EAChB1O,EAAMoO,MAAMrP,OAAS,GACrB,EACAiB,EAAMoO,MACNpO,EAAMqO,gBAERvB,QAAQ,GAGV,MACF,KAAK4P,GACHK,EAAU,CACRtO,iBAAkBR,EAChBV,EAAMkB,kBACL,GACDzO,EAAMoO,MACNpO,EAAMqO,iBAGV,MACF,KAAKqO,GACHK,EAAU,CACRtO,iBAAkBR,EAChBV,EAAMkB,iBACN,GACAzO,EAAMoO,MACNpO,EAAMqO,iBAGV,MACF,KAAKqO,GACHK,EAAU,CACRjQ,QAAQ,EACR2B,kBAAmB,GAGrB,MACF,KAAKiO,GACHK,EAAOre,EAAA,CACLoO,QAAQ,EACR2B,kBAAmB,GACflB,EAAMkB,kBAAoB,IACjB,OADkByS,EAC7BlhB,EAAMoO,YAAK,EAAX8S,EAAaniB,SAAU,CACrB6S,aAAc5R,EAAMoO,MAAMb,EAAMkB,oBAItC,MACF,KAAKiO,GACHK,EAAU,CACRnL,aAAciL,EAAOjL,cAGvB,MACF,QACE,OAAOoS,GAAczW,EAAOsP,EAAQH,IAGxC,OAAAhe,EAAA,CAAA,EACK6O,EACAwP,EAEP,kNC/IA,SAASkH,GAAUC,QAAS,IAATA,IAAAA,EAAY,CAAA,GAG7B,IAAMlkB,EAAKtB,KACN8d,GACA0H,GAEE7d,EAAqDrG,EAArDqG,eAAgBqE,EAAqC1K,EAArC0K,YAAakC,EAAwB5M,EAAxB4M,qBAEpCuX,EAA0BhF,GACxBmE,GACAtjB,EACA2f,GACAwB,IAJK5T,EAAK4W,EAAA,GAAEnF,EAAQmF,EAAA,GAMfrX,EAAsDS,EAAtDT,OAAQ2B,EAA8ClB,EAA9CkB,iBAAkBmD,EAA4BrE,EAA5BqE,aAAcC,EAActE,EAAdsE,WAEzCuS,EAAkBxG,SAAO,MACzB5F,EAAU4F,SAAO,MACjBiD,EAAWjD,SAAO,CAAA,GAElByG,EAAkBzG,SAAO,MAEzB0G,EAAa/G,EAAcvd,GAE3BukB,EAASnG,GAAa,CAC1B7Q,MAAAA,EACAvN,MAAAA,IAIIqR,EAAuBwN,eAC3B,SAAAjQ,GAAK,OAAIiS,EAASpU,QAAQ6X,EAAW1T,UAAUhC,MAC/C,CAAC0V,IAKHhE,GACE1T,EACAW,EACA,CAACT,EAAQ2B,EAAkBmD,EAAcC,GACzCnH,GAGF,IAAMsW,EAAkBJ,GAAkB,CACxCE,YAAa9I,EAAQvL,QACrBgC,iBAAAA,EACA3B,OAAAA,EACA+T,SAAAA,EACAxa,eAAAA,EACAgL,qBAAAA,IAGFiM,EAAAA,WAAU,WAUR,OARA+G,EAAgB5X,QAAU5B,GAAS,SAAA2Z,GACjCA,EAAc,CACZlhB,KFtCP,GEuCOuO,WAAY,IAEf,GAAE,KAGI,WACLwS,EAAgB5X,QAAQxB,SAE3B,GAAE,IAEHqS,EAAAA,WAAU,WACHzL,GAILwS,EAAgB5X,QAAQuS,EAC1B,GAAG,CAACA,EAAUnN,IAOdyL,EAAAA,WAAU,WACYmC,GAAgBzf,EAAO,WAExBokB,EAAgB3X,SACjC2X,EAAgB3X,QAAQiK,OAG3B,GAAE,IAEH,IAAM+N,EAAwB1E,GAC5BrV,EACA,CAAC0Z,EAAiBpM,GAClB6G,EAAAA,aACE,WACM0F,EAAO9X,QAAQc,MAAMT,QACvBkS,EAAS,CACP1b,KAAMoZ,IAGX,GACD,CAACsC,EAAUuF,KAGTG,EAAwBrE,KAK9B/C,EAAAA,WAAU,WACHxQ,IACH+T,EAASpU,QAAU,GAEvB,GAAG,CAACK,IAGJ,IAAM6X,EAA8BC,EAAAA,SAClC,WAAA,MAAO,CACLxQ,UAAS,SAACvI,GACRA,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,GACN6G,OAAQ1X,EAAM0X,QAEjB,EACD3O,QAAO,SAAC/I,GACNA,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,GACN6G,OAAQ1X,EAAM0X,QAEjB,EACDhO,KAAI,SAAC1J,GACHA,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,IAET,EACDjH,IAAG,SAAC5J,GACFA,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,IAET,EACDxH,OAAM,WACAqP,EAAO9X,QAAQc,MAAMT,QACvBkS,EAAS,CACP1b,KAAMoZ,IAGX,EACD5H,MAAK,SAACjJ,GACJA,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMihB,EAAO9X,QAAQc,MAAMT,OACvB4P,GF5L2D,GE+LlE,EACDmI,OAAM,SAAChZ,GACD0Y,EAAO9X,QAAQc,MAAMT,SACvBjB,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,KAGX,EACDoI,SAAQ,SAACjZ,GACH0Y,EAAO9X,QAAQc,MAAMT,SACvBjB,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,KAGX,EACD,IAAG,SAAC7Q,GACFA,EAAMyI,iBAEN,IAAMyQ,EAAeR,EAAO9X,QAAQc,MAE/BwX,EAAajY,OAKdiY,EAAalT,WACfmN,EAAS,CACP1b,KAAMoZ,GACNte,IAAK,MAGP4gB,EAAS,CAAC1b,KAAMoZ,KAVhBsC,EAAS,CAAC1b,KFxNqD,GEoOnE,EACD,GACD,CAAC0b,EAAUuF,IAIPlP,EAAawJ,EAAAA,aAAY,WAC7BG,EAAS,CACP1b,KFtMsE,IEwM1E,GAAG,CAAC0b,IACEvF,EAAYoF,EAAAA,aAAY,WAC5BG,EAAS,CACP1b,KFzMoE,IE2MxE,GAAG,CAAC0b,IACExF,EAAWqF,EAAAA,aAAY,WAC3BG,EAAS,CACP1b,KF/MkE,IEiNtE,GAAG,CAAC0b,IACEzN,EAAsBsN,eAC1B,SAAArJ,GACEwJ,EAAS,CACP1b,KFjNP,GEkNOmL,iBAAkB+G,GAEtB,GACA,CAACwJ,IAEGjN,EAAa8M,eACjB,SAAAmG,GACEhG,EAAS,CACP1b,KAAMoZ,GACN9K,aAAcoT,GAElB,GACA,CAAChG,IAEG7J,EAAQ0J,EAAAA,aAAY,WACxBG,EAAS,CACP1b,KF7N2D,IE+N/D,GAAG,CAAC0b,IACEiG,EAAgBpG,eACpB,SAAAqG,GACElG,EAAS,CACP1b,KFpOP,GEqOOuO,WAAYqT,GAEhB,GACA,CAAClG,IAGGnI,EAAgBgI,eACpB,SAAArL,GAAmC,IAAAlJ,WAAAkJ,EAAP,CAAE,EAAAA,EAA5BqC,EAAOvL,EAAPuL,QAAYsP,EAAUnnB,EAAAsM,EAAAwJ,IAKtB,OAAApV,EAAA,CACE8R,GAAI8T,EAAW5T,QACfoG,QAASwN,EAAW7G,eACpB5H,QAASpK,EAAqBoK,GAPP,WAAM,IAAAuP,SAC7BA,EAAAhB,EAAgB3X,UAAhB2Y,EAAyB1O,YAOtByO,EAEP,GACA,CAACb,IAEGpM,EAAe2G,EAAAA,aACnB,SAAApL,EAAAkC,GAGK,IAAAjC,EAAA7G,WAAA4G,EAF4C,CAAE,EAAAA,EAAhD4R,EAAYxY,EAAZwY,aAAYC,EAAAzY,EAAE+G,OAAAA,OAAS,IAAH0R,EAAG,MAAKA,EAAE9Y,EAAGK,EAAHL,IAAQqH,EAAI7V,EAAA6O,EAAAqJ,IAW3C,gBAX2CP,EACd,CAAA,EAAEA,GAA9B3B,iBAUDtV,IAAAgV,EAAA,CAAA,GACGE,GAASxH,EAAWI,GAAK,SAAAlG,GACxB0R,EAAQvL,QAAUnG,CACnB,IAACoN,EACFlD,GAAI8T,EAAW7T,OAAMiD,EACrBQ,KAAM,UAASR,EACf,mBACEG,GAAQA,EAAK,mBAAgB/F,KAAewW,EAAW5T,QAASgD,EAClE2R,aAAc5Z,EAAqB4Z,GAhBR,WAC3BrG,EAAS,CACP1b,KF/Q0D,IEiR9D,IAYwEoQ,GACnEG,EAEN,GACD,CAACmL,EAAU0F,EAAuBJ,IAE9B5O,EAAuBmJ,EAAAA,aAC3B,SAAA7H,EAAAmB,GAGK,IAAAE,EAAApB,WAAAD,EAFmE,CAAA,EAAEA,EAAvEf,EAAMgB,EAANhB,OAAQJ,EAAOoB,EAAPpB,QAAgBoB,EAAPnB,YAASC,EAASkB,EAATlB,UAASwP,EAAAtO,EAAErD,OAAAA,OAAS,IAAH2R,EAAG,MAAKA,EAAE/Y,EAAGyK,EAAHzK,IAAQqH,EAAI7V,EAAAiZ,EAAAG,cAAAe,EACrC,CAAA,EAAEA,GAA9BnE,iBAED,IAAMwR,EAAcjB,EAAO9X,QAAQc,MAwB7BkY,EAAW/mB,IAAA2Z,MACdzE,GAASxH,EAAWI,GAAK,SAAAkZ,GACxBtB,EAAgB3X,QAAUiZ,CAC3B,IAACrN,EACF,yBACEmN,EAAY1Y,QAAU0Y,EAAY/W,kBAAoB,EAClD6V,EAAW1T,UAAU4U,EAAY/W,kBACjC,GAAE4J,EACR,iBAAiBiM,EAAW7T,OAAM4H,EAClC,iBAAiBkM,EAAO9X,QAAQc,MAAMT,OAAMuL,EAC5C,iBAAiB,UAASA,EAC1B,mBACExE,GAAQA,EAAK,mBAAgB/F,EAAS,GAAMwW,EAAW5T,QAAS2H,EAClE7H,GAAI8T,EAAW7G,eAAcpF,EAC7BnE,KAAM,WAAUmE,EAChBsN,SAAU,EAACtN,EACXpC,OAAQxK,EAAqBwK,GAlCA,WACzBuP,EAAY1Y,SAAW2X,EAAsB7N,aAC/CoI,EAAS,CACP1b,KAAMoZ,IAGZ,IA4B8DrE,GACzDxE,GA6BL,OA1BKA,EAAK2C,WAQNiP,EAAY5P,QAAUpK,EACpBoK,GApD0B,WAC9BmJ,EAAS,CACP1b,KF5U+D,OEiY/DmiB,EAAY1P,UAAYtK,EACtBsK,GA5C4B,SAAAlK,GAChC,IAAMzN,EAAM2P,EAAkBlC,GAC1BzN,GAAOumB,EAA4BvmB,GACrCumB,EAA4BvmB,GAAKyN,GNzM3C,SAAgCzN,GAC9B,MAAO,UAAUwnB,KAAKxnB,EACxB,CMwMmBynB,CAAuBznB,IAChC4gB,EAAS,CACP1b,KAAMoZ,GACNte,IAAAA,QAkDCqnB,CACT,GACA,CACEzG,EACAsF,EACAC,EACAE,EACAC,EACAC,IAGEjM,EAAemG,eACnB,SAAAzG,GAWW,IAAA0N,EAAAC,WAAA3N,EAAP,CAAA,EAAEA,EAVE2F,EAAQgI,EAAd/T,KACOgM,EAAS+H,EAAhBnX,MACAkK,EAAWiN,EAAXjN,YACAjD,EAAOkQ,EAAPlQ,QACAkD,EAAWgN,EAAXhN,YACOgN,EAAPjQ,YAAOkQ,EAAAD,EACPnS,OAAAA,OAAS,IAAHoS,EAAG,MAAKA,EACJC,EAAYF,EAAtBvP,SACAhK,EAAGuZ,EAAHvZ,IACGqH,EAAI7V,EAAA+nB,EAAAvN,SAEc1K,IAAjBmY,GACFC,QAAQC,KACN,kIAIJ,IAAAC,EAAiD7B,EAAO9X,QAA1C+Y,EAAWY,EAAlB7Y,MAA2B8Y,EAAWD,EAAlBpmB,MAC3BsmB,EAAsBxI,EACpBC,EACAC,EACAqI,EAAYjY,MACZ,8CAJK4D,EAAIsU,EAAA,GAAE1X,EAAK0X,EAAA,GAMZ9P,EAAW6P,EAAYhY,eAAe2D,EAAMpD,GAwB5C2X,EAAS7nB,IAAAonB,MACZlS,GAASxH,EAAWI,GAAK,SAAAyI,GACpBA,IACF4L,EAASpU,QAAQ6X,EAAW1T,UAAUhC,IAAUqG,EAEpD,IAAE6Q,EACF,iBAAiBtP,EAAQsP,EACzB,iBAAiB9T,IAASwT,EAAY5T,aAAYkU,EAClDtV,GAAI8T,EAAW1T,UAAUhC,GAAMkX,EAC/B5R,KAAM,SAAQ4R,GACXjS,GAqBL,OAlBK2C,IAKD+P,EAAU1Q,QAAUpK,EAAqBoK,GA1BrB,WACtBmJ,EAAS,CACP1b,KAAMoZ,GACN9N,MAAAA,QA2BJ2X,EAAUzN,YAAcrN,EACtBqN,GA7C0B,WAExB2L,EAAsBtE,YACtBvR,IAAU4W,EAAY/W,mBAIxBuS,EAAgBvU,SAAU,EAC1BuS,EAAS,CACP1b,KF5ZwD,GE6ZxDsL,MAAAA,EACA4H,SAAAA,IAEJ,IAmCA+P,EAAUxN,YAActN,EACtBsN,GA7B0B,SAAAvW,GAAC,OAAIA,EAAE8R,gBAAgB,IAiC5CiS,CACT,GACA,CAAChC,EAAQD,EAAYG,EAAuBzD,EAAiBhC,IAG/D,MAAO,CAELtJ,qBAAAA,EACAmB,cAAAA,EACAqB,aAAAA,EACAQ,aAAAA,EAEArD,WAAAA,EACAmE,SAAAA,EACAC,UAAAA,EACAlI,oBAAAA,EACAQ,WAAAA,EACAoD,MAAAA,EACA8P,cAAAA,EAEAxW,iBAAAA,EACA3B,OAAAA,EACA8E,aAAAA,EACAC,WAAAA,EAEJ,CA3eAoS,GAAUvH,iBAAmBA,GCzBtB,IAAM8J,GAEZ,EACYC,GAAkE,EAClEC,GAA+D,EAC/DC,GAA2D,EAC3DC,GAAyD,EACzDC,GAAgE,EAChEC,GAEZ,EACYC,GAA6D,EAC7DC,GAAgD,EAChDC,GAA4C,EAC5CC,GAA8C,GAK9C9D,GAA4C,GAU5CC,GAA+D,GAK/D8D,GAEZ,2FAXyE,oBADF,iBASP,qDALhE,yBAIA,sBAT2E,wPALV,kBAFE,qBAKK,KCXlE,SAASxH,GAAgB3f,GAC9B,IAAMonB,EAAeC,GAAsBrnB,GACpC4R,EAAgBwV,EAAhBxV,aACFC,EAAcuV,EAAdvV,WAYL,MATiB,KAAfA,GACAD,QAC4B9D,IAA5B9N,EAAMsnB,wBACsBxZ,IAA5B9N,EAAMma,wBACerM,IAArB9N,EAAM6R,aAENA,EAAa7R,EAAMiS,aAAaL,IAGlClT,KACK0oB,EAAY,CACfvV,WAAAA,GAEJ,CAEenT,EAAA,CAAA,EACV6iB,GAAuB,CAC1BnT,MAAOpM,EAAUpB,MAAMF,WACvB2N,eAAgBrM,EAAUjB,KAC1B8Q,WAAY7P,EAAUd,OACtBomB,kBAAmBtlB,EAAUd,OAC7BiZ,kBAAmBnY,EAAUd,OAC7ByP,QAAS3O,EAAUd,OACnBwR,mBAAoB1Q,EAAUjB,OAsEzB,IAAMyb,GAAY9d,KACpB6oB,GAAkB,CACrBlZ,eAAc,WACZ,OAAO,CACT,ICxGa,SAASmZ,GAA4Bja,EAAOsP,GAAQ,IAAAqE,EAE7DnE,EADGzZ,EAAuBuZ,EAAvBvZ,KAAMtD,EAAiB6c,EAAjB7c,MAAOujB,EAAU1G,EAAV0G,OAGpB,OAAQjgB,GACN,KAAKoZ,GACHK,EAAU,CACRjQ,OAAQwS,GAAgBtf,EAAO,UAC/ByO,iBAAkB4S,GAA2BrhB,GAC7C4R,aAAc5R,EAAMoO,MAAMyO,EAAOjO,OACjCiD,WAAY7R,EAAMiS,aAAajS,EAAMoO,MAAMyO,EAAOjO,SAGpD,MACF,KAAK8N,GAEDK,EADExP,EAAMT,OACE,CACR2B,iBAAkBR,EAChBV,EAAMkB,iBACN,EACAzO,EAAMoO,MACNpO,EAAMqO,gBACN,IAIM,CACRI,iBACE8U,GAAgC,MAAtBhW,EAAMqE,cACX,EACDkO,GAA0B9f,EAAOuN,EAAO,GAC9CT,OAAQ9M,EAAMoO,MAAMrP,QAAU,GAGlC,MACF,KAAK2d,GAGCK,EAFAxP,EAAMT,OACJyW,EACQtC,GAAsBjhB,EAAOuN,EAAMkB,kBAEnC,CACRA,iBAAkBR,EAChBV,EAAMkB,kBACL,EACDzO,EAAMoO,MACNpO,EAAMqO,gBACN,IAKI,CACRI,iBAAkBqR,GAA0B9f,EAAOuN,GAAQ,GAC3DT,OAAQ9M,EAAMoO,MAAMrP,QAAU,GAGlC,MACF,KAAK2d,GACHK,EAAUkE,GAAsBjhB,EAAOuN,EAAMkB,kBAE7C,MACF,KAAKiO,GACHK,EAAOre,EAAA,CACLoO,QAAQ,EACR2B,kBAAmB,IACdlB,EAAMT,QAAU,CACnB8E,aAAc,KACdC,WAAY,KAGhB,MACF,KAAK6K,GACHK,EAAU,CACRtO,iBAAkBR,EAChBV,EAAMkB,kBACL,GACDzO,EAAMoO,MACNpO,EAAMqO,gBACN,IAGJ,MACF,KAAKqO,GACHK,EAAU,CACRtO,iBAAkBR,EAChBV,EAAMkB,iBACN,GACAzO,EAAMoO,MACNpO,EAAMqO,gBACN,IAGJ,MACF,KAAKqO,GACHK,EAAU,CACRtO,iBAAkBC,EAChB,GACA,EACA1O,EAAMoO,MACNpO,EAAMqO,iBAGV,MACF,KAAKqO,GACHK,EAAU,CACRtO,iBAAkBC,EAChB1O,EAAMoO,MAAMrP,OAAS,GACrB,EACAiB,EAAMoO,MACNpO,EAAMqO,iBAGV,MACF,KAAKqO,GACHK,EAAOre,EAAA,CACLoO,QAAQ,EACR2B,kBAAmB,GACflB,EAAMkB,kBAAoB,IACjB,OADkByS,EAC7BlhB,EAAMoO,YAAK,EAAX8S,EAAaniB,SACb8d,EAAO9K,YAAc,CACnBH,aAAc5R,EAAMoO,MAAMb,EAAMkB,kBAChCoD,WAAY7R,EAAMiS,aAAajS,EAAMoO,MAAMb,EAAMkB,qBAGvD,MACF,KAAKiO,GACHK,EAAU,CACRjQ,QAAQ,EACR2B,iBAAkB4S,GAA2BrhB,GAC7C6R,WAAYgL,EAAOhL,YAErB,MACF,KAAK6K,GACHK,EAAU,CACRjQ,QAASS,EAAMT,OACf2B,iBAAkBlB,EAAMT,QACnB,EACDgT,GAA0B9f,EAAOuN,EAAO,IAE9C,MACF,KAAKmP,GACHK,EAAU,CACRnL,aAAciL,EAAOjL,aACrBC,WAAY7R,EAAMiS,aAAa4K,EAAOjL,eAExC,MACF,KAAK8K,GACHK,EAAU,CACRlL,WAAYgL,EAAOhL,YAErB,MACF,QACE,OAAOmS,GAAczW,EAAOsP,EAAQH,IAGxC,OAAAhe,EAAA,CAAA,EACK6O,EACAwP,EAEP,qQC/IA,SAAS0K,GAAYvD,QAAS,IAATA,IAAAA,EAAY,CAAA,GAG/B,IAAMlkB,EAAKtB,KACN8d,GACA0H,GAEE9V,EAA4DpO,EAA5DoO,MAAO/H,EAAqDrG,EAArDqG,eAAgBqE,EAAqC1K,EAArC0K,YAAakC,EAAwB5M,EAAxB4M,qBAE3CuX,EFqBK,SACL5F,EACAve,EACAwe,EACAC,GAEA,IAAMiJ,EAA0B9J,EAAAA,SAChCwB,EAA0Bd,GACxBC,EACAve,EACAwe,EACAC,GAJKlR,EAAK6R,EAAA,GAAEJ,EAAQI,EAAA,GAMhBqB,EAAiBC,KA6BvB,OA3BApD,EAAAA,WAAU,WACHzP,EAAiB7N,EAAO,kBAK1BygB,GAGCzgB,EAAMqf,UAAUrf,EAAM4R,gBACtB5R,EAAMqf,UAAUqI,EAAwBjb,UAGxCuS,EAAS,CACP1b,KAAM6jB,GACNtV,WAAY7R,EAAMiS,aAAajS,EAAM4R,gBAK3C8V,EAAwBjb,QACtBc,EAAMqE,eAAiB8V,EAAwBjb,QAC3CzM,EAAM4R,aACNrE,EAAMqE,aAEb,GAAE,CAACrE,EAAMqE,aAAc5R,EAAM4R,eAEvB,CAACnE,EAASF,EAAOvN,GAAQgf,EAClC,CEhE4BG,CACxBqI,GACAxnB,EACA2f,GACAwB,IAJK5T,EAAK4W,EAAA,GAAEnF,EAAQmF,EAAA,GAMfrX,EAAsDS,EAAtDT,OAAQ2B,EAA8ClB,EAA9CkB,iBAAkBmD,EAA4BrE,EAA5BqE,aAAcC,EAActE,EAAdsE,WAGzCmG,EAAU4F,SAAO,MACjBiD,EAAWjD,SAAO,CAAA,GAClB+J,EAAW/J,SAAO,MAClBwG,EAAkBxG,SAAO,MACzB6C,EAAiBC,KAGjB4D,EAAa/G,EAAcvd,GAE3B4nB,EAAyBhK,EAAAA,SAEzB2G,EAASnG,GAAa,CAAC7Q,MAAAA,EAAOvN,MAAAA,IAE9BqR,EAAuBwN,eAC3B,SAAAjQ,GAAK,OAAIiS,EAASpU,QAAQ6X,EAAW1T,UAAUhC,MAC/C,CAAC0V,IAKHhE,GACE1T,EACAW,EACA,CAACT,EAAQ2B,EAAkBmD,EAAcC,GACzCnH,GAGF,IAAMsW,EAAkBJ,GAAkB,CACxCE,YAAa9I,EAAQvL,QACrBgC,iBAAAA,EACA3B,OAAAA,EACA+T,SAAAA,EACAxa,eAAAA,EACAgL,qBAAAA,IAOFiM,EAAAA,WAAU,WACYmC,GAAgBzf,EAAO,WAExB2nB,EAASlb,SAC1Bkb,EAASlb,QAAQiK,OAGpB,GAAE,IACH4G,EAAAA,WAAU,WACHmD,IACHmH,EAAuBnb,QAAU2B,EAAMrP,OAE3C,IACA,IAAM0lB,EAAwB1E,GAC5BrV,EACA,CAAC0Z,EAAiBpM,EAAS2P,GAC3B9I,EAAAA,aACE,WACM0F,EAAO9X,QAAQc,MAAMT,QACvBkS,EAAS,CACP1b,KAAMoZ,GACN3K,YAAY,GAGjB,GACD,CAACiN,EAAUuF,KAGTG,EAAwBrE,KAK9B/C,EAAAA,WAAU,WACHxQ,IACH+T,EAASpU,QAAU,GAEvB,GAAG,CAACK,IAEJwQ,EAAAA,WAAU,WAAM,IAAAuK,EACT/a,GAAWpC,MAAAA,GAAAA,EAAalE,UAAqBqhB,MAARF,GAAAE,OAAQA,EAARF,EAAUlb,UAAVob,EAAmBnR,OAIzDhM,EAAYlE,SAASyI,gBAAkB0Y,EAASlb,SAClDkb,EAASlb,QAAQiK,OAErB,GAAG,CAAC5J,EAAQpC,IAGZ,IAAM4K,EAAuBsP,EAAAA,SAC3B,WAAA,MAAO,CACLxQ,UAAS,SAACvI,GACRA,EAAMyI,iBACN0K,EAAS,CACP1b,KAAMoZ,GACN6G,OAAQ1X,EAAM0X,QAEjB,EACD3O,QAAO,SAAC/I,GACNA,EAAMyI,iBACN0K,EAAS,CACP1b,KAAMoZ,GACN6G,OAAQ1X,EAAM0X,QAEjB,EACDhO,KAAI,SAAC1J,GACE0Y,EAAO9X,QAAQc,MAAMT,SAI1BjB,EAAMyI,iBACN0K,EAAS,CACP1b,KAAMoZ,KAET,EACDjH,IAAG,SAAC5J,GACG0Y,EAAO9X,QAAQc,MAAMT,SAI1BjB,EAAMyI,iBACN0K,EAAS,CACP1b,KAAMoZ,KAET,EACDxH,OAAM,SAACrJ,GACL,IAAM2Z,EAAcjB,EAAO9X,QAAQc,OAEjCiY,EAAY1Y,QACZ0Y,EAAY3T,YACZ2T,EAAY5T,cACZ4T,EAAY/W,kBAAoB,KAEhC5C,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,KAGX,EACD5H,MAAK,SAACjJ,GACgB0Y,EAAO9X,QAAQc,MAGpBT,QACG,MAAhBjB,EAAMkJ,QAKRlJ,EAAMyI,iBACN0K,EAAS,CACP1b,KAAMoZ,KAET,EACDmI,OAAM,SAAChZ,GACD0Y,EAAO9X,QAAQc,MAAMT,SACvBjB,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,KAGX,EACDoI,SAAQ,SAACjZ,GACH0Y,EAAO9X,QAAQc,MAAMT,SACvBjB,EAAMyI,iBAEN0K,EAAS,CACP1b,KAAMoZ,KAGZ,EACD,GACD,CAACsC,EAAUuF,IAIP1N,EAAgBgI,eACpB,SAAAsG,GAAU,OAAAzmB,EAAA,CACR8R,GAAI8T,EAAW5T,QACfoG,QAASwN,EAAW3T,SACjBwU,EAAU,GAEf,CAACb,IAEGpM,EAAe2G,EAAAA,aACnB,SAAArL,EAAAC,GAGK,IAAAC,EAAApJ,WAAAkJ,EAF4C,CAAE,EAAAA,EAAhD6R,EAAY/a,EAAZ+a,aAAY1R,EAAArJ,EAAEsJ,OAAAA,OAAS,IAAHD,EAAG,MAAKA,EAAEnH,EAAGlC,EAAHkC,IAAQqH,EAAI7V,EAAAsM,EAAAwJ,IAI3C,gBAJ2CL,EACd,CAAA,EAAEA,GAA9BO,iBAGDtV,IAAAgV,EAAA,CAAA,GACGE,GAASxH,EAAWI,GAAK,SAAAlG,GACxB0R,EAAQvL,QAAUnG,CACnB,IAACoN,EACFlD,GAAI8T,EAAW7T,OAAMiD,EACrBQ,KAAM,UAASR,EACf,mBACEG,GAAQA,EAAK,mBAAgB/F,KAAewW,EAAW5T,QAASgD,EAClE2R,aAAc5Z,EAAqB4Z,GAAc,WAC/CrG,EAAS,CACP1b,KHtOwD,IGwO5D,IAAEoQ,GACCG,EAEN,GACD,CAACmL,EAAU0F,EAAuBJ,IAG9B5L,EAAemG,eACnB,SAAAlJ,GAWW,IAAA0C,EAAApB,EAAArB,WAAAD,EAAP,CAAA,EAAEA,EAVEoI,EAAQnI,EAAd5D,KACOgM,EAASpI,EAAhBhH,MAAKkZ,EAAAlS,EACLhC,OAAAA,OAAS,IAAHkU,EAAG,MAAKA,EACdtb,EAAGoJ,EAAHpJ,IACAsM,EAAWlD,EAAXkD,YACAC,EAAWnD,EAAXmD,YACAlD,EAAOD,EAAPC,QACOD,EAAPE,YACUmQ,EAAYrQ,EAAtBY,SACG3C,EAAI7V,EAAA4X,EAAAM,SAEcpI,IAAjBmY,GACFC,QAAQC,KACN,oIAIJ,IAAAC,EAAiD7B,EAAO9X,QAA1C4Z,EAAWD,EAAlBpmB,MAA2BwlB,EAAWY,EAAlB7Y,MAC3B+Y,EAAsBxI,EACpBC,EACAC,EACAqI,EAAYjY,MACZ,8CAJK4D,EAAIsU,EAAA,GAAE1X,EAAK0X,EAAA,GAMZ9P,EAAW6P,EAAYhY,eAAe2D,EAAMpD,GAK5CsK,EAEFrD,EA0BJ,OAAAnX,IAAA2Z,EAAA,CAAA,GACGzE,GAASxH,EAAWI,GAAK,SAAAyI,GACpBA,IACF4L,EAASpU,QAAQ6X,EAAW1T,UAAUhC,IAAUqG,EAEnD,IAACoD,EACF,iBAAiB7B,EAAQ6B,EACzB,iBAAiBzJ,IAAU4W,EAAY/W,iBAAgB4J,EACvD7H,GAAI8T,EAAW1T,UAAUhC,GAAMyJ,EAC/BnE,KAAM,SAAQmE,IACT7B,KAAQS,EAAAA,CAAAA,GACC,QAAGxL,EACbyN,GApBkB,WACtB8F,EAAS,CACP1b,KAAMoZ,GACN9N,MAAAA,OAmBCqI,GACF,CACD6B,YAAarN,EAAqBqN,GAxCR,WAExB2L,EAAsBtE,YACtBvR,IAAU4W,EAAY/W,mBAKxBuS,EAAgBvU,SAAU,EAE1BuS,EAAS,CACP1b,KH3RwD,GG4RxDsL,MAAAA,EACA4H,SAAAA,IAEJ,IA0BEuC,YAAatN,EAAqBsN,GAnBR,SAAAvW,GAAC,OAAIA,EAAE8R,qBAoB9BT,EAEP,GAEA,CAACmL,EAAUsF,EAAYC,EAAQE,EAAuBzD,IAGlDtL,EAAuBmJ,eAC3B,SAAA7H,GAA2D,IAAA8O,EAAAxN,WAAAtB,EAAP,CAAA,EAAEA,EAApDnB,EAAOyC,EAAPzC,QAAgByC,EAAPxC,YAAOyC,EAAAD,EAAE1E,OAAAA,OAAS,IAAH2E,EAAG,MAAKA,EAAE/L,EAAG8L,EAAH9L,IAAQqH,EAAI7V,EAAAsa,EAAAlB,IACxCoO,EAAcjB,EAAO9X,QAAQc,MAOnC,OAAA7O,IAAAonB,EAAA,CAAA,GACGlS,GAASxH,EAAWI,GAAK,SAAAkZ,GACxBtB,EAAgB3X,QAAUiZ,CAC3B,IAACI,EACF,iBAAiBxB,EAAW7T,OAAMqV,EAClC,iBAAiBN,EAAY1Y,OAAMgZ,EACnCtV,GAAI8T,EAAW7G,eAAcqI,EAC7BH,UAAW,EAACG,IACPjS,EAAK2C,UAAQ9X,EAKZ,CAAA,EAAA,CACEmX,QAASpK,EAAqBoK,GApBR,WAC9BmJ,EAAS,CACP1b,KHnU+D,UGwV9DuQ,EAEN,GACD,CAACmL,EAAUuF,EAAQD,IAEfvN,EAAgB8H,EAAAA,aACpB,SAAA1G,EAAAC,GAaK,IAAA2P,EAAAhC,WAAA5N,EAFC,CAAA,EAAEA,EATJpC,EAASgQ,EAAThQ,UACA5C,EAAQ4S,EAAR5S,SACA+D,EAAO6O,EAAP7O,QACAjB,EAAM8P,EAAN9P,OACY8P,EAAZ5O,iBACAtB,EAAOkQ,EAAPlQ,QAAOmQ,EAAAD,EACPnS,OAAAA,OAAS,IAAHoS,EAAG,MAAKA,EACdxZ,EAAGuZ,EAAHvZ,IACGqH,EAAI7V,EAAA+nB,EAAAvN,cAAAJ,EAEoB,CAAA,EAAEA,GAA9BpE,iBAID,IA4CoBsD,EA5CdkO,EAAcjB,EAAO9X,QAAQc,MA0C/B8J,EAAgB,CAAA,EAEfxD,EAAK2C,YACKc,EAAAA,CAAAA,GACC,SAAG7L,EACb0H,EACA+D,GAzCoB,SAAArL,GACxBmT,EAAS,CACP1b,KAAMoZ,GACN7K,WAGMhG,EAAM1N,OAAOyZ,WAqClBN,EACDvB,UAAWtK,EAAqBsK,GAlDT,SAAAlK,GACzB,IAAMzN,EAAM2P,EAAkBlC,GAC1BzN,GAAOkX,EAAqBlX,IAC9BkX,EAAqBlX,GAAKyN,MA+CoCyL,EAC9DrB,OAAQxK,EAAqBwK,GApCT,SAAApK,GAEtB,GACa,MAAXnB,GAAAA,EAAalE,UACbgf,EAAY1Y,SACX2X,EAAsB7N,YACvB,CACA,IAAMoR,EACoB,OAAxBnc,EAAMoc,eACNvd,EAAYlE,SAASyI,gBAAkBvE,EAAYlE,SAASY,KAE9D4X,EAAS,CACP1b,KAAMoZ,GACN3K,YAAaiW,GAEjB,KAqBuD1Q,EACrDzB,QAASpK,EAAqBoK,GAnBT,WACvBmJ,EAAS,CACP1b,KAAMoZ,QASRrF,EAQ0DC,GAoB5D,OAAA5Y,IAAAqpB,EAAA,CAAA,GACGnU,GAASxH,EAAWI,GAAK,SAAA0b,GACxBP,EAASlb,QAAUyb,CACpB,IAACH,EACF,yBACEvC,EAAY1Y,QAAU0Y,EAAY/W,kBAAoB,EAClD6V,EAAW1T,UAAU4U,EAAY/W,kBACjC,GAAEsZ,EACR,qBAAqB,OAAMA,EAC3B,iBAAiBzD,EAAW7T,OAAMsX,EAClC,iBAAiBvC,EAAY1Y,OAAMib,EACnC,mBACElU,GAAQA,EAAK,mBAAgB/F,EAAYwW,EAAW5T,QAAOqX,EAG7DpQ,aAAc,MAAKoQ,EACnBvX,GAAI8T,EAAW3T,QAAOoX,EACtB7T,KAAM,WAAU6T,EAChBnQ,MAAO4N,EAAY3T,WAAUkW,GAC1B1Q,EACAxD,EAEP,GACA,CACEmL,EACAsF,EACA5Z,EACA4K,EACAiP,EACAE,EACAC,IAKErP,EAAawJ,EAAAA,aAAY,WAC7BG,EAAS,CACP1b,KH1dsE,IG4d1E,GAAG,CAAC0b,IACEvF,EAAYoF,EAAAA,aAAY,WAC5BG,EAAS,CACP1b,KH7doE,IG+dxE,GAAG,CAAC0b,IACExF,EAAWqF,EAAAA,aAAY,WAC3BG,EAAS,CACP1b,KHnekE,IGqetE,GAAG,CAAC0b,IACEzN,EAAsBsN,eAC1B,SAAArJ,GACEwJ,EAAS,CACP1b,KHreP,GGseOmL,iBAAkB+G,GAEtB,GACA,CAACwJ,IAEGjN,EAAa8M,eACjB,SAAAmG,GACEhG,EAAS,CACP1b,KAAMoZ,GACN9K,aAAcoT,GAElB,GACA,CAAChG,IAiBH,MAAO,CAELtG,aAAAA,EACA7B,cAAAA,EACAqB,aAAAA,EACAnB,cAAAA,EACArB,qBAAAA,EAEAL,WAAAA,EACAmE,SAAAA,EACAC,UAAAA,EACAlI,oBAAAA,EACA0T,cA3BoBpG,eACpB,SAAAqG,GACElG,EAAS,CACP1b,KHnfP,GGofOuO,WAAYqT,GAEhB,GACA,CAAClG,IAqBDjN,WAAAA,EACAoD,MApBY0J,EAAAA,aAAY,WACxBG,EAAS,CACP1b,KH1f2D,IG4f/D,GAAG,CAAC0b,IAkBFvQ,iBAAAA,EACA3B,OAAAA,EACA8E,aAAAA,EACAC,WAAAA,EAEJ,CA7hBA4V,GAAY/K,iBAAmBA,GChB/B,IAAM8C,GAAqB,CACzB2I,aAAc,EACdC,cAAe,IAYjB,SAAS3I,GAAgBzf,EAAOuf,GAC9B,OAAO8I,GAAsBroB,EAAOuf,EAASC,GAC/C,CAUA,SAASF,GAAgBtf,EAAOuf,GAC9B,OAAO+I,GAAsBtoB,EAAOuf,EAASC,GAC/C,CASA,SAASG,GAAgB3f,GAIvB,MAAO,CACLmoB,YAJkB1I,GAAgBzf,EAAO,eAKzCooB,cAJoB3I,GAAgBzf,EAAO,iBAM/C,CAWA,SAASuoB,GAA4B1c,GACnC,GAAIA,EAAM2I,UAAY3I,EAAM2c,SAAW3c,EAAM4c,SAAW5c,EAAM0X,OAC5D,OAAO,EAGT,IAAMjiB,EAAUuK,EAAM1N,OAEtB,QACEmD,aAAmBonB,kBACD,KAAlBpnB,EAAQsW,QAEoB,IAA3BtW,EAAQqnB,gBAAiD,IAAzBrnB,EAAQsnB,YAM7C,CAUA,SAASnK,GAAa7Q,EAAWkP,GAC/B,OACElP,EAAUwa,gBAAkBtL,EAASsL,eACrCxa,EAAUua,cAAgBrL,EAASqL,WAEvC,CAMiBnmB,EAAUpB,MACHoB,EAAUpB,MACVoB,EAAUpB,MACVoB,EAAUjB,KACnBiB,EAAUhB,OACHgB,EAAUhB,OACVgB,EAAUhB,OACTgB,EAAUjB,KACRiB,EAAUjB,KACdiB,EAAUd,OACNc,EAAUd,OAG5B,IAAMsb,GAAe,CAC1B6C,UAAWkI,GAAmBlI,UAC9BtM,aAAcwU,GAAmBxU,aACjCrI,YAAa6c,GAAmB7c,YAChCme,kBAAmB,aACnBC,sBAAuB,aCvHZC,GAA6D,EAC7DC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,EAEYC,GAEZ,EACYC,GAEZ,EACYC,GAAoD,EAEpDC,GAEZ,EACYC,GAEZ,EACYC,GAEZ,GACYC,GAEZ,GACYrH,GAAoD,wZChClD,SAASsH,GAAkCpc,EAAOsP,GAC/D,IAEIE,EAFGzZ,EAAoCuZ,EAApCvZ,KAAMsL,EAA8BiO,EAA9BjO,MAAO5O,EAAuB6c,EAAvB7c,MAAO4R,EAAgBiL,EAAhBjL,aACpBuW,EAA8B5a,EAA9B4a,YAAaC,EAAiB7a,EAAjB6a,cAGpB,OAAQ9kB,GACN,KAAKoZ,GACHK,EAAU,CACRoL,YAAavZ,GAGf,MACF,KAAK8N,GACHK,EAAU,CACRoL,YAAaA,EAAc,EAAI,EAAI,EAAIA,EAAc,GAGvD,MACF,KAAKzL,GACHK,EAAU,CACRoL,YACEA,EAAc,GAAKC,EAAcrpB,QAAU,EAAIopB,EAAc,GAGjE,MACF,KAAKzL,GACL,KAAKA,GACH,GAAIyL,EAAc,EAChB,MAGF,IAAIyB,EAAiBzB,EAEQ,IAAzBC,EAAcrpB,OAChB6qB,GAAkB,EACTzB,IAAgBC,EAAcrpB,OAAS,IAChD6qB,EAAiBxB,EAAcrpB,OAAS,GAG1Cge,EAAOre,EAAA,CACL0pB,iBAAanc,OACRmc,EAAclK,MAAM,EAAGiK,GACvBC,EAAclK,MAAMiK,EAAc,KAEpC,CAACA,YAAayB,IAGnB,MAGF,KAAKlN,GACHK,EAAU,CACRoL,YAAaC,EAAcrpB,OAAS,GAEtC,MACF,KAAK2d,GACHK,EAAU,CACRqL,cAAeA,EAAclK,MAAM,EAAGkK,EAAcrpB,OAAS,IAE/D,MACF,KAAK2d,GACHK,EAAU,CACRqL,cAAanc,GAAAA,OAAMmc,GAAexW,KAEpC,MACF,KAAK8K,GACHK,EAAU,CACRoL,aAAc,GAEhB,MACF,KAAKzL,GACH,IAAIkN,EAAiBzB,EACf0B,EAAoBzB,EAAcvI,WACtC,SAAA7N,GAAI,OAAIhS,EAAMqf,UAAUrN,KAAUhS,EAAMqf,UAAUzN,EAAa,IAGjE,GAAIiY,EAAoB,EACtB,MAG2B,IAAzBzB,EAAcrpB,OAChB6qB,GAAkB,EACTC,IAAsBzB,EAAcrpB,OAAS,IACtD6qB,EAAiBxB,EAAcrpB,OAAS,GAG1Cge,EAAU,CACRqL,cAAa,GAAAnc,OACRmc,EAAclK,MAAM,EAAG2L,GACvBzB,EAAclK,MAAM2L,EAAoB,IAE7C1B,YAAayB,GAGf,MAEF,KAAKlN,GAEHK,EAAU,CACRqL,cAFwCvL,EAAnCuL,eAIP,MAEF,KAAK1L,GAEHK,EAAU,CACRoL,YAFoCtL,EAA/BsL,aAIP,MAEF,KAAKzL,GACHK,EAAU,CACRoL,YAAa7I,GAAgBtf,EAAO,eACpCooB,cAAe9I,GAAgBtf,EAAO,kBAExC,MACF,QACE,MAAM,IAAIO,MAAM,8CAGpB,OAAA7B,EAAA,CAAA,EACK6O,EACAwP,EAEP,mICzGA,SAAS+M,GAAqB5F,QAAS,IAATA,IAAAA,EAAY,CAAA,GAGxC,IAAMlkB,EAAKtB,KACN8d,GACA0H,GAGHtX,EAIE5M,EAJF4M,qBACAlC,EAGE1K,EAHF0K,YACAme,EAEE7oB,EAFF6oB,kBACAC,EACE9oB,EADF8oB,sBAIF3E,EAA0BhF,GACxBwK,GACA3pB,EACA2f,GACAlB,IAJKlR,EAAK4W,EAAA,GAAEnF,EAAQmF,EAAA,GAMfgE,EAA8B5a,EAA9B4a,YAAaC,EAAiB7a,EAAjB6a,cAGd3H,EAAiBC,KACjBqJ,EAAcnM,SAAO,MACrBoM,EAAmBpM,EAAAA,SACzBoM,EAAiBvd,QAAU,GAC3B,IAAM8X,EAASnG,GAAa,CAAC7Q,MAAAA,EAAOvN,MAAAA,IAIpCsgB,GACE1T,EACAW,EACA,CAAC4a,EAAaC,GACd1d,GAGF4S,EAAAA,WAAU,WACJmD,KAIiB,IAAjB0H,GAAsB4B,EAAYtd,QACpCsd,EAAYtd,QAAQiK,QACXsT,EAAiBvd,QAAQ0b,IAClC6B,EAAiBvd,QAAQ0b,GAAazR,QAG1C,GAAG,CAACyR,IAKJ,IAAMzD,EAAwBrE,KAGxB4J,EAA8BrF,EAAAA,SAClC,WAAA,IAAAta,EAAA,OAAAA,EAAA,CAAA,GACGwe,GAAyB,WACxB9J,EAAS,CACP1b,KAAMoZ,IAEV,EAACpS,EACAue,GAAqB,WACpB7J,EAAS,CACP1b,KAAMoZ,IAEV,EAACpS,EACD4f,OAAM,WACJlL,EAAS,CACP1b,KAAMoZ,IAEV,EAACpS,EACD6f,UAAS,WACPnL,EAAS,CACP1b,KAAMoZ,IAET,EAAApS,CACD,GACF,CAAC0U,EAAU6J,EAAmBC,IAE1BsB,EAA0BxF,EAAAA,SAC9B,WAAA,IAAA/X,EAAA,OAAAA,EAAAA,CAAAA,GACGic,GAAqB,SAAEjd,GAClB0c,GAA4B1c,IAC9BmT,EAAS,CACP1b,KAAMoZ,IAGX,EAAA7P,EACDsd,UAASA,SAACte,GACJ0c,GAA4B1c,IAC9BmT,EAAS,CACP1b,KAAMoZ,IAGX,EAAA7P,CAAA,GAEH,CAACmS,EAAU8J,IA4Ib,MAAO,CACLuB,qBAzI2BxL,eAC3B,SAAArL,GAQW,IAAAE,EAAAkC,WAAApC,EAAP,CAAE,EAAAA,EAAAsU,EAAAlS,EAPJhC,OAAAA,OAAS,IAAHkU,EAAG,MAAKA,EACdtb,EAAGoJ,EAAHpJ,IACAqJ,EAAOD,EAAPC,QACAE,EAASH,EAATG,UACcuU,EAAgB1U,EAA9BhE,aACOoM,EAASpI,EAAhBhH,MACGiF,EAAI7V,EAAA4X,EAAA9B,IAEO0R,EAAejB,EAAO9X,QAA7Bc,MACEqB,EAASkP,EAChBwM,EACAtM,EACAwH,EAAY4C,cACZ,sDAJY,GAMRmC,EAAc3b,GAAS,GAAKA,IAAU4W,EAAY2C,YAexD,OAAAzpB,IAAAgV,EAAA,CAAA,GACGE,GAASxH,EAAWI,GAAK,SAAAge,GACpBA,GACFR,EAAiBvd,QAAQtF,KAAKqjB,EAEjC,IAAC9W,EACFiS,SAAU4E,EAAc,GAAK,EAAC7W,EAC9BmC,QAASpK,EAAqBoK,GApBA,WAC9BmJ,EAAS,CACP1b,KAAMoZ,GACN9N,MAAAA,GAEJ,IAeiE8E,EAC/DqC,UAAWtK,EAAqBsK,GAfA,SAAAlK,GAChC,IAAMzN,EAAM2P,EAAkBlC,GAC1BzN,GAAO6rB,EAA4B7rB,IACrC6rB,EAA4B7rB,GAAKyN,EAErC,IAUuE6H,GAClEG,EAEN,GACD,CAACmL,EAAUuF,EAAQ0F,IA8FnBQ,iBA5FuB5L,EAAAA,aACvB,SAAApL,EAAAkC,GAUK,IAAA0C,EAAApB,WAAAxD,EAFC,CAAE,EAAAA,EAAA8R,EAAAtO,EANJrD,OAAAA,OAAS,IAAH2R,EAAG,MAAKA,EACd/Y,EAAGyK,EAAHzK,IACAuJ,EAASkB,EAATlB,UACAF,EAAOoB,EAAPpB,QAAO6U,EAAAzT,EACP0T,iBAAAA,OAAmB,IAAHD,GAAQA,EACrB7W,EAAI7V,EAAAiZ,EAAAf,IAuBT,gBAvBSP,EAEoB,CAAA,EAAEA,GAA9B3B,iBAqBDtV,IAAA2Z,EAAA,CAAA,GACGzE,GAASxH,EAAWI,GAAK,SAAAoe,GACpBA,IACFb,EAAYtd,QAAUme,EAE1B,IAAEvS,IACGsS,GAAoB,CACvB5U,UAAWtK,EAAqBsK,GAnBN,SAAAlK,GAC5B,IAAMzN,EAAM2P,EAAkBlC,GAC1BzN,GAAOgsB,EAAwBhsB,IACjCgsB,EAAwBhsB,GAAKyN,EAEjC,IAeIgK,QAASpK,EAAqBoK,GAdN,WAC1BmJ,EAAS,CACP1b,KAAMoZ,SAcL7I,EAEN,GACD,CAACmL,EAAUoL,EAAyB1F,IAiDpCmG,gBA7CsBhM,eACtB,SAAAjN,GACEoN,EAAS,CACP1b,KAAMoZ,GACN9K,aAAAA,GAEJ,GACA,CAACoN,IAuCD8L,mBArCyBjM,eACzB,SAAAjN,GACEoN,EAAS,CACP1b,KAAMoZ,GACN9K,aAAAA,GAEJ,GACA,CAACoN,IA+BD+L,iBA7BuBlM,eACvB,SAAAmM,GACEhM,EAAS,CACP1b,KAAMoZ,GACN0L,cAAe4C,GAEnB,GACA,CAAChM,IAuBDiM,eArBqBpM,eACrB,SAAA+K,GACE5K,EAAS,CACP1b,KAAMoZ,GACNyL,YAAayB,GAEjB,GACA,CAAC5K,IAeD7J,MAbY0J,EAAAA,aAAY,WACxBG,EAAS,CACP1b,KAAMoZ,IAEV,GAAG,CAACsC,IAUFoJ,cAAAA,EACAD,YAAAA,EAEJ,CA7PA2B,GAAqBpN,iBAAmBA,gCnBqHxC,WAEM,UAAWc,EACb0I,QAAQC,KAAI,mEAOdlgB,EAAY,CACd","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,13,16]}